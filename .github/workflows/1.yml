# .github/workflows/build-binaries-with-patch.yml
name: Build ArangoDB Binaries (with patch)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: debian:12

    steps:
      # 1) Исходники вашего форка ArangoDB
      - name: Checkout ArangoDB sources
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # 2) Репозиторий с патчами
      - name: Checkout patches repo
        uses: actions/checkout@v4
        with:
          repository: https://github.com/nookyo/arangodb-patches    # <- замените на ваш org/user и репо
          path: patches
          fetch-depth: 1

      # 3) Применяем патч(и)
      - name: Apply patch(es)
        run: |
          cd $GITHUB_WORKSPACE
          git apply patches/arango.patch

      # 4) Устанавливаем зависимости
      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install --no-install-recommends -y \
            build-essential cmake clang-16 lld-16 llvm-16 \
            git-core libssl-dev patch python3 python3-clang-16 \
            libabsl-dev wget nodejs npm
          npm config set audit=false
          npm config set strict-ssl false
          npm install --global yarn
          apt-get clean -y

      # 5) Конфигурируем CMake
      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake "$GITHUB_WORKSPACE" \
            -DCMAKE_C_COMPILER=clang-16 \
            -DCMAKE_CXX_COMPILER=clang++-16 \
            -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld-16" \
            -DCMAKE_INSTALL_PREFIX=/opt/arangodb-3.0 \
            -DCMAKE_CXX_FLAGS='-w -std=c++17' \
            -DUSE_FAIL_ON_WARNINGS=off \
            -DUSE_GOOGLE_TESTS=off \
            -DCMAKE_BUILD_TYPE=Release

      # 6) Собираем
      - name: Build ArangoDB
        run: |
          cd build
          make -j"$(nproc)"

      # 7) Выкладываем артефакт
      - name: Upload built binaries
        uses: actions/upload-artifact@v3
        with:
          name: arangodb-binaries
          path: build/bin/
