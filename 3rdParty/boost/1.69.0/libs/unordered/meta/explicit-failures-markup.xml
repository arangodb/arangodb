<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2017-2018 Daniel James
 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file LICENSE_1_0.txt or copy at
 http://www.boost.org/LICENSE_1_0.txt)
-->
<explicit-failures-markup>
    <!-- unordered -->
    <library name="unordered">
      <mark-expected-failures>
        <test name="unnecessary_copy_tests"/>
        <toolset name="borland-*"/>
        <toolset name="sun-*"/>
        <note author="Daniel James">
            This tests whether inserting elements creates as few copies as I think
            is possible. If this fails it just means that the container might be
            a little inefficient.
        </note>
      </mark-expected-failures>

      <mark-expected-failures>
        <test name="compile_map_unordered_allocator"/>
        <toolset name="msvc-7.1"/>
        <note author="Daniel James">
            This test fail because it's using unordered's internal
            allocator traits, which doesn't work on Visual C++ 7.1.
            It normally uses the one from Boost.Container by default.
        </note>
      </mark-expected-failures>

      <mark-expected-failures>
        <test name="noexcept_tests"/>
        <toolset name="gcc-4.3c+"/>
        <note author="Daniel James">
            boost::is_nothrow_move_constructible and
            boost::is_nothrow_move_assignable don't seem to work on this
            compiler. I'd hope that anyone wanting noexcept support would
            use a more recent compiler anyway.
        </note>
      </mark-expected-failures>
      </library>
</explicit-failures-markup>

