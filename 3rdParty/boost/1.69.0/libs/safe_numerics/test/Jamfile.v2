#  Boost.SafeNumerics Library test Jamfile
#
#  Copyright (c) 2017 Robert Ramey
#
#  Distributed under the Boost Software License, Version 1.0.
#  See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt

import testing ;
import ../../config/checks/config : requires ;
project : requirements [ requires cxx14_constexpr ] ;

run test_add_automatic.cpp ;
run test_add_native.cpp ;
run test_and_automatic.cpp ;
run test_and_native.cpp ;
run test_assignment.cpp ;
run test_auto.cpp ;
run test_cast.cpp ;
run test_checked_add.cpp ;
run test_checked_and.cpp ;
run test_checked_cast.cpp ;
run test_checked_divide.cpp ;
run test_checked_left_shift.cpp ;
run test_checked_modulus.cpp ;
run test_checked_multiply.cpp ;
run test_checked_or.cpp ;
run test_checked_right_shift.cpp ;
run test_checked_subtract.cpp ;
run test_checked_xor.cpp ;
run test_construction.cpp ;
run test_cpp.cpp ;
run test_divide_automatic.cpp ;
run test_divide_native.cpp ;
run test_equal_automatic.cpp ;
run test_equal_native.cpp ;
run test_float.cpp ;
run test_interval.cpp ;
run test_left_shift_automatic.cpp ;
run test_left_shift_native.cpp ;
run test_less_than_automatic.cpp ;
run test_less_than_native.cpp ;
run test_modulus_automatic.cpp ;
run test_modulus_native.cpp ;
run test_multiply_automatic.cpp ;
run test_multiply_native.cpp ;
run test_or_automatic.cpp ;
run test_or_native.cpp ;
run test_performance.cpp # sources
    : # args
    : # input
    :  <variant>debug:<build>no # requirements
    ;
run test_range.cpp ;
run test_rational.cpp ;
run test_right_shift_automatic.cpp ;
run test_right_shift_native.cpp ;
run test_safe_compare.cpp ;
run test_subtract_automatic.cpp ;
run test_subtract_native.cpp ;
run test_trap.cpp ;
run test_xor_automatic.cpp ;
run test_xor_native.cpp ;
run test_z.cpp ;

compile-fail test_constexpr.cpp ;
compile-fail test_trap.cpp ;
