[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__disjoint.xml]
[section:disjoint_3_with_strategy disjoint (with strategy)]

'''<indexterm><primary>disjoint</primary></indexterm>'''
Checks if two geometries are disjoint. 

[heading Synopsis]
``template<typename Geometry1, typename Geometry2, typename Strategy>
bool disjoint(Geometry1 const & geometry1, Geometry2 const & geometry2, Strategy const & strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry1 const &] [Any type fulfilling a Geometry Concept ] [geometry1] [A model of the specified concept ]]
[[Geometry2 const &] [Any type fulfilling a Geometry Concept ] [geometry2] [A model of the specified concept ]]
[[Strategy const &] [Any type fulfilling a Disjoint Strategy Concept ] [strategy] [The strategy which will be used for disjoint calculations ]]
]


[heading Returns]
Returns true if two geometries are disjoint

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/disjoint.hpp>`

[include reference/algorithms/disjoint.qbk]


[endsect]

[section:disjoint_2 disjoint]

'''<indexterm><primary>disjoint</primary></indexterm>'''
Checks if two geometries are disjoint. 

[heading Synopsis]
``template<typename Geometry1, typename Geometry2>
bool disjoint(Geometry1 const & geometry1, Geometry2 const & geometry2)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry1 const &] [Any type fulfilling a Geometry Concept ] [geometry1] [A model of the specified concept ]]
[[Geometry2 const &] [Any type fulfilling a Geometry Concept ] [geometry2] [A model of the specified concept ]]
]


[heading Returns]
Returns true if two geometries are disjoint

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/disjoint.hpp>`

[include reference/algorithms/disjoint.qbk]


[endsect]

