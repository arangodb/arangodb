<shared_ptr>
	<id>1</id>
	<type>
		<string>reno_project</string>
	</type>
	<object>
		<reno_project>
			<config>
				<shared_ptr>
					<id>2</id>
					<type>
						<string>reno_config</string>
					</type>
					<object>
						<source>
							<string>../../include;.</string>
						</source>
						<match>
							<string>.*\.(cpp|hpp|h)$</string>
						</match>
					</object>
				</shared_ptr>
			</config>
			<layers>
				<shared_ptr>
					<id>3</id>
					<type>
						<string>reno_layer_map</string>
					</type>
					<object>
						<sorted>
							<size>7</size>
							<pair>
								<string>default</string>
								<shared_ptr>
									<id>4</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>275</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>5</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
																		<weak>1527395585</weak>
																		<size>17923</size>
																		<position>501</position>
																		<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
																		<weak>3538955481</weak>
																		<size>17891</size>
																		<position>26</position>
																		<strong>7B61EA7DDBD79E8746F9C7CB3CF771C2DD2DE98BC3F9892C30E53836BED6944B</strong>
																		<weak>209694521</weak>
																		<size>4632</size>
																		<position>8558</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>diag</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>6</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>quaternion, vector and matrix types</string>
															</title>
															<file_name>
																<string>quaternion_vector_and_matrix_types_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>7</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>288006AD21151C2FC58CA10EA1524439370D1EE023D9C163D9B430DBFD3DBFC1</strong>
																		<weak>1587447060</weak>
																		<size>1505</size>
																		<position>21297</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*=(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>8</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>1C078950EBDFFAC104D5D6859780BF43A531E51E4A866970ECDB1B931BF4C757</strong>
																		<weak>2490488981</weak>
																		<size>1928</size>
																		<position>442</position>
																		<strong>E74BB096466B13F2E28552C8DFFEA78391F3CEC8F59CFF900ABCCBFE527C122A</strong>
																		<weak>3521630317</weak>
																		<size>1896</size>
																		<position>26</position>
																		<strong>D00D42B29BD06F22D43795C654F92288A6BD3C6EE30FD8FC8C4B41B970C8FF0E</strong>
																		<weak>1213136203</weak>
																		<size>1044</size>
																		<position>842</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>deduce_vec2</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>9</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>16DD26DB40A8007EA8001066745DE736108DDA254E45AE2D4D6D782CE15435DA</strong>
																		<weak>1351896772</weak>
																		<size>215</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/operations.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>10</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
																		<weak>2394670759</weak>
																		<size>820</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/quat_traits.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>11</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>93E8802154BC3A73DA5F9AB710003DAF46A8E5E84B5FB2E87BDF1C08A4C1B6D6</strong>
																		<weak>3260093530</weak>
																		<size>67</size>
																		<position>531</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\inline.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_INLINE</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>12</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>E47276F54E5907414635B2276A52FCF1F97269B8667200196929D5B2B6973320</strong>
																		<weak>1091020759</weak>
																		<size>5210</size>
																		<position>50351</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>roty_mat(scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>13</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>1F050B7448BC14AD376D637DD15296197E38256B463235D6F654CAF674063611</strong>
																		<weak>2180442342</weak>
																		<size>792</size>
																		<position>13924</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator/(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>14</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>78179BBDDD2C75452CEE7FFDD097F51D3BEB23C7967388958D880678C54287FC</strong>
																		<weak>2313508410</weak>
																		<size>2495</size>
																		<position>442</position>
																		<strong>3CE5589C163484778B3973F71C2FA6B4C02826F1C167FB62556B3BDA9F77C50F</strong>
																		<weak>2861321746</weak>
																		<size>2463</size>
																		<position>26</position>
																		<strong>00385E8AFE4596EE95F95562CE3D5B127B0AFF23944A7E73D12897C4429341FB</strong>
																		<weak>2237023421</weak>
																		<size>2417</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>15</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>EA570BFE3AD7B028E545990C9DE15DE92596A6210620D3AE4B05BE7AB01206B3</strong>
																		<weak>2399670405</weak>
																		<size>46</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations4.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_operations4.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>16</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>321D400174ECF50ED86BE4A73045FBF126090E74126D11F4058C663B7212B13D</strong>
																		<weak>62135702</weak>
																		<size>100</size>
																		<position>700</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\inline.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_INLINE_CRITICAL</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>17</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>911C56FF593D1BD88CE4F4CECF884AE322988A4084EFE6C225072B34EC1497D9</strong>
																		<weak>844030593</weak>
																		<size>860</size>
																		<position>23395</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>normalize(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>18</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>7C1C06F350992CD8FFF38840E1B693EF5A485370716C2E4F65FEBC6582459EE9</strong>
																		<weak>2378870236</weak>
																		<size>656</size>
																		<position>391</position>
																		<strong>1986FDC803FC68E3C010E7113B6507BF2EF3C848F484AF8583DA3BDAD4DA0E5B</strong>
																		<weak>565159348</weak>
																		<size>624</size>
																		<position>26</position>
																		<strong>1EC89DE6325B2C87862547FFCDAAF5BA5F17D5C96EC311CCADE429E0D1CEC6E3</strong>
																		<weak>2577042525</weak>
																		<size>521</size>
																		<position>93</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits_defaults.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>quat_traits_defaults</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>19</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Boost QVM</string>
															</title>
															<file_name>
																<string>index</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>20</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>436968535752C1B1D4A79FC73D74FCAEDB915B3D1FB7A2282C083F26175E53E0</strong>
																		<weak>3648000548</weak>
																		<size>50</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations2.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_mat_operations2.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>21</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>D547B0C852E2C1AFC45639DC4D9F49F672B9A9DFE0A64B3B8DC5781DEFDC1288</strong>
																		<weak>2402422919</weak>
																		<size>46</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations2.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_operations2.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>22</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Index of View Proxies</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>23</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>A9B8FF8360177B12BFC5B2A980D814499E72692A6D409681EFB43C7E3FA4AD4E</strong>
																		<weak>234671098</weak>
																		<size>689</size>
																		<position>28376</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator+=(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>24</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>83CD0CA09E5ABA16B4F673EE5FC2C5D7B88BC19B33242205A9FD850C0EEC819A</strong>
																		<weak>1592935100</weak>
																		<size>2296</size>
																		<position>442</position>
																		<strong>3B6DFF89CF3F88BBEDDBE47093999B245CA6155DF88C4D7704BE1DC976845242</strong>
																		<weak>2291612308</weak>
																		<size>2264</size>
																		<position>26</position>
																		<strong>1B644504B125532F201621BA8A16D7888AB9BA188356DEF8C3E8531A7C4C9784</strong>
																		<weak>26476564</weak>
																		<size>983</size>
																		<position>105</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>deduce_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>25</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>CAB135F843A9FBE2D9B23D52015BDE5C5605E41F813AEAB607EC88B3A59E31D1</strong>
																		<weak>1581505429</weak>
																		<size>5788</size>
																		<position>37498</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rot_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>26</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>4</size>
																		<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
																		<weak>2394670759</weak>
																		<size>820</size>
																		<position>323</position>
																		<strong>2987AF079555D7D7AAEBD5131A984CEF6986395A6CC35E8ECC670BCA65E917A2</strong>
																		<weak>3963862655</weak>
																		<size>788</size>
																		<position>26</position>
																		<strong>473C0941872ACCAD17DB9AA6D35E17339C89F66BC34C46419CE289C0C5869CF6</strong>
																		<weak>3681624261</weak>
																		<size>135</size>
																		<position>36</position>
																		<strong>A7921C4A860BD9C259C9F729BCE569BBB1D9B1A3625432AE1A0818CAF776EB31</strong>
																		<weak>3309243212</weak>
																		<size>39</size>
																		<position>81</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>quat_traits&lt;Q&gt;::scalar_type</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>27</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>549B1B042A347B93B6AF41DB4DF17A611FACF6DDCDCABEDA6BCBF552C1489687</strong>
																		<weak>3749759031</weak>
																		<size>784</size>
																		<position>16852</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>28</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>4FAFB93F530EE98CA7EF06F8BE94F8AC505523DB0AB5EA938FCBBD223527E370</strong>
																		<weak>2875589293</weak>
																		<size>2047</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/deduce_vec.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>29</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>macros and configuration</string>
															</title>
															<file_name>
																<string>macros_and_configuration_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>30</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits&lt;V&gt;::read_element</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>31</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>E5EE92EE7880011EE0D64E74A8B0A2E7C9245479F38E282717F573D779E9F45D</strong>
																		<weak>3902732331</weak>
																		<size>934</size>
																		<position>2724</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>cmp(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>32</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>DB8AE4BC07553D01DDD060C46423B330E90DE0939A5EB38DC9A1944736510C1D</strong>
																		<weak>2808381593</weak>
																		<size>1321</size>
																		<position>21343</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*=(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>33</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>7CFCA5F600370F2366F7F1B0DCE4C1CA4A833ECD22E6847F3E9FC78BF59E0F30</strong>
																		<weak>350625407</weak>
																		<size>4955</size>
																		<position>22719</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>swap_rows</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>34</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>861BAD8C651858682BCC800D9BC85FF5F12AE165DF9F3CB42E16226BC1F15152</strong>
																		<weak>3369844770</weak>
																		<size>3596</size>
																		<position>14684</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>neg_row</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>35</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>00984703E475647DD9E66A1CF47CC65B9CC7B5D3F36B360039D90822B4509D72</strong>
																		<weak>1874013843</weak>
																		<size>1235</size>
																		<position>443</position>
																		<strong>9796B8E16C70FA779CAD1998E83822ADD2BEAF798A1D255B38F3492968F9DD27</strong>
																		<weak>2086348395</weak>
																		<size>1203</size>
																		<position>26</position>
																		<strong>E77688DFC8AEFA8D8263DB54A0F7F6E02F2CFE30AB4A0BB675B2F498001A43D7</strong>
																		<weak>4167511049</weak>
																		<size>182</size>
																		<position>88</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_quat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>deduce_quat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>36</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>BFA60DF1E91012ADC2E468708F87FFF4F83CB470102764E788F2821BFD184DCB</strong>
																		<weak>1625094152</weak>
																		<size>3091</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits_array.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/quat_traits_array.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>37</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>11C1AE68567EC7C5911611D2E286E7CD26CA55CA4E446501367231E320DB5477</strong>
																		<weak>74044838</weak>
																		<size>3130</size>
																		<position>47227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotz_quat(scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>38</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>02A4FCA78CFBB5C8CE4A60C6AA81517EB351CDD28EBE2A959192113E7DDE72D1</strong>
																		<weak>967310833</weak>
																		<size>21244</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/map_vec_mat.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>39</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>CBE5E084A540BB4E63CA884E1E5FA3D46CBF3AC9988E8CE8F846597BDC92A810</strong>
																		<weak>1102930952</weak>
																		<size>366</size>
																		<position>7445</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_identity(mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>40</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>7EBEEC0994922955DDEC36B023AAC2FA783963AF3AF01BF8A6332FF282605004</strong>
																		<weak>3420356563</weak>
																		<size>476</size>
																		<position>43288</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_rot(mat,vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>41</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>93F5E8019F9CA9A13661D60F67EB59C2373267DD6C8C500FD29DCE67A62CE000</strong>
																		<weak>1896373155</weak>
																		<size>355</size>
																		<position>39324</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate(quat,vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>42</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>AAA5973C5768F3DA8F32BAE9EE840B59C61EB20191F15ABD4F027D415A8F6BC4</strong>
																		<weak>3545701686</weak>
																		<size>98</size>
																		<position>600</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\inline.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_INLINE_TRIVIAL</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>43</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>36B0B7E98A41DCD596369738639C82D7BC724D0A20AE3C03F5314D21DE65DACD</strong>
																		<weak>4017544201</weak>
																		<size>770</size>
																		<position>432</position>
																		<strong>18DE9CD6558A56D25CA4980068F816482049145C691D470606C024122133509B</strong>
																		<weak>423154657</weak>
																		<size>738</size>
																		<position>26</position>
																		<strong>56745E1F2F91A6F6B07813DB5030D5C7B0C3E3D0380F89025FF31799873E7DA1</strong>
																		<weak>1939524236</weak>
																		<size>692</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\detail\quat_assign.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>assign(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>44</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>quaternion operations</string>
															</title>
															<file_name>
																<string>quaternion_operations_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>45</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>D9F43B85D5D56635D7D4F3F0C17D613923C0FEFC04852DCF261F4A1C334856D3</strong>
																		<weak>4024936300</weak>
																		<size>593</size>
																		<position>17745</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mag_sqr(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>46</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>E2A33D3D84E87BA234CF4D2716BC3BE8BE4A7F6075A2E7E2FED80E7B9D2BDDF5</strong>
																		<weak>774816254</weak>
																		<size>753</size>
																		<position>3720</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>convert_to(mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>47</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>1FBCA679225AA536BEB718F8044611FEF70DC1D99C8AC79ECE8E41095E37263C</strong>
																		<weak>3672641366</weak>
																		<size>2918</size>
																		<position>7519</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>scalar_cast(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>48</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>361818B43FCEEF2E68F727AEE304BD8D850E043C8DDD5E0874696CDFA81D0CCB</strong>
																		<weak>2424605903</weak>
																		<size>518</size>
																		<position>13404</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator/=(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>49</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>matrix operations</string>
															</title>
															<file_name>
																<string>matrix_operations_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>50</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>8A211470A69E5752F5B22C40FEC4815D2700D1FE0B3D631AAA12320291930E05</strong>
																		<weak>2291363803</weak>
																		<size>1557</size>
																		<position>451</position>
																		<strong>A7B2FA3826FB11744EAFED43F50F821B4443E653AB60ADF771A555BB2227D356</strong>
																		<weak>3843778483</weak>
																		<size>1525</size>
																		<position>26</position>
																		<strong>7B8EA84E20E66DB1BBD002EAF66F774545DC494151F9597DA8B7A3E2E294125B</strong>
																		<weak>254041694</weak>
																		<size>1479</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\detail\vec_assign.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>assign(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>51</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
																		<weak>2210930467</weak>
																		<size>6705</size>
																		<position>463</position>
																		<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
																		<weak>3207075579</weak>
																		<size>6673</size>
																		<position>26</position>
																		<strong>236D127B0A24452A82635A805030F49EDB342EB0FC79CD8DBA8BE9FE4D2711FD</strong>
																		<weak>3649849066</weak>
																		<size>1236</size>
																		<position>96</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(mat,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>52</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>91BEE5C5F9F240A7D62139EA02650EAE314754B29600FC9E34EAFEC76E6FB6B4</strong>
																		<weak>954351199</weak>
																		<size>224</size>
																		<position>365</position>
																		<strong>0C29E96B7FDA3EF5600D4DD02ED0BA86C2966467637FF7525933D772A1C1A116</strong>
																		<weak>3404871223</weak>
																		<size>192</size>
																		<position>26</position>
																		<strong>510C300CB59A35401B0C99ACE6F090156D77EF4E5AE2C015AE5E9CC857A03535</strong>
																		<weak>1967402210</weak>
																		<size>146</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\enable_if.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>enable_if</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>53</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>2CFB75164F6F1CBE6110BF7B484E5638738B64548F676DE8494E7D7B6E5DF10B</strong>
																		<weak>3875338736</weak>
																		<size>952</size>
																		<position>18116</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-=(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>54</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>questions and answers</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>55</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>90B08E55EE8956FC2719CC972AB74C3387BDB034E249612087B6714F06CE6415</strong>
																		<weak>2581546570</weak>
																		<size>276</size>
																		<position>42873</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_rotx(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>56</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>2BA1DC244BA923B4B741FBB754D76F67FE56ED18BDD9E46B08C0F23DF06ABBE0</strong>
																		<weak>2642099996</weak>
																		<size>1162</size>
																		<position>20073</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>57</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>1BA0FCA3C5ACC8CC7EAAE4D95AEF4A1D41CA659271A960450A577005E2920759</strong>
																		<weak>409988736</weak>
																		<size>916</size>
																		<position>16083</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator/(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>58</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>2FD32AFEB06DE2A63241E32CF04DE61DB0AD5918CD42B128E6662033A12F1EB7</strong>
																		<weak>3114984899</weak>
																		<size>2058</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>59</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
																		<weak>2530702481</weak>
																		<size>466</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_traits.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>60</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>3B4744D1596A68B12032A037C16C39A09F46DD7698194DF406F8D4E63F88FC47</strong>
																		<weak>3649049126</weak>
																		<size>50</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations4.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_mat_operations4.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>61</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>DC50662E20554661948A10AF72D1E748058592639000CD61CCA8D1526A126209</strong>
																		<weak>243381956</weak>
																		<size>645</size>
																		<position>9938</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_identity(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>62</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>BE19A1140BAF404829CFA9182A383693D1BEDA2CE40EB3EFAF0F8DE895337602</strong>
																		<weak>1255227846</weak>
																		<size>217</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>vec_traits_array.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>array vec_traits example</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>63</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>2AEFDFA8AA23D56D0F80D8EA62CD0014CBB2D2F8104E1C41F8ABC32E7A6B3904</strong>
																		<weak>3803367396</weak>
																		<size>792</size>
																		<position>22864</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*=(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>64</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>C3FEA0573DE609A99DF9AA0BDA09F833B64D1E072D68010DEFD9F97E05BF1CE3</strong>
																		<weak>2222994153</weak>
																		<size>1066</size>
																		<position>27308</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>normalize(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>65</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>c arrays</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>66</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>tutorial bar</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>67</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>E98BE774DF07E1860BAC91B1EE6391BFDE8ACFAE018A2B5B8AAB2CD0047620C7</strong>
																		<weak>2614269955</weak>
																		<size>550</size>
																		<position>11325</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>perspective_rh</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>68</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
																		<weak>1061339090</weak>
																		<size>21066</size>
																		<position>501</position>
																		<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
																		<weak>82163626</weak>
																		<size>21034</size>
																		<position>26</position>
																		<strong>9A621B3974B4A36CA4612BE7E09BEC93B12A05624E4CA97EA25160BCC2D58067</strong>
																		<weak>1130197037</weak>
																		<size>4333</size>
																		<position>4491</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>row_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>69</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
																		<weak>2530702481</weak>
																		<size>466</size>
																		<position>323</position>
																		<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
																		<weak>4238437481</weak>
																		<size>434</size>
																		<position>26</position>
																		<strong>F1AEBEBA46AF836FD8C926875611E4A44DA6576002A6AB8A39CD1202C5D34325</strong>
																		<weak>2206674439</weak>
																		<size>176</size>
																		<position>248</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>is_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>70</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>E1065A5615E915C8819652817E2F7F6A43B1CA49492E422EFE5A4AC64D15208B</strong>
																		<weak>665589743</weak>
																		<size>4955</size>
																		<position>27736</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>swap_cols</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>71</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>C00267E38148DB556831FACDE1DAEB21184A036AB5BE3809F6891C43571B02C3</strong>
																		<weak>1459211421</weak>
																		<size>796</size>
																		<position>15994</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-=(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>72</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>C9F301F6834440D2963CA9532503A4A0896DF6683AAE0EF90E7C49AC19FA0F76</strong>
																		<weak>4112187996</weak>
																		<size>993</size>
																		<position>17061</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator==(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>73</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>28854EC2300D91AE54546892BD32E6498559F6BA2FD3FFED676D7BC5C985A8F3</strong>
																		<weak>2649048134</weak>
																		<size>221</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>mat_traits_array.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>array mat_traits example</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>74</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>2E17D475B558FCC1C153B92C520DC152582B0ABFF84BCC482B56A4B00EF84A46</strong>
																		<weak>3268018344</weak>
																		<size>2089</size>
																		<position>5066</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>zero_vec</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>75</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>0B31976D56B7578A3C24B2A0B218895A6AC9E26AA74A1086429124146B1D587F</strong>
																		<weak>857592559</weak>
																		<size>819</size>
																		<position>11258</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator/(vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>76</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>B0854C15114E02F42844BE05CDF16F0FFCD6B05290D2239ED6585EE935A8E221</strong>
																		<weak>309919905</weak>
																		<size>960</size>
																		<position>25173</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator+(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>77</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>generic programming utilities</string>
															</title>
															<file_name>
																<string>generic_programming_utilities_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>78</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>A17E8422EED0C4655D6EB57B340751558458992ED9EB5732BD1C521FFB736084</strong>
																		<weak>1747071240</weak>
																		<size>5040</size>
																		<position>9582</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>del_row_col</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>79</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>2796A58569D42ED93E92797A964EDD12666C64DC7B0EB7147AB0FD0818F65F09</strong>
																		<weak>872817502</weak>
																		<size>3189</size>
																		<position>474</position>
																		<strong>7F04DF2437171CBAA76DD82ADC3A393170E6A96EE91E9C7A1F0F92D535BF5D84</strong>
																		<weak>2289638198</weak>
																		<size>3157</size>
																		<position>26</position>
																		<strong>E4AAE0895754BE3D722D7464589F0BD2FE02CCFDC30354B151A6A0E428ED8A70</strong>
																		<weak>2776314383</weak>
																		<size>185</size>
																		<position>2962</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits_array.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>ptr_mref</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>80</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>433FB35009D478ADC7CC0929A4E25AAE846BB4F52A1F039ED9FCF940B9D80915</strong>
																		<weak>656025566</weak>
																		<size>964</size>
																		<position>29067</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator+(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>81</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>CE5475DD258041D46E39FAD0121415A41893B255B50FE2E66D0FFD81736CB74D</strong>
																		<weak>286625178</weak>
																		<size>2641</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits_array.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_traits_array.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>82</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
																		<weak>1061339090</weak>
																		<size>21066</size>
																		<position>501</position>
																		<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
																		<weak>82163626</weak>
																		<size>21034</size>
																		<position>26</position>
																		<strong>E4CDA256E65BD2542E987D876CE6FE256146DC8FA7166238E3F9F02FE49E361D</strong>
																		<weak>3033972061</weak>
																		<size>4574</size>
																		<position>16390</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>diag_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>83</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>0594A0ECC09942FAAFFC787AAFF28FE890A838A4B06857734C376502BAD52B28</strong>
																		<weak>2928186431</weak>
																		<size>66012</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_operations.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>84</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>3E6B6F902891F338DB336402C11D7E251A7EBE31C961FBBD399C3ADF7675E9E0</strong>
																		<weak>1836621315</weak>
																		<size>1424</size>
																		<position>23186</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>85</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Views</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>86</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>8174550BE63906B3B846243204CA05B2D20A9A8BD6D2CDA1E29DD3681E73C6DD</strong>
																		<weak>1588777717</weak>
																		<size>4681</size>
																		<position>96</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>del_row</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>87</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>187B2250361ACB57E34259AED05434E93B73601015600E2984BDAC80DE2CA925</strong>
																		<weak>3270845686</weak>
																		<size>105</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\swizzle.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/swizzle.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>88</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>4E76C37479A073600FE2414C2A049DE9B9013D81CEE9027998EB9497A96DEEBC</strong>
																		<weak>3614560266</weak>
																		<size>4681</size>
																		<position>4839</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>del_col</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>89</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>A1F7EFAA5299201C357D33995D63A92392987A8EBBE9EED8C20AC3084E17306E</strong>
																		<weak>986240137</weak>
																		<size>833</size>
																		<position>13248</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator==(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>90</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>D7309EFDD18F8459483B113AA441A4A25E88DE36815BA1F398E06AC06CD2C259</strong>
																		<weak>1796283635</weak>
																		<size>89</size>
																		<position>260</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\static_assert.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_STATIC_ASSERT</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>91</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>5AC3A912591E64D1DC0B9A33E3B007E35F4649858E416E572BE7803F7243B935</strong>
																		<weak>287135679</weak>
																		<size>302</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\inline.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_FORCE_INLINE</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>92</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>4D62CB4C3299CFEA85267212A627203D812A07D347DD162F5D32E67817AB9AAB</strong>
																		<weak>1691003053</weak>
																		<size>1768</size>
																		<position>33868</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>zero_quat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>93</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>2BAAD9D49DA6E021FD0D8D6FC52FB1ED8F98180BF837B80422B66135189A7E76</strong>
																		<weak>575606148</weak>
																		<size>10037</size>
																		<position>365</position>
																		<strong>81FB553A3F0B95EB315DF04EFABF7C1A144F4ECD4E9B7382438EDA6C4CA3F6C1</strong>
																		<weak>3099067740</weak>
																		<size>10005</size>
																		<position>26</position>
																		<strong>CA4D11BF95B4743E318C05D032949CCD6C3899EE4320B593CDDB24F3CF22AE34</strong>
																		<weak>1130298375</weak>
																		<size>9959</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_scalar.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>deduce_scalar</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>94</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits&lt;V&gt;::write_element</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>95</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>C3FAF68A09D6A9C23C5CD3846F5FC87C6CD8DA50A65A4FB5D06C8F4B7E618774</strong>
																		<weak>1213605622</weak>
																		<size>1292</size>
																		<position>443</position>
																		<strong>A56706EC53C13D739EC516C8264B20E8776AC2B58B1AAC461BE589233F22CF48</strong>
																		<weak>4141162190</weak>
																		<size>1260</size>
																		<position>26</position>
																		<strong>8994730A6711B3B286F056D270BE4D5E8717DCFD53611FCCDE25C56EF0C5D57B</strong>
																		<weak>1232999801</weak>
																		<size>1214</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>quat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>96</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>FE097205F6504E8FFFC08D6ED14B53D5F1F34A5B84C31B0C7CAADA39A8184D46</strong>
																		<weak>3570194523</weak>
																		<size>865</size>
																		<position>14143</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mag_sqr(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>97</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>3F1584C70E324580A0E293069F66CBBEAFAE62E5F6D83773DC53E02D2DEFA517</strong>
																		<weak>2721474376</weak>
																		<size>3230</size>
																		<position>11937</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>scalar_cast(mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>98</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>409E4D60B98EF741A3FD018BBBCD23F43C8C64BE667BAA55C8734229029BD7CA</strong>
																		<weak>23846357</weak>
																		<size>2521</size>
																		<position>747</position>
																		<strong>E5C8FE91924F0A023A765559536DD48841CE22298C788B34C29ECE3630D6A3F7</strong>
																		<weak>3033388461</weak>
																		<size>2489</size>
																		<position>26</position>
																		<strong>DF86FD9EEF444F73D273527DA311A052CD5F1E9EB07228147E5C668682BC8286</strong>
																		<weak>1303890334</weak>
																		<size>701</size>
																		<position>1222</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>tutorial.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits example</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>99</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>CFD08F7E58194E61F7480503A3E0F2FCB83080F4C99182BAD2F7ED40913EF720</strong>
																		<weak>2855819363</weak>
																		<size>3340</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits_array.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_traits_array.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>100</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>253F2FDC7485149CECF0C89574D0A1D652F8530AAAE71D1F03115F6D44C4AE3F</strong>
																		<weak>3648524837</weak>
																		<size>50</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations3.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_mat_operations3.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>101</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>vector operations</string>
															</title>
															<file_name>
																<string>vector_operations_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>102</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>94B992A48A1E88E6CFBC0B0F4FA2849E4D3AC86B6BC3A416088375061E1534CE</strong>
																		<weak>3964755532</weak>
																		<size>2442</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits_defaults.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_traits_defaults.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>103</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>D442EAF44B63D468477539E205CC5677E40863AEEE1BBCFEEEE117D12805F9DB</strong>
																		<weak>488639931</weak>
																		<size>39</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\swizzle3.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/swizzle3.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>104</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>6486869BC618CF1722DD1567C33F43C43367F2C128261293E61C34D20D606D99</strong>
																		<weak>2399146116</weak>
																		<size>46</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations3.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_operations3.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>105</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>09227650BD7548F36799062FF2A92C8F5BE42BCC5C1F54FA1A8E952F94454892</strong>
																		<weak>1374872986</weak>
																		<size>31117</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_operations.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) header, but specifically for 2D vectors. You can include it instead of (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) if you know you don&apos;t use vector objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>106</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>276AC54B76F2E0EF8C22EAD3697FD4CFD6179ECD168415F2C717202C45397B54</strong>
																		<weak>2010323982</weak>
																		<size>10079</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_scalar.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/deduce_scalar.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>107</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>27B897CC21B1DE8FF3259AA531562ECD6E2F4FEDEA9F21BD22C03F4DC4DD63BE</strong>
																		<weak>2493294537</weak>
																		<size>5210</size>
																		<position>44298</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotx_mat(scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>108</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>EBF00384C7ABC8B96920DF58B2180126C2F44586F2D38234E70ADE9297E6B646</strong>
																		<weak>316460131</weak>
																		<size>1658</size>
																		<position>62461</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>inverse(mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>109</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>B2B15854D758B3C567F1F9FEA05B165BA1E7E8B3FF31D7A58A687EE26240B5DF</strong>
																		<weak>3163465833</weak>
																		<size>5214</size>
																		<position>56404</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotz_mat(scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>110</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>3005136E068FFF69E97261CA0E0A858F0F504B38E4E75360ED1CC5399917B056</strong>
																		<weak>1358900239</weak>
																		<size>138</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\throw_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/throw_exception.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>111</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>C484F07CBF4E9908922A85B02A7FD0A9A55EF62BABFFE05D3C6A9F0A700792F0</strong>
																		<weak>1555561894</weak>
																		<size>7969</size>
																		<position>471</position>
																		<strong>D947858FA5362B88B7B7DBEAAF36778243BED5451E227C759CBBEBC683F3BB36</strong>
																		<weak>2411918718</weak>
																		<size>7937</size>
																		<position>26</position>
																		<strong>9D8BFE4B1B8A2DCBF140DDBA5F96420071F3A4F355BC06C8261E5B83AC004295</strong>
																		<weak>3204765741</weak>
																		<size>7771</size>
																		<position>96</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_access.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>accessing vector elements</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>112</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>4B8F2A88636963C52698B8AE67E06CBD030609936BD3C95FC192A817D27BC444</strong>
																		<weak>1267844370</weak>
																		<size>724</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits_defaults.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/quat_traits_defaults.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>113</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>58AF417B539B408D8E2C581ECDD98DA584779BC6C292C0E3E78AC40CA12CF82C</strong>
																		<weak>1427670282</weak>
																		<size>545</size>
																		<position>432</position>
																		<strong>25C91D9856E3696DD78C027FBFDD89AA6A8E06A32CEEB5530425B7017C353FF2</strong>
																		<weak>409435362</weak>
																		<size>513</size>
																		<position>26</position>
																		<strong>2CCEC8BDAC00E8EBAFEA8BDE6A05A08E5FA48FDD579CDAC9FC33B99A8CAE32BD</strong>
																		<weak>1292440637</weak>
																		<size>59</size>
																		<position>387</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\error.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>zero_determinant_error</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>114</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>4</size>
																		<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
																		<weak>2530702481</weak>
																		<size>466</size>
																		<position>323</position>
																		<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
																		<weak>4238437481</weak>
																		<size>434</size>
																		<position>26</position>
																		<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
																		<weak>2547266806</weak>
																		<size>210</size>
																		<position>36</position>
																		<strong>438449DABBE1C710D102DBEA899BA33ED001AF9B5CB0EDD94DAB0461563695BF</strong>
																		<weak>3043887716</weak>
																		<size>38</size>
																		<position>80</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits&lt;Matrix&gt;::rows</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>115</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>83CD0CA09E5ABA16B4F673EE5FC2C5D7B88BC19B33242205A9FD850C0EEC819A</strong>
																		<weak>1592935100</weak>
																		<size>2296</size>
																		<position>442</position>
																		<strong>3B6DFF89CF3F88BBEDDBE47093999B245CA6155DF88C4D7704BE1DC976845242</strong>
																		<weak>2291612308</weak>
																		<size>2264</size>
																		<position>26</position>
																		<strong>BF69BA2306F585D02D3E60F5E0A99837E24ECD0DA2D0D3A3468967767A07144A</strong>
																		<weak>2364808611</weak>
																		<size>1164</size>
																		<position>1090</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>deduce_mat2</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>116</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>64BCE00E4E1F33BB65620BE148AC7D9471F4A54D54C01E0898FD3985766CAE82</strong>
																		<weak>2021959840</weak>
																		<size>598</size>
																		<position>18340</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mag(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>117</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>quaternions, vectors, matrices</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>118</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>C418C87CE6A3D4988FEDFE218468F1A8303BBA2F50FAA3DC7E429F70455B7420</strong>
																		<weak>3070938325</weak>
																		<size>1879</size>
																		<position>451</position>
																		<strong>9D3F30F51BD97954CA198CDD78AE965C7633B321C1FD45E62FC74FFC3C860C8C</strong>
																		<weak>2710881453</weak>
																		<size>1847</size>
																		<position>26</position>
																		<strong>4BDD7E1B9C4B65FF6E45DAB39232F15EC74E4864E6CE53B7AF97B7DAFCF2DFDE</strong>
																		<weak>203275096</weak>
																		<size>1801</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\detail\mat_assign.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>assign(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>119</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>quaternion-vector operations</string>
															</title>
															<file_name>
																<string>quaternion-vector_operations_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>120</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Index of Types</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>121</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
																		<weak>1527395585</weak>
																		<size>17923</size>
																		<position>501</position>
																		<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
																		<weak>3538955481</weak>
																		<size>17891</size>
																		<position>26</position>
																		<strong>EF0F727CEF8F37ADB26C0E414F6BD9DE32206A91C48FF6CA62A00C2ACA7C0501</strong>
																		<weak>1149058756</weak>
																		<size>4169</size>
																		<position>96</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>col</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>122</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>7AAE9499F44EE0DBC5AA23A1178804B7A7D6BCD9F3EA978F952107C9608E4B86</strong>
																		<weak>1162258026</weak>
																		<size>667</size>
																		<position>2231</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>convert_to(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>123</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>7C1D5FA798C79770944D446214F27ED1FB371ADD9BAD905372AF73B26FEE6345</strong>
																		<weak>182535133</weak>
																		<size>271</size>
																		<position>43151</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate_x(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>124</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>17904E01491C48ACBD91531989A3DADA8CA41FF80C6890D53D5DF08635C42BA1</strong>
																		<weak>2029835593</weak>
																		<size>835</size>
																		<position>21243</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator!=(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>125</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>0008FDDBF07641B221F5B9AFAE507B999478BC9B8DFE8CBDF3FEE7F57C2EF72B</strong>
																		<weak>2910024480</weak>
																		<size>18101</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/map_mat_vec.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>126</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>594CB4DDE0B198F8E98B6802AACB0430B58F8C5A0494FADEDCB8B410655206E4</strong>
																		<weak>3004868159</weak>
																		<size>589</size>
																		<position>35638</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_zero(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>127</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>05F488EF3380F6EFF59E02CD64EA966C3BE1C4A737A20700BD791A4FD7197DB7</strong>
																		<weak>2070314247</weak>
																		<size>470</size>
																		<position>43766</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate(mat,vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>128</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>7EEA43F8736B954ECEB9477AF7F1E42D87D66B477EE8684F7BC49D6C4B4DC2DE</strong>
																		<weak>2883519260</weak>
																		<size>995</size>
																		<position>27132</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator!=(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>129</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>SFINAE/enable_if</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>130</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>0BCECA63125E1B73EC133694C17676F2B7FD5CC60BA547C777BCAA500AF23AFC</strong>
																		<weak>3970075568</weak>
																		<size>4051</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>interoperability.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>Interoperability</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>131</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
																		<weak>2210930467</weak>
																		<size>6705</size>
																		<position>463</position>
																		<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
																		<weak>3207075579</weak>
																		<size>6673</size>
																		<position>26</position>
																		<strong>BF2B8C34C02622B620263C2D7E177FC0A3C8CE41F27959FEF17E87834F3B8CF9</strong>
																		<weak>2942060246</weak>
																		<size>1236</size>
																		<position>1334</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(vec,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>132</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>E4B9893DE662EFCD4826123E9EF7D5C43292900009752B23F765003C9B95278D</strong>
																		<weak>1149226474</weak>
																		<size>2561</size>
																		<position>470</position>
																		<strong>4D9D39869F37EF6CF609F8FEC537C42DCE547031AA2D905311035430FD61AFE1</strong>
																		<weak>1278133698</weak>
																		<size>2529</size>
																		<position>26</position>
																		<strong>4FF0380DAE7EE6514620DC8040DB32D467C9F0AE4CF3CA59EF9C46A7D7AA6EBE</strong>
																		<weak>2516999627</weak>
																		<size>1074</size>
																		<position>321</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>is_scalar</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>133</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>50433FAA9D0BED305FEB032FE872D49F1DA5F5AD0F047E34F79DB290A1DEBAA6</strong>
																		<weak>649647653</weak>
																		<size>862</size>
																		<position>15070</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mag(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>134</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>FABB01A2FF79B086D18E380BEA06673580919C829EDB885049D81AD465F0A479</strong>
																		<weak>2260804154</weak>
																		<size>2192</size>
																		<position>7744</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>identity_quat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>135</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>C3E0DC2C199851D953AEB9933D41F5C7238CC66ED061C1C2F6882A8E64F4E514</strong>
																		<weak>484122276</weak>
																		<size>2172</size>
																		<position>5271</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>identity_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>136</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>12686C63D6FDD2F9EA805144CB8DD47DCBE042A3E2B7F466C012D9D63C094561</strong>
																		<weak>2598969295</weak>
																		<size>102</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\assert.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/assert.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>137</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Index of Functions</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>138</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>AB94049EA854468096DA207DF75182071520E1938CED08E90A7097761A2516B0</strong>
																		<weak>2589935180</weak>
																		<size>276</size>
																		<position>46616</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_roty(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>139</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>quat_traits&lt;Q&gt;::write_element</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>140</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
																		<weak>1061339090</weak>
																		<size>21066</size>
																		<position>501</position>
																		<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
																		<weak>82163626</weak>
																		<size>21034</size>
																		<position>26</position>
																		<strong>ACC9393D5B4EAA40971E8F79D61819AE6368E5622AD5E2BEC8C101BD3CCA6668</strong>
																		<weak>3531792127</weak>
																		<size>7442</size>
																		<position>8886</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>translation_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>141</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>624711D5211AE3F4F1A9BDB8C3C25411348AF464D39739E4925930CB5B59B903</strong>
																		<weak>1518392064</weak>
																		<size>819</size>
																		<position>20362</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(scalar,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>142</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>2C6F77C3445DF20A26AEF22EAC68F7C283467E28CA4468FF91A09EC10F6A00FD</strong>
																		<weak>3251372405</weak>
																		<size>962</size>
																		<position>17698</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>143</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>E2BAA39D769420C549FB2428C5449894C4212106C4C607C903BCD3EB8BF4D44B</strong>
																		<weak>2598323790</weak>
																		<size>276</size>
																		<position>50359</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_rotz(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>144</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits&lt;M&gt;::read_element_idx</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>145</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>type traits</string>
															</title>
															<file_name>
																<string>type_traits_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>146</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>A9BAC47BA39F733408310940707F658FE59C1272BD3450E88904674451B25AE8</strong>
																		<weak>336242201</weak>
																		<size>2670</size>
																		<position>36289</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rot_quat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>147</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>B27E03D92E6FAD7D8075C3BAD05E7823E39B875DA8B47D5C67D2A14D55DB42E5</strong>
																		<weak>487943384</weak>
																		<size>2415</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/deduce_mat.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>148</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>B92144F96FB975995C297303A86EC469B2BF2BFC16701B3713535B266F474E9E</strong>
																		<weak>1478344165</weak>
																		<size>3595</size>
																		<position>18342</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>neg_col</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>149</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
																		<weak>744532336</weak>
																		<size>32793</size>
																		<position>509</position>
																		<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
																		<weak>1367712072</weak>
																		<size>32761</size>
																		<position>26</position>
																		<strong>E963BD7ED8DD48F34FEEC86D2EE372E6531FF3743893FC62AB5E7DA91D4BBAFB</strong>
																		<weak>3857298664</weak>
																		<size>658</size>
																		<position>21999</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>transposed</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>150</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>48D1BEC7DC7FF65FFACE1194023602EC21AFF9C2FDAAA06EC900CC9412352E57</strong>
																		<weak>2881545160</weak>
																		<size>881</size>
																		<position>19130</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-(mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>151</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>83840FEAAA3CA69E2217467489FEFC422E593964539B30FE3FBB4639B1EBEBD5</strong>
																		<weak>906799940</weak>
																		<size>654</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\error.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/error.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>152</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>4</size>
																		<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
																		<weak>2530702481</weak>
																		<size>466</size>
																		<position>323</position>
																		<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
																		<weak>4238437481</weak>
																		<size>434</size>
																		<position>26</position>
																		<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
																		<weak>2547266806</weak>
																		<size>210</size>
																		<position>36</position>
																		<strong>90F83D824B24E6DC637DD7BCA96CB2905EF312478B9A96CBBC6E308DC933423F</strong>
																		<weak>3029994058</weak>
																		<size>38</size>
																		<position>118</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits&lt;Matrix&gt;::cols</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>153</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>vector-matrix operations</string>
															</title>
															<file_name>
																<string>vector-matrix_operations_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>154</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>27B64D3BA86262629B9FAAD6B451D1CFBE5055B9FAD473D5A11F55D318D8F7FC</strong>
																		<weak>488115642</weak>
																		<size>39</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\swizzle2.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/swizzle2.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>155</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits&lt;V&gt;::read_element_idx</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>156</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>matrix-to-matrix view proxies</string>
															</title>
															<file_name>
																<string>matrix-to-matrix_view_proxies_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>157</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>42A1F84DB9D82341ACB6835538251B5B8933380BC32B8A75EF90CD32A2D59B35</strong>
																		<weak>559634728</weak>
																		<size>1355</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_quat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/deduce_quat.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>158</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>707340B277298501727B83FA9DF3EBD8BB548B050E86FFDDC877AB42567EBA80</strong>
																		<weak>4275401549</weak>
																		<size>1396</size>
																		<position>23718</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>159</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>D28CAF68BA9BE8E389CA37CEFC41E8D20C3CCAC1816B7CBE05C1600CFD494AF6</strong>
																		<weak>1652993257</weak>
																		<size>697</size>
																		<position>10499</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator/=(vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>160</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>4</size>
																		<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
																		<weak>2530702481</weak>
																		<size>466</size>
																		<position>323</position>
																		<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
																		<weak>4238437481</weak>
																		<size>434</size>
																		<position>26</position>
																		<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
																		<weak>2547266806</weak>
																		<size>210</size>
																		<position>36</position>
																		<strong>A7921C4A860BD9C259C9F729BCE569BBB1D9B1A3625432AE1A0818CAF776EB31</strong>
																		<weak>3309243212</weak>
																		<size>39</size>
																		<position>156</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits&lt;M&gt;::scalar_type</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>161</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>171B7F87E15B87E4882E126BED2E7D08A8F0297EBC49B18F24BEB5992199E25E</strong>
																		<weak>105107176</weak>
																		<size>714</size>
																		<position>15882</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator==(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>162</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
																		<weak>2266063101</weak>
																		<size>401</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_traits.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>163</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>2BE161679D73843FE4BF8A932AF0C12B6BE722E9369B7EF1E67F702DEA11407A</strong>
																		<weak>198525921</weak>
																		<size>271</size>
																		<position>50637</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate_z(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>164</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>73505EF034D0405FEB97E0A46A8DF43CFBC5FEF054B7CD5EF0E7FCA555D94749</strong>
																		<weak>375252313</weak>
																		<size>784</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\inline.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/inline.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>165</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>qvm</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>166</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4C20D9E1BB130E520352A1194BC594E19B30DD53A09F579F36D522EECF538F4F</strong>
																		<weak>3704691970</weak>
																		<size>5265</size>
																		<position>377</position>
																		<strong>37F22365AF2EB2BC94BA8EC0ABFE94D3B3B4FCB85302441E7EC839BC7616C6E8</strong>
																		<weak>4153939162</weak>
																		<size>5233</size>
																		<position>26</position>
																		<strong>60E8025A53CD64E8892FA9FA03F2B2D7E53A1EB0695565C87FCBB45E12B8DDAE</strong>
																		<weak>1635257221</weak>
																		<size>5187</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\math.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/math.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>167</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
																		<weak>2394670759</weak>
																		<size>820</size>
																		<position>323</position>
																		<strong>2987AF079555D7D7AAEBD5131A984CEF6986395A6CC35E8ECC670BCA65E917A2</strong>
																		<weak>3963862655</weak>
																		<size>788</size>
																		<position>26</position>
																		<strong>0A35DD484F5FFF6F4E27D845991F74514AB2C5D91C3DEDA003F106FE25004660</strong>
																		<weak>3346742165</weak>
																		<size>206</size>
																		<position>572</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>is_quat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>168</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>E421538D01E77D91004500AB45521260F64432BD9B4D77DA8BD81C1AE8C485D0</strong>
																		<weak>228995482</weak>
																		<size>8117</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_access.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_access.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>169</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits&lt;M&gt;::write_element</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>170</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>0610DF3B9EBE2C51DF14272DD6FC4BD594DB4039431A74F29FA1FD6FD678DFEF</strong>
																		<weak>1200355612</weak>
																		<size>950</size>
																		<position>28189</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator+=(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>171</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>AF9F4C1EA6C3598F92BA481448DEF358AB3A0D00A95F6ED742988F1F5FC04830</strong>
																		<weak>3821619302</weak>
																		<size>4775</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_access.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/quat_access.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>172</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>688C3EB7CFC78A14DB41317073344A1D083765367AA1235BCE54B6E2AF4E3597</strong>
																		<weak>145816868</weak>
																		<size>969</size>
																		<position>30033</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>slerp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>173</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>38D7A8958A423275F8FFC186678700D4B75BB9C87F43D885A79DF5FDFD15B11A</strong>
																		<weak>2115414522</weak>
																		<size>2667</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits_defaults.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_traits_defaults.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>174</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
																		<weak>2266063101</weak>
																		<size>401</size>
																		<position>323</position>
																		<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
																		<weak>1106991317</weak>
																		<size>369</size>
																		<position>26</position>
																		<strong>5B3D6A9938BA490F4203F76B7D0B0CE3C369D05288BD1BFC5B5D0F61E07F27A2</strong>
																		<weak>3771147593</weak>
																		<size>150</size>
																		<position>209</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>is_vec</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>175</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>7046498E5D94CDDC6F337604AB06FAEF45624DFC522C25A2F22CCB92EFA65B40</strong>
																		<weak>724192466</weak>
																		<size>266</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\enable_if.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/enable_if.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>176</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>BB5911D6AE232295311763D74938A8163AADEAEE0330678F55305B70611C71B9</strong>
																		<weak>1505950842</weak>
																		<size>56925</size>
																		<position>321</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_access.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_access.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>177</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>C4DA5D3E912C8E29A1CE1F3F83B03CFA6C95698EE79BACFBBF54B2623600D870</strong>
																		<weak>894380173</weak>
																		<size>114</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/map.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>178</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>1C078950EBDFFAC104D5D6859780BF43A531E51E4A866970ECDB1B931BF4C757</strong>
																		<weak>2490488981</weak>
																		<size>1928</size>
																		<position>442</position>
																		<strong>E74BB096466B13F2E28552C8DFFEA78391F3CEC8F59CFF900ABCCBFE527C122A</strong>
																		<weak>3521630317</weak>
																		<size>1896</size>
																		<position>26</position>
																		<strong>B0F2E5063D1BE1A0305262A7623C1D9EE69BFC8CDE7E378FCE3E10093EE936C2</strong>
																		<weak>1357495000</weak>
																		<size>747</size>
																		<position>93</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>deduce_vec</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>179</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception types</string>
															</title>
															<file_name>
																<string>exception_types_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>180</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>2EEC24318A80A1465209B1910DF15900F375FA9C7D7936C42777D4FD11EBA69D</strong>
																		<weak>1780893462</weak>
																		<size>2374</size>
																		<position>391</position>
																		<strong>5696C6ECA7F344E3741AA2C84E26E16DEB90A3EABA1C01FB77C4EA9928E00BF7</strong>
																		<weak>1295859438</weak>
																		<size>2342</size>
																		<position>26</position>
																		<strong>B415A564D109DDC41433EB4BB473F89294D21943FDFDE62B22593F2DBE3F94F2</strong>
																		<weak>294530375</weak>
																		<size>1141</size>
																		<position>1191</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits_defaults.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits_defaults</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>181</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>8C34C90D668D2BD1901CC7ABFB8D1E8D10D31C89C974B9ED7B47338CF9881694</strong>
																		<weak>1678596127</weak>
																		<size>1162</size>
																		<position>14718</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>dot(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>182</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>58AF417B539B408D8E2C581ECDD98DA584779BC6C292C0E3E78AC40CA12CF82C</strong>
																		<weak>1427670282</weak>
																		<size>545</size>
																		<position>432</position>
																		<strong>25C91D9856E3696DD78C027FBFDD89AA6A8E06A32CEEB5530425B7017C353FF2</strong>
																		<weak>409435362</weak>
																		<size>513</size>
																		<position>26</position>
																		<strong>5CFC274B16BF8B381E75941EAF5327A6A47EE67878477C4A1D6865AEA3B940F2</strong>
																		<weak>543298400</weak>
																		<size>57</size>
																		<position>446</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\error.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>zero_magnitude_error</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>183</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>EB14C73734B21ABE94AAAFFE2A09BF69B84A5533AE51D909240120DA46428D3C</strong>
																		<weak>2635321909</weak>
																		<size>10780</size>
																		<position>464</position>
																		<strong>57E385CFE473637C72728CE41224191AFDFA17E14471A4E9C9AA68C024EC7B16</strong>
																		<weak>1201261069</weak>
																		<size>10748</size>
																		<position>26</position>
																		<strong>7C07BF7F8C433866F4577C030A21AA679A966FEAEA50C59445EF6DA633D24C55</strong>
																		<weak>3716006072</weak>
																		<size>10702</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\detail\swizzle_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>accessing vector elements by swizzling</string>
															</title>
															<file_name>
																<string>accessing_vector_elements_and_swizzling_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>184</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits&lt;M&gt;::write_element_idx</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>185</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>23F1C2BF84A6ABA24DF83729930378B0E17C963A119CFF40AA8FB95AC5DD734C</strong>
																		<weak>1130745952</weak>
																		<size>714</size>
																		<position>25398</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator!=(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>186</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>B632C8CDA0076CF09ED3D758002F67E765D20CBCCC2F3C7EC8D2EB8B0E1CD3D7</strong>
																		<weak>4141484968</weak>
																		<size>39</size>
																		<position>282</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\assert.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_ASSERT</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>187</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>D3DB092C22A5C22F49E9875B1432BE714DEC7769F44DD5103D238A1DD489CAAD</strong>
																		<weak>3426960718</weak>
																		<size>1253</size>
																		<position>22140</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>normalized(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>188</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Synopsis</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>189</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>8302C5100BF38CB2F739ADC1E8A212881F550B6DFCACF4B958B67DED14906A9C</strong>
																		<weak>2140507318</weak>
																		<size>518</size>
																		<position>22666</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*=(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>190</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>AB4C81E3F70B1EAC5A61E66C4FB06A3D7900E13C72D6E0EABEBD68C65C544A75</strong>
																		<weak>530474308</weak>
																		<size>386</size>
																		<position>62013</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate_z(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>191</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>code generator</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>192</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>4</size>
																		<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
																		<weak>2266063101</weak>
																		<size>401</size>
																		<position>323</position>
																		<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
																		<weak>1106991317</weak>
																		<size>369</size>
																		<position>26</position>
																		<strong>7BF6A0382FB421090D4F2E809435B8D0E170BDE7BCE4821E91BA0AC300859930</strong>
																		<weak>564996640</weak>
																		<size>171</size>
																		<position>36</position>
																		<strong>696121566468A76AA5ABB8FF646050D7AB0B016656D6D71DD108E33F3D6E58F8</strong>
																		<weak>2830371283</weak>
																		<size>37</size>
																		<position>80</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits&lt;Vector&gt;::dim</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>193</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>C25ECA2288127AB7DF790E18523684F2428B0776A355145254E36E710715022E</strong>
																		<weak>1197665932</weak>
																		<size>916</size>
																		<position>25176</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>194</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>9A84564CEB5E4E1AEB7049B6ED435BC0169C6EB8DC1B691BBDDFA6C65B2871EA</strong>
																		<weak>2329400722</weak>
																		<size>3130</size>
																		<position>43484</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>roty_quat(scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>195</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>13ED8322B81E7B4AB8039A9F2A1623AEC246A2555873D2899BDC59CA7CA182A5</strong>
																		<weak>533751107</weak>
																		<size>386</size>
																		<position>55956</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate_y(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>196</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
																		<weak>2210930467</weak>
																		<size>6705</size>
																		<position>463</position>
																		<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
																		<weak>3207075579</weak>
																		<size>6673</size>
																		<position>26</position>
																		<strong>F088412EF4F90C0CBED25E29580B74A174DA424969332A729F24E21B98AB351B</strong>
																		<weak>4084543876</weak>
																		<size>1965</size>
																		<position>2632</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>transform_point</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>197</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>DCB43B88E7D93012DF3C31CFC0CBE89728F11AA02C49FEECC1519B5E7654DBFF</strong>
																		<weak>489164220</weak>
																		<size>39</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\swizzle4.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/swizzle4.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>198</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>6BE5D3408C1AFCD4711C829B878452AF074BB086C676F4B9521A59F6EB270C40</strong>
																		<weak>289789310</weak>
																		<size>3130</size>
																		<position>39741</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotx_quat(scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>199</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9ACBA701B147D464A58E5EA09D755B15DAD7F08829B73393019283E5E0D2FDD3</strong>
																		<weak>2507510468</weak>
																		<size>2599</size>
																		<position>391</position>
																		<strong>A0B8CDB7F7BCAF7030D050FEEFF7828BC7A6429CE45C8C13D92B2EDF5F795314</strong>
																		<weak>775326364</weak>
																		<size>2567</size>
																		<position>26</position>
																		<strong>907C3601D60E1BC53C6838C7A83BD1316FBE5579BF54C3BD9FC4B06586621672</strong>
																		<weak>2531939411</weak>
																		<size>1256</size>
																		<position>1301</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits_defaults.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits_defaults</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>200</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>E0565850AAC1EAA82D982F2403A4C73ACE5BC684DF8EED5345D4A3E9514906C0</strong>
																		<weak>2021345822</weak>
																		<size>3440</size>
																		<position>26195</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>vref</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>201</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>quat_traits&lt;Q&gt;::read_element</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>202</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>3E4160F9711F26C572CFA75C9E0A040B46C63E374B577367C91C9109C29E0D37</strong>
																		<weak>3156002776</weak>
																		<size>792</size>
																		<position>15229</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator/=(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>203</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>scalar requirements</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>204</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>363A54D1F42CAA9F0ED09C0488DB797CB829AA7C99BF70EC6B68B879734B90B2</strong>
																		<weak>914106344</weak>
																		<size>964</size>
																		<position>19631</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>205</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
																		<weak>2530702481</weak>
																		<size>466</size>
																		<position>323</position>
																		<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
																		<weak>4238437481</weak>
																		<size>434</size>
																		<position>26</position>
																		<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
																		<weak>2547266806</weak>
																		<size>210</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>206</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>1413CB15A7AA565850D0DEF94573F4AA3AF9BCFBCBD98230E01BCF41CF22CFBF</strong>
																		<weak>3830272366</weak>
																		<size>1412</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/quat.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>207</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>vector-to-matrix view proxies</string>
															</title>
															<file_name>
																<string>vector-to-matrix_view_proxies_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>208</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>4</size>
																		<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
																		<weak>2266063101</weak>
																		<size>401</size>
																		<position>323</position>
																		<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
																		<weak>1106991317</weak>
																		<size>369</size>
																		<position>26</position>
																		<strong>7BF6A0382FB421090D4F2E809435B8D0E170BDE7BCE4821E91BA0AC300859930</strong>
																		<weak>564996640</weak>
																		<size>171</size>
																		<position>36</position>
																		<strong>A7921C4A860BD9C259C9F729BCE569BBB1D9B1A3625432AE1A0818CAF776EB31</strong>
																		<weak>3309243212</weak>
																		<size>39</size>
																		<position>117</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits&lt;V&gt;::scalar_type</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>209</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>DE7C6E9445392DC9538378A59F744B0F0C80AB7ADC0894C3196FBD8B2D221545</strong>
																		<weak>1032449969</weak>
																		<size>1862</size>
																		<position>469</position>
																		<strong>91953620234E74C20E95741404ADE8B322B40F3E65896081101AD3C8D823EC0C</strong>
																		<weak>2892228489</weak>
																		<size>1830</size>
																		<position>26</position>
																		<strong>057F35C91D33DBEBCA1CA0E3BE4B1D776FBA2DDE98DCE4856DEBCC74E5C92933</strong>
																		<weak>1345045793</weak>
																		<size>1673</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(quat,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>210</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>A3B2C133CD9DA70079337C4C2C9ACA4111E8372C208D4784D6D41F7C59741458</strong>
																		<weak>2194320629</weak>
																		<size>697</size>
																		<position>18722</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*=(vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>211</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>C6E50703483B0AE2BC2F4C9F5929BF7D80849382FAEDC3C026FF048DB1614D90</strong>
																		<weak>850338480</weak>
																		<size>2008</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/quat_vec_operations.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>212</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
																		<weak>1061339090</weak>
																		<size>21066</size>
																		<position>501</position>
																		<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
																		<weak>82163626</weak>
																		<size>21034</size>
																		<position>26</position>
																		<strong>91ED6E57FFD2D87EE1B0E33B62D09F52F79A3378C156FBC0522990266A3A6111</strong>
																		<weak>2024964432</weak>
																		<size>4428</size>
																		<position>1</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>col_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>213</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>A7736D203850E35F21DC0D7822DAB6C432266E2E4C65F8957BA9FDD1B4ECAB03</strong>
																		<weak>2403471497</weak>
																		<size>46</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations4.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_operations4.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>214</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>63AB829DA921A0F0EB8F9B4D3814A7B55627BC529D386C69DD4D68F7D9381213</strong>
																		<weak>972758830</weak>
																		<size>95</size>
																		<position>262</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\throw_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_THROW_EXCEPTION</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;(:auto also:)</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>215</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>D7F08D4D7682EEAA6133CAD886968A87287A2A20D76A7E0E5ABA6C56D923A5F5</strong>
																		<weak>1936285900</weak>
																		<size>3450</size>
																		<position>7873</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>perspective_lh</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>216</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>4B297E1DC4FEC6A6791DE14CEB990890E33D2AABDC0933FCA6AE9BE3841528A9</strong>
																		<weak>2402947208</weak>
																		<size>46</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations3.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat_operations3.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>217</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>4D699412DF093E41E417E15BC8A14E140EEFCDF7196F4F1549E3F288415D1E3E</strong>
																		<weak>2398621827</weak>
																		<size>46</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations2.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_operations2.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>218</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Swizzling</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>219</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>409E4D60B98EF741A3FD018BBBCD23F43C8C64BE667BAA55C8734229029BD7CA</strong>
																		<weak>23846357</weak>
																		<size>2521</size>
																		<position>747</position>
																		<strong>E5C8FE91924F0A023A765559536DD48841CE22298C788B34C29ECE3630D6A3F7</strong>
																		<weak>3033388461</weak>
																		<size>2489</size>
																		<position>26</position>
																		<strong>A73479F628914426270790200F82AF3479884DBDFE741E1E412EC5F09D454E2A</strong>
																		<weak>1404546724</weak>
																		<size>591</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>tutorial.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits example</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>220</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>2DC6CA3F8739C7450887979E5074C6D03FBD4C772B8C80AED816015BCDF8B6A8</strong>
																		<weak>57328266</weak>
																		<size>2939</size>
																		<position>475</position>
																		<strong>4C662D06163175251C2B40E688F013F165844DC85A991CA7A733E9D90E677B4F</strong>
																		<weak>3878795874</weak>
																		<size>2907</size>
																		<position>26</position>
																		<strong>10A53C3F4CA440176FF68ED2931C15885EF70C8C7BEEE3E701BFA73261E5AE2E</strong>
																		<weak>3203343401</weak>
																		<size>149</size>
																		<position>2748</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits_array.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>ptr_qref</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>221</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>DEC8DF8765CF355532905295E5D1A68A52242FAAE531208665CA36214BE5BD08</strong>
																		<weak>592616582</weak>
																		<size>2742</size>
																		<position>31064</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>qref</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>222</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>3DAEDE48C9680DC5D550710A72BEA4B69BAEE62C8D7662226D9DB52EEF8E0E39</strong>
																		<weak>190530527</weak>
																		<size>271</size>
																		<position>46894</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate_y(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>223</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>58AF417B539B408D8E2C581ECDD98DA584779BC6C292C0E3E78AC40CA12CF82C</strong>
																		<weak>1427670282</weak>
																		<size>545</size>
																		<position>432</position>
																		<strong>25C91D9856E3696DD78C027FBFDD89AA6A8E06A32CEEB5530425B7017C353FF2</strong>
																		<weak>409435362</weak>
																		<size>513</size>
																		<position>26</position>
																		<strong>114DF1C5004BD6C63F4968F91CFD272BB3CFD30370A77208689D6D6576791E55</strong>
																		<weak>281627609</weak>
																		<size>349</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\error.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>error</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>224</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>409E4D60B98EF741A3FD018BBBCD23F43C8C64BE667BAA55C8734229029BD7CA</strong>
																		<weak>23846357</weak>
																		<size>2521</size>
																		<position>747</position>
																		<strong>E5C8FE91924F0A023A765559536DD48841CE22298C788B34C29ECE3630D6A3F7</strong>
																		<weak>3033388461</weak>
																		<size>2489</size>
																		<position>26</position>
																		<strong>3A2846FA4B9AC03140008EA4ADD2C01673EE696BC450FC228FF95AD50DBED178</strong>
																		<weak>1629398311</weak>
																		<size>554</size>
																		<position>1925</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>tutorial.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>quat_traits example</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>225</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>85B50128E5FF774A89A902BAADA8D0C395C55634C2EB2E72A11A7F09277945B5</strong>
																		<weak>2766473170</weak>
																		<size>3175</size>
																		<position>30423</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>mref</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>226</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>0D0CCCDE39294A042E91A41BCD6172DE1BAFAE5E3012F21BA463EFC672C4D7F2</strong>
																		<weak>2588076710</weak>
																		<size>32979</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/map_mat_mat.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>227</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>94237835F54C8FA9C3F61D5799131F548FBB3730C8D49602117887694F377EC6</strong>
																		<weak>1705273262</weak>
																		<size>391</size>
																		<position>49510</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_rotx(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>228</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>926D55A208750236A7E1895B5B9A66AB859CE4B1D01E3822E5D43DD4014EAB72</strong>
																		<weak>1702061999</weak>
																		<size>391</size>
																		<position>55563</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_roty(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>229</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>4FAC276CC1F0341B3C77AF56D009D50FB8DA07A5F76100B813A694697EE0C052</strong>
																		<weak>208754481</weak>
																		<size>321</size>
																		<position>37115</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_zero(mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>230</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>BFE352156252DB75DB5F7515C707A5D5586372E73767FDC8823C400C23BBE56B</strong>
																		<weak>3870457913</weak>
																		<size>2614</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/mat.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>231</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits&lt;V&gt;::write_element_idx</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>232</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>sfinae</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>233</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
																		<weak>2210930467</weak>
																		<size>6705</size>
																		<position>463</position>
																		<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
																		<weak>3207075579</weak>
																		<size>6673</size>
																		<position>26</position>
																		<strong>681F1BD0071E785AB28A7E96DA25FE415B31FF1BF5833EC8F0426FC128C3F354</strong>
																		<weak>1053748737</weak>
																		<size>1732</size>
																		<position>4599</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>transform_vector</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>234</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>quaternion elements order note</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>235</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>view proxy</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>236</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>E4184EFA0093FFC31DB85721EA63AEFB1B0BA13F6A770D1E59B0DB5DD17190D9</strong>
																		<weak>1269595195</weak>
																		<size>54749</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/quat_operations.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>237</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>known quirks and issues</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>238</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
																		<weak>1527395585</weak>
																		<size>17923</size>
																		<position>501</position>
																		<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
																		<weak>3538955481</weak>
																		<size>17891</size>
																		<position>26</position>
																		<strong>3EC144A5CBF680ECB171225745CC591477934F5A761E66F078D134F254821E73</strong>
																		<weak>3162194618</weak>
																		<size>4169</size>
																		<position>4327</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>row</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>239</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>0B151418AD6C87F3F35F0C837F3D026CD46E590E658EA940331C35D5C9DAC8A9</strong>
																		<weak>484726198</weak>
																		<size>3960</size>
																		<position>2917</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>convert_to(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>240</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>B2CF736CB75D6BBDB46DB62A539AE8F26C653A433CF28F46E7C888D861DC8E2B</strong>
																		<weak>2268268263</weak>
																		<size>4589</size>
																		<position>509</position>
																		<strong>88ABAB09AEA0654D5E9B4BABF03A7E9B38A76543D6014B9ABDD6C7F8004DD4F3</strong>
																		<weak>3985112767</weak>
																		<size>4557</size>
																		<position>26</position>
																		<strong>9B3E2EECBA1F63179CE55A3AF3A113A2EAAB40E41DB9E75B27BA463BEAF70767</strong>
																		<weak>3650019694</weak>
																		<size>4391</size>
																		<position>96</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_access.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>accessing quaternion elements</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>241</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>667F219F6F819F06D38969AC7B8BF343D1E90B82F13D42B1E625A5084C0C52E1</strong>
																		<weak>3932422585</weak>
																		<size>2708</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/scalar_traits.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>242</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>F39417709771EA895CF0FB26F7524F7A4E98F956224A42ACC0784CCE32DED056</strong>
																		<weak>3649841451</weak>
																		<size>130</size>
																		<position>227</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\static_assert.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/static_assert.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>243</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>matrix-to-vector view proxies</string>
															</title>
															<file_name>
																<string>matrix-to-vector_view_proxies_reference</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>244</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>1D10E439CB22D9EFCB5990950977A0EB08C87FF9CD5B1C84F34F390F03F6BF24</strong>
																		<weak>1537004283</weak>
																		<size>819</size>
																		<position>19481</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>245</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
																		<weak>2266063101</weak>
																		<size>401</size>
																		<position>323</position>
																		<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
																		<weak>1106991317</weak>
																		<size>369</size>
																		<position>26</position>
																		<strong>7BF6A0382FB421090D4F2E809435B8D0E170BDE7BCE4821E91BA0AC300859930</strong>
																		<weak>564996640</weak>
																		<size>171</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec_traits</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>246</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>CF14D5A9C308256B0BE2F994E529F96280D757E2189542E5DD2282DA1E341477</strong>
																		<weak>2845796485</weak>
																		<size>1233</size>
																		<position>2960</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>cross</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>247</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>F6D5DF0EF9B5868E0A51D7B6922863A8B76B839DE54DF3C455637B6CB18CB7A9</strong>
																		<weak>1231154835</weak>
																		<size>916</size>
																		<position>26154</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(scalar,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>248</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>FD3F78762C7BFB30930177C354E304EC43F703A5205F7EC57B841BCBF3452A90</strong>
																		<weak>3888337262</weak>
																		<size>6845</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/vec_mat_operations.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>249</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>2A6A8DF1B669951D6C2734BC4087696D97DC818E45B4D5A5B4AC8498609FD844</strong>
																		<weak>3899350639</weak>
																		<size>361</size>
																		<position>38961</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_rot(quat,vec,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>250</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>8B0E11B0DCB1C511E85448401EB03F54174E821FBA7C5A65FB058D538FBD998C</strong>
																		<weak>3909506602</weak>
																		<size>1364</size>
																		<position>1491</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>cmp(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>251</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>CD8A0E7B3B97341438895136525CFA5C355771C0F98910E7702E90902867ACBB</strong>
																		<weak>4289579138</weak>
																		<size>56777</size>
																		<position>469</position>
																		<strong>6D84BB81555A65F737D8D01F7504B68B30BBECD4E06AC093C57DB72F503EAA56</strong>
																		<weak>697614426</weak>
																		<size>56745</size>
																		<position>26</position>
																		<strong>55471878EC742494A2618C45BF04B3F7643AC1EB3B41EF774C9876052207257D</strong>
																		<weak>2927272713</weak>
																		<size>56579</size>
																		<position>96</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_access.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>accessing matrix elements</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>252</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>247FADF47FCB2D19160EA3F3989486B89626C83C65BAA85E2078CAE38779A064</strong>
																		<weak>901045008</weak>
																		<size>743</size>
																		<position>6939</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>conjugate</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>253</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>9D39EBAE47060908B640127BB5815D1574A7697CBB17E572CA2A8843207F4137</strong>
																		<weak>1843287609</weak>
																		<size>1192</size>
																		<position>26114</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>normalized(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>254</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>9D82D57A4B2062AA910E42ACBA645DE34995A1CA890CE6154D836AED338CEF2A</strong>
																		<weak>833961895</weak>
																		<size>1145</size>
																		<position>16598</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>inverse(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>255</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>E01D67A2ECC8357FA57AAC8347CA42E4FADCC4853F691DA82D1DC9A66A28242A</strong>
																		<weak>330178664</weak>
																		<size>108</size>
																		<position>903</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\inline.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_INLINE_RECURSION</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>256</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>00984703E475647DD9E66A1CF47CC65B9CC7B5D3F36B360039D90822B4509D72</strong>
																		<weak>1874013843</weak>
																		<size>1235</size>
																		<position>443</position>
																		<strong>9796B8E16C70FA779CAD1998E83822ADD2BEAF798A1D255B38F3492968F9DD27</strong>
																		<weak>2086348395</weak>
																		<size>1203</size>
																		<position>26</position>
																		<strong>0F4E649E9DF1EA335C99C4048BD6B256090C5813D081808480D44F113994323F</strong>
																		<weak>2050483062</weak>
																		<size>921</size>
																		<position>272</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\deduce_quat.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>deduce_quat2</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>257</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>73C15F343554FDCF94C8E7F7915D82A3015494E7CA8780ED6C2B6A09F977A741</strong>
																		<weak>2217138966</weak>
																		<size>744</size>
																		<position>20597</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>258</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
																		<weak>1527395585</weak>
																		<size>17923</size>
																		<position>501</position>
																		<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
																		<weak>3538955481</weak>
																		<size>17891</size>
																		<position>26</position>
																		<strong>ACCF8E4F7382DA2749A499B7D0015CF20AFCCEB0BCB1A87B9CC3A4F5E09DB735</strong>
																		<weak>3342319762</weak>
																		<size>4569</size>
																		<position>13252</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>translation</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>259</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>5A844F9639CD3B4092B135BB0C428CA42F3809AA59B325E8DA0C6513506E59D5</strong>
																		<weak>1752150024</weak>
																		<size>674</size>
																		<position>4535</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>determinant</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>260</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>E4B9893DE662EFCD4826123E9EF7D5C43292900009752B23F765003C9B95278D</strong>
																		<weak>1149226474</weak>
																		<size>2561</size>
																		<position>470</position>
																		<strong>4D9D39869F37EF6CF609F8FEC537C42DCE547031AA2D905311035430FD61AFE1</strong>
																		<weak>1278133698</weak>
																		<size>2529</size>
																		<position>26</position>
																		<strong>886C690FE3D455ED9CDAD208DC2333F90C8ED6E340B8907013C747CB128A8B94</strong>
																		<weak>3151037956</weak>
																		<size>1047</size>
																		<position>1483</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>scalar</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>261</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>EA59CA925F3C7A0BD51B6D071B47A8F3C3FEDE5B3D020B4973C477CA88B32BD1</strong>
																		<weak>2472793825</weak>
																		<size>2697</size>
																		<position>10645</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>scalar_cast(quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>262</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>C945090FB0648B45943B7307F76E5DA9082C9FA6051DA6B8CAB6D51C40680B03</strong>
																		<weak>811115380</weak>
																		<size>2654</size>
																		<position>34459</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>zero_mat</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>263</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>FC537C929B039E6BC930FF1B0EA767F5829E55D1235A1A0F61FFE38A9C15F180</strong>
																		<weak>799722441</weak>
																		<size>794</size>
																		<position>24317</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator+=(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>264</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Index of Headers</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>265</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>98C36260D0B7444CB185E50BB8497E88796F3C8230E3C2C01980BE2C5D67A629</strong>
																		<weak>523134273</weak>
																		<size>386</size>
																		<position>49903</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rotate_x(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>266</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>AE4EE2F5DEB7CFB155FF4C9A3C9A2CA3FF17D51CD9BEEC4D6595E700C96C7EB1</strong>
																		<weak>2991569864</weak>
																		<size>1939</size>
																		<position>442</position>
																		<strong>67CDB0E55E1DE1EC766920BB469BE0083EF841AFB53D619DDDD2C26669A2A738</strong>
																		<weak>1803858848</weak>
																		<size>1907</size>
																		<position>26</position>
																		<strong>30E0D4046F983A6E14C98F6CCAD79E0E1F2DC7A8E7FDF9C05CB6F024A46CD60B</strong>
																		<weak>3227560523</weak>
																		<size>1861</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>vec</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>267</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
																		<weak>2394670759</weak>
																		<size>820</size>
																		<position>323</position>
																		<strong>2987AF079555D7D7AAEBD5131A984CEF6986395A6CC35E8ECC670BCA65E917A2</strong>
																		<weak>3963862655</weak>
																		<size>788</size>
																		<position>26</position>
																		<strong>473C0941872ACCAD17DB9AA6D35E17339C89F66BC34C46419CE289C0C5869CF6</strong>
																		<weak>3681624261</weak>
																		<size>135</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>quat_traits</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>268</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>07DBB60ABCB708E4AABB2704B0E386A883135266F0F8651BC5DB1697B59DFC3C</strong>
																		<weak>794936032</weak>
																		<size>749</size>
																		<position>4255</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>cmp(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>269</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>5B9453069284BF03176C5390CEDC265EC411E25C2F1BE1F1A7D47190521136A8</strong>
																		<weak>4073921945</weak>
																		<size>99</size>
																		<position>802</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\inline.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_QVM_INLINE_OPERATIONS</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>270</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>BC33D72B91605D4AC866DC74052FC030BADD0DAA85A970B205DA9BC3E6627118</strong>
																		<weak>1377320520</weak>
																		<size>1160</size>
																		<position>29201</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator+(mat,mat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>271</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>C637CAE81E13DFC12646862196C906F3BE0EDCF36EC327098E5FAD938E1F8401</strong>
																		<weak>2098799371</weak>
																		<size>1047</size>
																		<position>12139</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>dot(vec,vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>272</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>8C25A97B546080A2F973C135786C22E91240D333598BB2C2244A1C2FB495E91F</strong>
																		<weak>426429444</weak>
																		<size>689</size>
																		<position>18940</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator-=(quat,quat)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>273</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>E4B9893DE662EFCD4826123E9EF7D5C43292900009752B23F765003C9B95278D</strong>
																		<weak>1149226474</weak>
																		<size>2561</size>
																		<position>470</position>
																		<strong>4D9D39869F37EF6CF609F8FEC537C42DCE547031AA2D905311035430FD61AFE1</strong>
																		<weak>1278133698</weak>
																		<size>2529</size>
																		<position>26</position>
																		<strong>20005D89A65FA28B2191D9C071B4C676645A61CAB16A4B98332A5454D8E3E712</strong>
																		<weak>1929002233</weak>
																		<size>283</size>
																		<position>36</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>scalar_traits</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>274</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
																		<weak>3887630348</weak>
																		<size>30853</size>
																		<position>587</position>
																		<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
																		<weak>2586410980</weak>
																		<size>30821</size>
																		<position>26</position>
																		<strong>4B69258D09315EDE9FD97D459058D81EBD311845033E6934CD4E0A4AE4DE11E9</strong>
																		<weak>3232780108</weak>
																		<size>300</size>
																		<position>7157</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_zero(vec)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>275</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
																		<weak>3512665047</weak>
																		<size>65608</size>
																		<position>727</position>
																		<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
																		<weak>822606767</weak>
																		<size>65576</size>
																		<position>26</position>
																		<strong>456F0FD79427456727F2636D753FF6F02CC1B646175423C7CF3066E77BA7C5BB</strong>
																		<weak>1713072049</weak>
																		<size>391</size>
																		<position>61620</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\mat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>set_rotz(mat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>276</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>A1089D653757560F635DA2450109C8FCC9B6C29E62A6009A6F41077502E3C843</strong>
																		<weak>2277529753</weak>
																		<size>2490</size>
																		<position>474</position>
																		<strong>133FC81411296C7ECEA8236C06B3C7B916958EBC5F815141DD9F10D9A54DBDC5</strong>
																		<weak>3140636785</weak>
																		<size>2458</size>
																		<position>26</position>
																		<strong>508C27A3462355409E202C6CF1B8967DE8484AF9554878EDD311342300BE1511</strong>
																		<weak>664283307</weak>
																		<size>161</size>
																		<position>2287</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\vec_traits_array.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>ptr_vref</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>277</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>1</size>
																		<strong>26DE885BCD0C3C2065CCE27F157976B715AAC9E73FD04C858662FD8BEE7F8A16</strong>
																		<weak>2391224194</weak>
																		<size>844</size>
																		<position>323</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\all.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/qvm/all.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>278</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>0</size>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>mat_traits&lt;M&gt;::read_element</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>279</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<size>3</size>
																		<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
																		<weak>3228175212</weak>
																		<size>54430</size>
																		<position>642</position>
																		<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
																		<weak>4198957892</weak>
																		<size>54398</size>
																		<position>26</position>
																		<strong>5A103711DC55E41DA7B272708B8303B478D52650F4A5D7E3D30CBDB428A71DC7</strong>
																		<weak>2348869581</weak>
																		<size>784</size>
																		<position>24612</position>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>..\..\include\boost\qvm\quat_operations.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator*(quat,scalar)</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include include:)&#10;(:auto also:)&#10;</string>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>def</string>
								<shared_ptr>
									<id>280</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>275</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class A,class B,int Dim&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef /*unspecified*/ type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@#ifndef (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#define (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) inline&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<size>27</size>
												<variant>2</variant>
												<string>[@template &lt;class T,int Rows,int Cols&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    T a[Rows][Cols];&#10;&#10;    template &lt;class R&gt;&#10;    operator R() const&#10;        {&#10;        R r;&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(r,*this);&#10;        return r;&#10;        }&#10;};&#10;&#10;template &lt;class Matrix&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:);&#10;&#10;template &lt;class T,int Rows,int Cols&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Rows,Cols&gt; &gt;&#10;{&#10;    typedef T scalar_type;&#10;    static int const rows=Rows;&#10;    static int const cols=Cols;&#10;&#10;    template &lt;int Row,int Col&gt; static scalar_type (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Rows,Cols&gt; const &amp; x ) { return x.a[Row][Col]; }&#10;    template &lt;int Row,int Col&gt; static scalar_type &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Rows,Cols&gt; &amp; x ) { return x.a[Row][Col]; }&#10;&#10;    static scalar_type (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int row, int col, (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Rows,Cols&gt; const &amp; x ) { return x.a[row][col]; }&#10;    static scalar_type &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int row, int col, (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Rows,Cols&gt; &amp; x ) { return x.a[row][col]; }&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@#ifndef </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#define </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<size>15</size>
												<variant>2</variant>
												<string>[@template &lt;class QuatType,class ScalarType&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef QuatType quat_type;&#10;    typedef ScalarType (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);&#10;&#10;    template &lt;int I&gt;&#10;    static (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( quat_type const &amp; x )&#10;    {&#10;        return (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;quat_type&gt;::template (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;I&gt;(const_cast&lt;quat_type &amp;&gt;(x));&#10;    }&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@template &lt;&#10;    class M,&#10;    int Rows=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:),&#10;    int Cols=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef /*unspecified*/ type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@typedef /*user-defined*/ (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class Q&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef Q type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@#ifndef </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#define </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-54</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-60</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-62</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    static bool const value=/*unspecified*/;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-73</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-79</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@#ifndef </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#include &lt;boost/static_assert.hpp&gt;&#10;#define (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) BOOST_STATIC_ASSERT&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@#ifndef (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#define (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) /*platform-specific*/&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class A,class B&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef typename impl&lt;A,B&gt;::type type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    T a[4];&#10;&#10;    template &lt;class R&gt;&#10;    operator R() const&#10;    {&#10;        R r;&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(r,*this);&#10;        return r;&#10;    }&#10;};&#10;&#10;template &lt;class Quaternion&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:);&#10;&#10;template &lt;class T&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt; &gt;&#10;{&#10;    typedef T scalar_type;&#10;&#10;    template &lt;int I&gt; static scalar_type (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt; const &amp; x ) { return x.a[I]; }&#10;    template &lt;int I&gt; static scalar_type &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt; &amp; x ) { return x.a[I]; }&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-98</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-100</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-103</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-104</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@#ifndef (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#include &lt;boost/assert.hpp&gt;&#10;#define (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) BOOST_ASSERT&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:): virtual (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) { };@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) = /*user-defined*/;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class A,class B,int Rows,int Cols&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef /*unspecified*/ type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-120</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-131</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<size>27</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    bool const value=false;&#10;};&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;char&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;signed char&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;unsigned char&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;signed short&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;unsigned short&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;signed int&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;unsigned int&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;signed long&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;unsigned long&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;double&gt; { static bool const value=true; };&#10;template &lt;&gt; struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;long double&gt; { static bool const value=true; };@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@#ifndef (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#define (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) inline&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-137</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-138</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-141</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) = /*user-defined*/;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-154</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@typedef /*user-defined*/ (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    static bool const value=/*unspecified*/;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    static bool const value=/*unspecified*/;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-177</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;&#10;    class V,&#10;    int Dim=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef /*unspecified*/ type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<size>33</size>
												<variant>2</variant>
												<string>[@template &lt;class VecType,class ScalarType,int Dim&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef VecType vec_type;&#10;    typedef ScalarType (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);&#10;    static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)=Dim;&#10;&#10;    template &lt;int I&gt;&#10;    static (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( vec_type const &amp; x )&#10;    {&#10;        return (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;vec_type&gt;::template (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;I&gt;(const_cast&lt;vec_type &amp;&gt;(x));&#10;    }&#10;&#10;    static (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, vec_type const &amp; x )&#10;    {&#10;        return (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;vec_type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)(i,const_cast&lt;vec_type &amp;&gt;(x));&#10;    }&#10;&#10;    protected:&#10;&#10;    static (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, vec_type &amp; m )&#10;    {&#10;        /* unspecified */&#10;    }&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:): virtual (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) { };@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@#ifndef (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#include &lt;boost/assert.hpp&gt;&#10;#define (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) BOOST_ASSERT&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-188</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-191</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) = /*user-defined*/;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-197</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<size>35</size>
												<variant>2</variant>
												<string>[@template &lt;class MatType,class ScalarType,int Rows,int Cols&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef MatType mat_type;&#10;    typedef ScalarType (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);&#10;    static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)=Rows;&#10;    static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)=Cols;&#10;&#10;    template &lt;int Row,int Col&gt;&#10;    static (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( mat_type const &amp; x )&#10;    {&#10;        return (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;mat_type&gt;::template (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;Row,Col&gt;(const_cast&lt;mat_type &amp;&gt;(x));&#10;    }&#10;&#10;    static (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int r, int c, mat_type const &amp; x )&#10;    {&#10;        return (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;mat_type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)(r,c,const_cast&lt;mat_type &amp;&gt;(x));&#10;    }&#10;&#10;    protected:&#10;&#10;    static (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int r, int c, mat_type &amp; m )&#10;    {&#10;        /* unspecified */&#10;    }&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>[@template &lt;class M&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    /*main template members unspecified*/&#10;};&#10;&#10;/*&#10;User-defined (possibly partial) specializations:&#10;&#10;template &lt;&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;&#10;{&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;};&#10;*/@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@typedef /*user-defined*/ (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-209</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-213</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@#ifndef (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#include (:link www.boost.org/doc/libs/release/libs/exception/doc/boost_throw_exception_hpp.html|&lt;boost/throw_exception.hpp&gt;:)&#10;#define (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) (:link http://www.boost.org/doc/libs/release/libs/exception/doc/BOOST_THROW_EXCEPTION.html|BOOST_THROW_EXCEPTION:)&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-216</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-217</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-220</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:):&#10;    virtual boost::exception,&#10;    virtual std::exception&#10;{&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-224</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-237</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@template &lt;class V&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    /*main template members unspecified*/&#10;};&#10;&#10;/*&#10;User-defined (possibly partial) specializations:&#10;&#10;template &lt;&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;&#10;{&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;};&#10;*/@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@#ifndef </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#define </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class A,class B&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef /*unspecified*/ type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    typedef /*exact definition unspecified*/ type;&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-264</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<size>27</size>
												<variant>2</variant>
												<string>[@template &lt;class T,int Dim&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    T a[Dim];&#10;&#10;    template &lt;class R&gt;&#10;    operator R() const&#10;    {&#10;        R r;&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(r,*this);&#10;        return r;&#10;    }&#10;};&#10;&#10;template &lt;class Vector&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:);&#10;&#10;template &lt;class T,int Dim&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Dim&gt; &gt;&#10;{&#10;    typedef T scalar_type;&#10;    static int const dim=Dim;&#10;&#10;    template &lt;int I&gt; static scalar_type (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Dim&gt; const &amp; x ) { return x.a[I]; }&#10;    template &lt;int I&gt; static scalar_type &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Dim&gt; &amp; x ) { return x.a[I]; }&#10;&#10;    static scalar_type (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Dim&gt; const &amp; x ) { return x.a[i]; }&#10;    static scalar_type &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T,Dim&gt; &amp; x ) { return x.a[i]; }&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@template &lt;class Q&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    /*main template members unspecified*/&#10;};&#10;&#10;/*&#10;User-defined (possibly partial) specializations:&#10;&#10;template &lt;&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Q&gt;&#10;{&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl pre_indent=&quot;4&quot;:)&#10;};&#10;*/@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-268</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@#ifndef </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#define </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;#endif@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;class Scalar&gt;&#10;struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    static Scalar value( int v )&#10;    {&#10;        return Scalar(v);&#10;    }&#10;};@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-276</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-277</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>api</string>
								<shared_ptr>
									<id>281</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>275</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//*** Quaternion, vector and matrix types ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//*** Macros ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Quaternion operations ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Matrix operations ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-54</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-60</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-62</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-73</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//*** Generic programming utilities ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-79</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<size>79</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<size>37</size>
												<variant>2</variant>
												<string>[@//2D (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:), only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::value&#10;template &lt;class V&gt; -unspecified-2D-vector-type- XX( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- XY( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- XZ( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- XW( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- X0( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- X1( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- YX( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- YY( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- YZ( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- YW( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- Y0( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- Y1( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- ZX( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- ZY( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- ZZ( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- ZW( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- Z0( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- Z1( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- WX( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- WY( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- WZ( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- WW( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- W0( V &amp; v );&#10;template &lt;class V&gt; -unspecified-2D-vector-type- W1( V &amp; v );&#10;...&#10;//2D (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:), only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;S&gt;::value&#10;template &lt;class S&gt; -unspecified-2D-vector-type- X0( S &amp; s );&#10;template &lt;class S&gt; -unspecified-2D-vector-type- X1( S &amp; s );&#10;template &lt;class S&gt; -unspecified-2D-vector-type- XX( S &amp; s );&#10;...&#10;-unspecified-2D-vector-type- _00();&#10;-unspecified-2D-vector-type- _01();&#10;-unspecified-2D-vector-type- _10();&#10;-unspecified-2D-vector-type- _11();&#10;&#10;//3D (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:), only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::value&#10;template &lt;class V&gt; -unspecified-3D-vector-type- XXX( V &amp; v );&#10;...&#10;template &lt;class V&gt; -unspecified-3D-vector-type- XXW( V &amp; v );&#10;template &lt;class V&gt; -unspecified-3D-vector-type- XX0( V &amp; v );&#10;template &lt;class V&gt; -unspecified-3D-vector-type- XX1( V &amp; v );&#10;template &lt;class V&gt; -unspecified-3D-vector-type- XYX( V &amp; v );&#10;...&#10;template &lt;class V&gt; -unspecified-3D-vector-type- XY1( V &amp; v );&#10;...&#10;template &lt;class V&gt; -unspecified-3D-vector-type- WW1( V &amp; v );&#10;...&#10;//3D (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:), only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;S&gt;::value&#10;template &lt;class S&gt; -unspecified-3D-vector-type- X00( S &amp; s );&#10;template &lt;class S&gt; -unspecified-3D-vector-type- X01( S &amp; s );&#10;...&#10;template &lt;class S&gt; -unspecified-3D-vector-type- XXX( S &amp; s );&#10;template &lt;class S&gt; -unspecified-3D-vector-type- XX0( S &amp; s );&#10;...&#10;-unspecified-3D-vector-type- _000();&#10;-unspecified-3D-vector-type- _001();&#10;-unspecified-3D-vector-type- _010();&#10;...&#10;-unspecified-3D-vector-type- _111();&#10;&#10;//4D (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:), only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::value&#10;template &lt;class V&gt; -unspecified-4D-vector-type- XXXX( V &amp; v );&#10;...&#10;template &lt;class V&gt; -unspecified-4D-vector-type- XXXW( V &amp; v );&#10;template &lt;class V&gt; -unspecified-4D-vector-type- XXX0( V &amp; v );&#10;template &lt;class V&gt; -unspecified-4D-vector-type- XXX1( V &amp; v );&#10;template &lt;class V&gt; -unspecified-4D-vector-type- XXYX( V &amp; v );&#10;...&#10;template &lt;class V&gt; -unspecified-4D-vector-type- XXY1( V &amp; v );&#10;...&#10;template &lt;class V&gt; -unspecified-4D-vector-type- WWW1( V &amp; v );&#10;...&#10;//4D (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:), only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;S&gt;::value&#10;template &lt;class S&gt; -unspecified-4D-vector-type- X000( S &amp; s );&#10;template &lt;class S&gt; -unspecified-4D-vector-type- X001( S &amp; s );&#10;...&#10;template &lt;class S&gt; -unspecified-4D-vector-type- XXXX( S &amp; s );&#10;template &lt;class S&gt; -unspecified-4D-vector-type- XX00( S &amp; s );&#10;...&#10;-unspecified-4D-vector-type- _0000();&#10;-unspecified-4D-vector-type- _0001();&#10;-unspecified-4D-vector-type- _0010();&#10;...&#10;-unspecified-4D-vector-type- _1111();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-98</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-100</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Vector operations ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-103</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-104</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<size>51</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-141</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-268</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Accessing vector elements ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Quaternion-Vector operations ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-120</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-131</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-137</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-138</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-141</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>[@//*** Type traits ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Vector-Matrix operations ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-154</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Matrix-to-matrix view proxies ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<size>85</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt; T acos( T );&#10;template &lt;class T&gt; T asin( T );&#10;template &lt;class T&gt; T atan( T );&#10;template &lt;class T&gt; T atan2( T, T );&#10;template &lt;class T&gt; T cos( T );&#10;template &lt;class T&gt; T sin( T );&#10;template &lt;class T&gt; T tan( T );&#10;template &lt;class T&gt; T cosh( T );&#10;template &lt;class T&gt; T sinh( T );&#10;template &lt;class T&gt; T tanh( T );&#10;template &lt;class T&gt; T exp( T );&#10;template &lt;class T&gt; T log( T );&#10;template &lt;class T&gt; T log10( T );&#10;template &lt;class T&gt; T mod( T , T );&#10;template &lt;class T&gt; T pow( T, T );&#10;template &lt;class T&gt; T sqrt( T );&#10;template &lt;class T&gt; T ceil( T );&#10;template &lt;class T&gt; T abs( T );&#10;template &lt;class T&gt; T floor( T );&#10;template &lt;class T&gt; T mod( T, T );&#10;template &lt;class T&gt; T ldexp( T, int );&#10;template &lt;class T&gt; T sign( T );&#10;&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float acos&lt;float&gt;( float x ) { return ::acosf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float asin&lt;float&gt;( float x ) { return ::asinf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float atan&lt;float&gt;( float x ) { return ::atanf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float atan2&lt;float&gt;( float x, float y ) { return ::atan2f(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float cos&lt;float&gt;( float x ) { return ::cosf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float sin&lt;float&gt;( float x ) { return ::sinf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float tan&lt;float&gt;( float x ) { return ::tanf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float cosh&lt;float&gt;( float x ) { return ::coshf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float sinh&lt;float&gt;( float x ) { return ::sinhf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float tanh&lt;float&gt;( float x ) { return ::tanhf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float exp&lt;float&gt;( float x ) { return ::expf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float log&lt;float&gt;( float x ) { return ::logf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float log10&lt;float&gt;( float x ) { return ::log10f(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float mod&lt;float&gt;( float x, float y ) { return ::fmodf(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float pow&lt;float&gt;( float x, float y ) { return ::powf(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float sqrt&lt;float&gt;( float x ) { return ::sqrtf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float ceil&lt;float&gt;( float x ) { return ::ceilf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float abs&lt;float&gt;( float x ) { return ::fabsf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float floor&lt;float&gt;( float x ) { return ::floorf(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float ldexp&lt;float&gt;( float x, int y ) { return ::ldexpf(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> float sign&lt;float&gt;( float x ) { return x&lt;0 ? -1.f : +1.f; }&#10;                    &#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double acos&lt;double&gt;( double x ) { return ::acos(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double asin&lt;double&gt;( double x ) { return ::asin(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double atan&lt;double&gt;( double x ) { return ::atan(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double atan2&lt;double&gt;( double x, double y ) { return ::atan2(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double cos&lt;double&gt;( double x ) { return ::cos(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double sin&lt;double&gt;( double x ) { return ::sin(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double tan&lt;double&gt;( double x ) { return ::tan(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double cosh&lt;double&gt;( double x ) { return ::cosh(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double sinh&lt;double&gt;( double x ) { return ::sinh(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double tanh&lt;double&gt;( double x ) { return ::tanh(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double exp&lt;double&gt;( double x ) { return ::exp(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double log&lt;double&gt;( double x ) { return ::log(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double log10&lt;double&gt;( double x ) { return ::log10(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double mod&lt;double&gt;( double x, double y ) { return ::fmod(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double pow&lt;double&gt;( double x, double y ) { return ::pow(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double sqrt&lt;double&gt;( double x ) { return ::sqrt(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double ceil&lt;double&gt;( double x ) { return ::ceil(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double abs&lt;double&gt;( double x ) { return ::fabs(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double floor&lt;double&gt;( double x ) { return ::floor(x); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double ldexp&lt;double&gt;( double x, int y ) { return ::ldexp(x,y); }&#10;template &lt;&gt; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> double sign&lt;double&gt;( double x ) { return x&lt;0 ? -1.0 : +1.0; }@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-177</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Exception types ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Accessing vector elements by swizzling ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:) </string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-188</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-191</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-197</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Vector-to-matrix view proxies ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-209</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-209</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-213</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-216</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-217</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-220</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-224</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<size>85</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-138</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-237</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>[@//*** Accessing quaternion elements ***&#10;&#10;(:include decl:)@]</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@//*** Matrix-to-vector view proxies ***&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> decl:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>[@//*** Accessing matrix elements ***&#10;&#10;(:include decl:) </string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-264</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-268</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-276</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-277</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>decl</string>
								<shared_ptr>
									<id>282</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>275</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<size>33</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int Dim,class Angle&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( Angle const &amp; angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;int Dim,class A,class Angle&gt;&#10;-unspecified-return-type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; axis, Angle angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( Vector const &amp; v );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B,class Cmp&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b, Cmp pred );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int R1,int R2&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int R&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class Angle&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( Angle const &amp; angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<size>15</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<size>29</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; axis, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A,class B&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; axis, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class R,class A&gt;&#10;R (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class Scalar,class A&gt;&#10;-unspecified-return_type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>[@using boost::enable_if;&#10;using boost::enable_if_c;&#10;using boost::lazy_enable_if;&#10;using boost::lazy_enable_if_c;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-54</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<size>35</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;A,B,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-60</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-62</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;-unspecified-return-type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( T fov_y, T aspect, T zn, T zf );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;iclass A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int C1,int C2&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-73</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T,int S&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int R,int C&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-79</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int Rows,int Cols,class T&gt;&#10;T (&amp;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-79</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>( T * ptr ))[Rows][Cols];@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;iclass A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int R&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int C&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( Vector &amp; v );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class Scalar,class A&gt;&#10;-unspecified-return_type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-98</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-100</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-103</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-104</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int Dim,class Angle&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( Angle const &amp; angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B det );&#10;&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int Dim,class Angle&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( Angle const &amp; angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::value&#10;&#10;template &lt;int I,class V&gt; -unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A:)( V &amp; v );&#10;template &lt;class V&gt; -unspecified-return-type- A0( V &amp; v );&#10;template &lt;class V&gt; -unspecified-return-type- A1( V &amp; v );&#10;...&#10;template &lt;class V&gt; -unspecified-return-type- A9( V &amp; v );&#10;&#10;template &lt;class V&gt; -unspecified-return-type- X( V &amp; v );&#10;template &lt;class V&gt; -unspecified-return-type- Y( V &amp; v );&#10;template &lt;class V&gt; -unspecified-return-type- Z( V &amp; v );&#10;template &lt;class V&gt; -unspecified-return-type- W( V &amp; v );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-120</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;int C,class A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class R,class A&gt;&#10;R (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<size>29</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A,class B&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; axis, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-131</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-131</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class S&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class S,int D&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-137</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-138</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( Quaternion &amp; q );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;iclass A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-141</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int r, int c, Matrix const &amp; m );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<size>15</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; axis, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int C&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-154</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, Vector const &amp; v );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<size>27</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;int R,int C&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( Matrix &amp; m );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;C&gt;&#10;template &lt;class A,class B,class C&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt; &gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A const &amp; a, B const &amp; b, C c );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-177</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int r, int c, Matrix &amp; m );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-188</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-191</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class Angle&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( Angle const &amp; angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==4 &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==4 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A,class B&gt;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,3&gt; &gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-197</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class Angle&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( Angle const &amp; angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;-unspecified-return-type- </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( Quaternion const &amp; q );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-209</id>
													</shared_ptr>
												</weak_ptr>
												<size>15</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,3&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;iclass A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-213</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;-unspecified-return-type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( T fov_y, T aspect, T zn, T zf );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-216</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-217</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-220</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;class T&gt;&#10;T (&amp;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-220</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>( T * ptr ))[4];@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-224</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, Vector &amp; v );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==4 &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==4 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A,class B&gt;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,3&gt; &gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-237</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;int C,class A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class R,class A&gt;&#10;R (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );&#10;&#10;//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3 &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class R,class A&gt;&#10;R (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; m );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<size>15</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Q&gt;::value&#10;&#10;template &lt;class Q&gt; -unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|S:)( Q &amp; q );&#10;template &lt;class Q&gt; -unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|V:)( Q &amp; q );&#10;template &lt;class Q&gt; -unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|X:)( Q &amp; q );&#10;template &lt;class Q&gt; -unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Y:)( Q &amp; q );&#10;template &lt;class Q&gt; -unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Z:)( Q &amp; q );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3 &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,3&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==3&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; axis, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B,class Cmp&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b, Cmp pred );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Q&gt;::value&#10;&#10;template &lt;int R,int C,class M&gt; -unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A:)( M &amp; m );&#10;&#10;template &lt;class M&gt; -unspecified-return-type- A00( M &amp; m );&#10;template &lt;class M&gt; -unspecified-return-type- A01( M &amp; m );&#10;...&#10;template &lt;class M&gt; -unspecified-return-type- A09( M &amp; m );&#10;template &lt;class M&gt; -unspecified-return-type- A10( M &amp; m );&#10;...&#10;template &lt;class M&gt; -unspecified-return-type- A99( M &amp; m );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3&#10;template &lt;class A&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class Scalar,class A&gt;&#10;-unspecified-return_type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;class T,int D&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();&#10;&#10;template &lt;class T,int R,int C&gt;&#10;-unspecified-return-type- (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)();@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-264</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-268</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B,class Cmp&gt;&#10;bool (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b, Cmp pred );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<size>35</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;A &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, B const &amp; b );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:):&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;=3 &amp;&amp;&#10;//  (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&#10;template &lt;class A&gt;&#10;void (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A &amp; a, typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) angle );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-276</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>[@template &lt;int Dim,class T&gt;&#10;T (&amp;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-276</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>( T * ptr ))[Dim];@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-277</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>[@template &lt;int R,int C&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( Matrix const &amp; m );@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>[@//Only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enabled if:): (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;B&gt;::value&#10;template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)( A const &amp; a, B b );@]&#10;</string>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>include</string>
								<shared_ptr>
									<id>283</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>275</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses the main diagonal of the matrix &apos;&apos;m&apos;&apos; as a vector.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@A tmp(a);&#10;a = tmp (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) b;&#10;return a;@]&#10;&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<size>27</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Assumptions:&#10;&#10;*Both &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::type&apos;&apos; are well defined&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value || (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;&#10;&#10;!!!!Requirements:&#10;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&gt;::value&apos;&apos; must be &apos;&apos;true&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&apos;&apos; must be copyable&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Dim&apos;&apos;&#10;&#10;This template is used by Boost QVM whenever it needs to deduce a vector type of certain dimension from the types of two user-supplied function parameters. The returned type must have accessible copy constructor (the &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; types themselves could be non-copyable, and either one of them may not be a vector type.)&#10;&#10;The main template definition returns an unspecified vector type of the requested dimension with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; obtained by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&apos;&apos;, except if &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; are the same vector type &apos;&apos;V&apos;&apos; of dimension &apos;&apos;Dim&apos;&apos;, in which case V is returned, which is only suitable for copyable types. Boost QVM also defines (partial) specializations for the non-copyable vector types it produces. Users can define other (partial) specializations for their own types.&#10;&#10;A typical use of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is for specifying the preferred vector type to be returned by the generic function template overloads in Boost QVM depending on the type of their arguments.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines all available function overloads that operate on quaternion, vector and matrix objects.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template which can be specialized to register user-defined quaternion types into Boost QVM.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This macro is not used directly by Boost QVM, except as the default value of other macros from (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:). A user-defined &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; should expand to a value that is valid substitution of the inline keyword in function definitions.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> (:link http://en.wikipedia.org/wiki/Rotation_matrix|matrix:) of unspecified type, of &apos;&apos;Dim&apos;&apos; rows and &apos;&apos;Dim&apos;&apos; columns and scalar type &apos;&apos;Angle&apos;&apos;, which performs a rotation around the Y axis at &apos;&apos;angle&apos;&apos; radians.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A quaternion that is the result of dividing the quaternion &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is a simple matrix type. It converts to any other matrix type of compatible size.&#10;&#10;The partial specialization of the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template makes the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template compatible with the generic operations defined by Boost QVM.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically for 4D vectors. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use vector objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;Boost QVM uses &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; in definitions of functions that are critical for the overall performance of the library, such as functions that access individual vector and matrix elements.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Normalizes &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Postcondition:&#10;&#10;&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(a)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::value(1)&apos;&apos;.&#10;&#10;(:include throws:)&#10;&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<size>15</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template is designed to be used as a public base for user-defined specializations of the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template, to easily define the required members. If it is used, the only member that must be defined by the user in a &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; specialization is &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;; the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; base will define &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;, as well as &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; automatically.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<size>77</size>
												<variant>2</variant>
												<string>Boost QVM is a generic library for working with &apos;&apos;&apos;q&apos;&apos;&apos;uaternions, &apos;&apos;&apos;v&apos;&apos;&apos;ectors and &apos;&apos;&apos;m&apos;&apos;&apos;atrices of static size with the emphasis on 2, 3 and 4-dimensional operations needed in graphics, video games and simulation applications.&#10;&#10;!!!Introduction&#10;&#10;In graphics and simulation applications, there is a need for a library that makes it easy to perform 2D and 3D transformations efficiently. C++ makes it possible to define vector and matrix types and to overload various operators to implement the standard algebraic operations. Because this is a relatively straightforward process, there are many such libraries in existence, each with its own types and operator overrloads. Such libraries are typically part of a higher level system, such as a graphics engine or a 3D modeling API. As a result, it is typical for programmers to have to integrate and to translate between several different quaternion, vector and matrix types that come with the various APIs they use.&#10;&#10;On the other hand, performance considerations often lead to matrix and vector types becoming coupled with a particular platform, or to (over time) acquire various &apos;&apos;#ifdefs&apos;&apos; needed to enable optimizations through platform-specific compiler features that control the physical format or layout of their elements. However, such optimizations may interfere with ease of use and portability; for example on some platforms requiring 16-byte alignment for matrix types makes them incompatible with standard containers.&#10;&#10;Boost QVM solves both of these issues by decoupling the standard algebraic operations from the types they operate on -- without compromising type safety.&#10;&#10;!!!Key design features of Boost QVM:&#10;&#10;* Emphasis on 2, 3 and 4-dimensional operations (including (:link http://en.wikipedia.org/wiki/Quaternion|quaternions:) and zero-overhead &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;) as needed in graphics and simulation applications.&#10;* Zero-overhead (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) that can be used to access an object with quaternion, vector or matrix semantics through a read-only or mutable reference of a different type. For example, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;C&gt;(m)&apos;&apos; binds the &apos;&apos;C&apos;&apos;-th column of a matrix &apos;&apos;m&apos;&apos; as a mutable vector type without the overhead of a temporary.&#10;* Integration of many user-defined or 3rd-party quaternion, vector or matrix types into a coherent type-safe system. This enables the user to build algebraic expressions using objects of diverse types that would otherwise be incompatible.&#10;* When users need to implement platform-specific or even project-specific optimizations in a given subsystem, Boost QVM makes it simple to define custom new types that automatically aquire the full set of algebraic operations so they can interface seamlessly with the rest of the program. At the same time, the user can define a limited number of overloads for the new types as needed to implement specific optimizations.&#10;&#10;!!!Contents&#10;&#10;#Tutorial&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#Reference&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Matrix-to-matrix:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Vector-to-matrix:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Matrix-to-vector:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Namespace boost::qvm::sfinae:)&#10;#(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-188</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;#(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-191</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;#(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-237</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;#(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-54</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;c&quot;:)&#10;#Indexes&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-264</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-137</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;##(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-120</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;&#10;!!!Download&#10;&#10;QVM is part of Boost. Please see git submodule at (:link https://github.com/boostorg/qvm|https://github.com/boostorg/qvm:).&#10;&#10;!!!Support&#10;&#10;For support, please use the (:link http://www.boost.org/community/groups.html#main|Boost Developers Mailing List:).</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically and only for 2D vectors and matrices. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use vector objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically for matrices of size 2x2, 2x1 and 1x2. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use matrix objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:pagelist tags=&quot;view&quot; except_tags=&quot;noindex&quot; fmt=&quot;index&quot; mod=&quot;m&quot;:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Adds the elements of &apos;&apos;b&apos;&apos; to the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<size>31</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Assumption:&#10;&#10;&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;.&#10;&#10;!!!!Requirements:&#10;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;::type&gt;::value&apos;&apos; must be &apos;&apos;true&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;::type&apos;&apos; must be copyable&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;::type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Rows&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;::type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Cols&apos;&apos;&#10;&#10;This template is used by Boost QVM whenever it needs to deduce a copyable matrix type of certain dimensions from a single user-supplied function parameter of matrix type. The returned type must have accessible copy constructor. Note that &apos;&apos;M&apos;&apos; itself may be non-copyable.&#10;&#10;The main template definition returns an unspecified copyable matrix type of size &apos;&apos;Rows&apos;&apos; x &apos;&apos;Cols&apos;&apos;, except if &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Rows &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;M&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Cols&apos;&apos;, in which case it returns &apos;&apos;M&apos;&apos;, which is suitable only if &apos;&apos;M&apos;&apos; is a copyable type. Boost QVM also defines (partial) specializations for the non-copyable matrix types it produces. Users can define other (partial) specializations for their own types.&#10;&#10;A typical use of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is for specifying the preferred matrix type to be returned by the generic function template overloads in Boost QVM depending on the type of their arguments.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A (:link http://en.wikipedia.org/wiki/Rotation_matrix|matrix:) of unspecified type, of &apos;&apos;Dim&apos;&apos; rows and &apos;&apos;Dim&apos;&apos; columns parameter, which performs a rotation around the &apos;&apos;axis&apos;&apos; at &apos;&apos;angle&apos;&apos; radians.&#10;&#10;(:include throws:)&#10;!!!!Note:&#10;&#10;The &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; function is not a </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>; it returns a temp object.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is the member type that user-defined (partial) specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template define the scalar type of a quaternion type. Valid scalar types are value types that satisfy the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A vector of the negated elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function template is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;v&apos;&apos;, by value or by const reference.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;Similar to &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos;, except that the individual elements of &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos; are passed to the binary predicate &apos;&apos;pred&apos;&apos; for comparison.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@A tmp(a);&#10;a = tmp (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) b;&#10;return a;@]&#10;&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;R1,R2&gt;(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that looks like the matrix &apos;&apos;m&apos;&apos; with rows &apos;&apos;R1&apos;&apos; and &apos;&apos;R2&apos;&apos; swapped.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;(m)&apos;&apos; returns a read-only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that looks like the matrix &apos;&apos;m&apos;&apos; with row &apos;&apos;R&apos;&apos; negated.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Assumption:&#10;&#10;&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Q&gt;::value&apos;&apos; is true.&#10;&#10;!!!!Requirements:&#10;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Q&gt;::type&gt;::value&apos;&apos; must be &apos;&apos;true&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Q&gt;::type&apos;&apos; must be copyable&#10;&#10;This template is used by Boost QVM whenever it needs to deduce a copyable quaternion type from a single user-supplied function parameter of quaternion type. Note that &apos;&apos;Q&apos;&apos; itself may be non-copyable.&#10;&#10;The main template definition returns &apos;&apos;Q&apos;&apos;, which means that it is suitable only for copyable quaternion types. Boost QVM also defines (partial) specializations for the non-copyable quaternion types it produces. Users can define other (partial) specializations for their own types.&#10;&#10;A typical use of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is for specifying the preferred quaternion type to be returned by the generic function template overloads in Boost QVM depending on the type of their arguments.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header introduces specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; templates that make it possible to pass C arrays of size 4 to any Boost QVM function that takes a quaternion.&#10;&#10;For example, after &apos;&apos;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&apos;&apos;, to compute the dot product of two float C arrays of size 4 interpreted as quaternions, you could use:&#10;&#10;[@float a[4], b[4];&#10;float dp = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(a,b);@]&#10;&#10;To use Boost QVM operator overloads, at least one of the arguments must not be of a built-in type; for example you can&apos;t multiply a C array quaternion by a scalar by using &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos; directly. Use &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; to work around this issue:&#10;&#10;[@float a[4];&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(a) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) 42;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> (:link https://en.wikipedia.org/wiki/Quaternion|quaternion:) of unspecified type and scalar type &apos;&apos;Angle&apos;&apos;, which performs a rotation around the Z axis at &apos;&apos;angle&apos;&apos; radians.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header file defines (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) that access the elements of a given vector object as a matrix object.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;&#10;        typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;());@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(axis,angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(axis,angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;Boost QVM uses &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; in definitions of functions that are not critical for the overall performance of the library but are extremely simple (such as one-liners) and therefore should always be inlined.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Copies all elements of the quaternion &apos;&apos;b&apos;&apos; to the quaternion &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is a list of all quaternion operations implemented by Boost QVM -- click on functions for individual documentation. General notes:&#10;&#10;* All functions use (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:). They are available for any C++ type but only if it has been registered through the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template.&#10;* When objects are returned by value their type is deduced either by the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template (for unary functions) or the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template (for binary functions).&#10;* The type of scalar arguments is deduced independently from the type of the quaternion argument, so they are not required to match. Scalar arguments must convert implicitly to the quaternion scalar type.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The squared magnitude of the quaternion &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;&apos;&apos;R&apos;&apos; must be copyable.&#10;&#10;!!!!Effects:&#10;&#10;As if: &apos;&apos;R r; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(r,a); return r;&apos;&apos;&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A read-only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) of a that looks like a vector of the same dimensions as &apos;&apos;a&apos;&apos;, but with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; &apos;&apos;Scalar&apos;&apos; and elements constructed from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;This operation divides a quaternion by a scalar.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is a list of all matrix operations implemented by Boost QVM -- click on functions for individual documentation. General notes:&#10;&#10;* All functions use (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:). They are available for any C++ type but only if it has been registered through the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template.&#10;* When objects are returned by value their type is deduced either by the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template (for unary functions) or the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template (for binary functions).&#10;* The type of scalar arguments is deduced independently from the type of the matrix argument, so they are not required to match. Scalar arguments must convert implicitly to the matrix scalar type.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Copies all elements of the vector &apos;&apos;b&apos;&apos; to the vector &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The result of multiplying the matrix &apos;&apos;a&apos;&apos; and the vector &apos;&apos;b&apos;&apos;, where &apos;&apos;b&apos;&apos; is interpreted as a matrix-column. The resulting matrix-row is returned as a vector type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;These &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; templates are used by Boost OVM to implement (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:). By default, they refer to the implementation provided in the (:link http://www.boost.org/doc/libs/release/libs/utility/enable_if.html|Boost enable_if library:).&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Subtracts the elements of &apos;&apos;b&apos;&apos; from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-54</id>
													</shared_ptr>
												</weak_ptr>
												<size>23</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;&apos;&apos;&apos;Q:&apos;&apos;&apos; What is the motivation behind Boost QVM? Why not just use uBLAS/Eigen/CML/GLM/etc?&#10;&#10;-&gt;&apos;&apos;&apos;A:&apos;&apos;&apos; The primary domain of Boost QVM is realtime graphics and simulation applications, so it is not a complete linear algebra library. While (naturally) there is some overlap with such libraries, QVM puts the emphasis on 2, 3 and 4 dimensional zero-overhead operations (hence domain-specific features like </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>).&#10;&#10;&apos;&apos;&apos;Q:&apos;&apos;&apos; How does the &apos;&apos;qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; (or &apos;&apos;qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, or &apos;&apos;qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;) template compare to vector types from other libraries?&#10;&#10;-&gt;&apos;&apos;&apos;A:&apos;&apos;&apos; The &apos;&apos;qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is not in any way central to the vector operations defined by QVM. The operations are designed to work with any user-defined vector type or with 3rd-party vector types (e.g. &apos;&apos;(:link https://msdn.microsoft.com/en-us/library/windows/desktop/bb172627%28v=vs.85%29.aspx|D3DVECTOR:)&apos;&apos;), while the &apos;&apos;qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is simply a default return type for expressions that use arguments of different types that would be incompatible outside of QVM. For example, if the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; hasn&apos;t been specialized, calling &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; with a user-defined type &apos;&apos;vec3&apos;&apos; and a user-defined type &apos;&apos;float3&apos;&apos; returns a &apos;&apos;qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;.&#10;&#10;&apos;&apos;&apos;Q:&apos;&apos;&apos; Why doesn&apos;t QVM use [] or () to access vector and matrix elements?&#10;&#10;-&gt;&apos;&apos;&apos;A:&apos;&apos;&apos; Because it&apos;s designed to work with user-defined types, and the C++ standard requires these operators to be members. Of course if a user-defined type defines &apos;&apos;operator[]&apos;&apos; or &apos;&apos;operator()&apos;&apos; they are available for use with other QVM functions, but QVM defines its own mechanism for </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>, as well as </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> support.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A matrix of the same size as &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;, with elements the elements of &apos;&apos;b&apos;&apos; subtracted from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A matrix that is the result of dividing the matrix &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;struct </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template, which acts as a generic vector type.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template which can be specialized to register user-defined matrix types into Boost QVM.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-60</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically and only for 4D vectors and matrices. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use vector objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;());@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-62</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>For example, after &apos;&apos;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&apos;&apos;, to compute the dot product of two C arrays, you could use:&#10;&#10;[@float a[4], b[4];&#10;float dp = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(a,b);@]&#10;&#10;To use Boost QVM operator overloads, at least one of the arguments must not be of a built-in type; for example you can&apos;t multiply a C array vector by a scalar by using &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos; directly. Use &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; to work around this issue:&#10;&#10;[@float a[4];&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(a) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) 42;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;This operation multiplies the matrix &apos;&apos;a&apos;&apos; matrix by the scalar &apos;&apos;b&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Normalizes &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Postcondition:&#10;&#10;&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(a)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::value(1)&apos;&apos;.&#10;&#10;(:include throws:)&#10;&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<size>25</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;In &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; Boost QVM defines appropriate &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; specializations that allow Boost QVM functions to operate directly on plain old C arrays:&#10;&#10;[@float v[3] = {0,0,7};&#10;float3 vrot = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;3&gt;(3.14159f) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) v;@]&#10;&#10;Naturally, operator overloads cannot kick in if all elements of an expression are of built-in types. The following is illegal:&#10;&#10;[@float v[3] = {0,0,7};&#10;v *= 42;@]&#10;&#10;The &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; function templates can be used to work around this issue:&#10;&#10;[@float v[3] = {0,0,7};&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) 42;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A 4x4 projection matrix of unspecified type of the following form:&#10;&#10;[@xs             0              0                 0&#10;0              ys             0                 0&#10;0              0         zf/(zn-zf)    zn*zf/(zn-zf)&#10;0              0             -1                 0@]&#10;&#10;where ys=cot(fov_y/2), and xs=ys/aspect.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses the vector &apos;&apos;v&apos;&apos; as a row matrix.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This type template defines a compile-time boolean constant value which can be used to determine whether a type &apos;&apos;T&apos;&apos; is a matrix type. For matrix types, the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template can be used to access their elements generically, or to obtain their dimensions and scalar type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;C1,C2&gt;(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that looks like the matrix &apos;&apos;m&apos;&apos; with rows &apos;&apos;C1&apos;&apos; and &apos;&apos;C2&apos;&apos; swapped.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Subtracts the elements of &apos;&apos;b&apos;&apos; from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;true if each element of &apos;&apos;a&apos;&apos; compares equal to its corresponding element of &apos;&apos;b&apos;&apos;, false otherwise.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-73</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>For example, after &apos;&apos;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&apos;&apos;, to compute the determinant of a square 2D C array matrix, you can use:&#10;&#10;[@float a[4][4];&#10;float det = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(a);@]&#10;&#10;To use Boost QVM operator overloads, at least one of the arguments must not be of a built-in type; for example, you can&apos;t multiply a C array matrix by a scalar by using &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos; directly. Use &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; to work around this issue:&#10;&#10;[@float a[4][4];&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(a) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) 42;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A read-only vector of unspecified type with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; &apos;&apos;T&apos;&apos; and size &apos;&apos;S&apos;&apos;, with all elements equal to &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::value(0)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A vector that is the result of dividing the vector &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A vector of the same size as &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;, with elements the elements of &apos;&apos;b&apos;&apos; added to the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R,C&gt;(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that looks like the matrix &apos;&apos;m&apos;&apos; with row &apos;&apos;R&apos;&apos; and column &apos;&apos;C&apos;&apos; deleted.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-79</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A reference of type &quot;array of &apos;&apos;Row&apos;&apos; arrays of &apos;&apos;Col&apos;&apos; elements of type &apos;&apos;T&apos;&apos;&quot; to the memory pointed by &apos;&apos;ptr&apos;&apos;. This makes it possible to use the array at &apos;&apos;ptr&apos;&apos; as a matrix of size &apos;&apos;Row&apos;&apos; x &apos;&apos;Col&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A quaternion with elements equal to the elements of &apos;&apos;a&apos;&apos; added to the corresponding elements of &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header introduces specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; templates that make it possible to pass C arrays to any Boost QVM function that takes a vector of matching size.&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-62</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses the vector &apos;&apos;v&apos;&apos; as a square matrix of the same dimensions in which the elements of &apos;&apos;v&apos;&apos; appear as the main diagonal and all other elements are zero.&#10;&#10;Note: the returned matrix type is effectively a scaling matrix.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines all available function overloads that operate on matrix objects.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The result of multiplying the quaternions &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;Boost QVM defines various function templates that provide static mapping between (possibly user-defined) quaternion, vector and matrix types. The example below multiplies column 1 (Boost QVM indexes are always zero-based) of the matrix &apos;&apos;m&apos;&apos; by a scalar:&#10;&#10;[@void multiply_column1( float33 &amp; m, float scalar )&#10;{&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;1&gt;(m) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) scalar;&#10;}@]&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;1&gt;(m)&apos;&apos; is a lvalue of an unspecified 3D vector type that refers to column 1 of &apos;&apos;m&apos;&apos;. Note however that this does not create any temporary objects; instead &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|operator*=:)&apos;&apos; above works directly with a reference to &apos;&apos;m&apos;&apos;.&#10;&#10;Here is another example, multiplying a transposed view of a matrix by a vector of some user-defined type &apos;&apos;float3&apos;&apos;:&#10;&#10;[@float3 v = {0,0,7};&#10;float3 vrot = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)((:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;3&gt;(3.14159f)) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) v;@]&#10;&#10;In general, the various view functions return references of unspecified, non-copyable types that refer to the original object. They can be assigned from or converted to any compatible vector or matrix type.&#10;&#10;For more details, see (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;wp&quot;:).&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that looks like the matrix &apos;&apos;m&apos;&apos; with row &apos;&apos;R&apos;&apos; deleted.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header provides generic (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) support for vector objects.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;C&gt;(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that looks like the matrix &apos;&apos;m&apos;&apos; with column &apos;&apos;C&apos;&apos; deleted.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;true if each element of &apos;&apos;a&apos;&apos; compares equal to its corresponding element of &apos;&apos;b&apos;&apos;, false otherwise.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;All static assertions in Boost QVM use the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; macro.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This macro is not used directly by Boost QVM, except as the default value of other macros from (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:). A user-defined &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; should expand to a value that is valid substitution of the inline keyword in function definitions, to indicate that the compiler &apos;&apos;must&apos;&apos; inline the function. Of course, actual inlining may not occur.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A read-only quaternion of unspecified type with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; &apos;&apos;T&apos;&apos;, with all elements equal to &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::value(0)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Assumptions:&#10;&#10;&apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; satisfy the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;&#10;!!!!Returns:&#10;&#10;If &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; are the same type, &apos;&apos;impl&lt;A,B&gt;::type&apos;&apos; returns that type. Otherwise, &apos;&apos;impl&lt;A,B&gt;::type&apos;&apos; is well defined for the following types only: &apos;&apos;signed/unsigned char&apos;&apos;, &apos;&apos;signed/unsigned short&apos;&apos;, &apos;&apos;signed/unsigned int&apos;&apos;, &apos;&apos;signed/unsigned long&apos;&apos;, &apos;&apos;float&apos;&apos; and &apos;&apos;double&apos;&apos;. The deduction logic is as follows:&#10;&#10;*if either of &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; is &apos;&apos;double&apos;&apos;, the result is &apos;&apos;double&apos;&apos;;&#10;*else, if one of &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; is an integer type and the other is &apos;&apos;float&apos;&apos;, the result is &apos;&apos;float&apos;&apos;;&#10;*else, if &apos;&apos;A&apos;&apos; or &apos;&apos;B&apos;&apos; is a signed integer and the other type is unsigned integer, the signed type is changed to unsigned, and then the lesser of the two integers is promoted to the other.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function template is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns mutable reference to the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;v&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is a simple quaternion type. It converts to any other quaternion type.&#10;&#10;The partial specialization of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template makes the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template compatible with the generic operations defined by Boost QVM.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The squared magnitude of the vector &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A read-only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) of &apos;&apos;a&apos;&apos; that looks like a matrix of the same dimensions as &apos;&apos;a&apos;&apos;, but with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; &apos;&apos;Scalar&apos;&apos; and elements constructed from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-98</id>
													</shared_ptr>
												</weak_ptr>
												<size>45</size>
												<variant>2</variant>
												<string>[@#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;struct float33 { float a[3][3]; };&#10;&#10;namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;        template &lt;&gt;&#10;        struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float33&gt;&#10;        {&#10;            static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)=3;&#10;            static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)=3;&#10;            typedef float (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);&#10;&#10;            template &lt;int R,int C&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( float33 &amp; m ) { return m.a[R][C]; }&#10;            template &lt;int R,int C&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( float33 const &amp; m ) { return m.a[R][C]; }&#10;&#10;            static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int r, int c, float33 &amp; m ) { return m.a[r][c]; }&#10;            static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int r, int c, float33 const &amp; m ) { return m.a[r][c]; }&#10;        };&#10;    }&#10;}@]&#10;&#10;Equivalently, we could use the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template to shorten the above to:&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;        template &lt;&gt;&#10;        struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float33&gt;: </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;float33,float,3,3&gt;&#10;        {&#10;            template &lt;int R,int C&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( float33 &amp; m ) { return m.a[R][C]; }&#10;&#10;            static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int r, int c, float33 &amp; m ) { return m.a[r][c]; }&#10;        };&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header introduces specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; templates that make it possible to pass 2D C arrays to any Boost QVM function that takes a matrix of matching size.&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-73</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-100</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically and only for 3D vectors and matrices. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use vector objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is a list of all vector operations implemented by Boost QVM -- click on functions for individual documentation. General notes:&#10;&#10;* All functions use (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:). They are available for any C++ type but only if it has been registered through the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template.&#10;* When objects are returned by value their type is deduced either by the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template (for unary functions) or the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template (for binary functions).&#10;* The type of scalar arguments is deduced independently from the type of the vector argument, so they are not required to match. Scalar arguments must convert implicitly to the vector scalar type.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-103</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header allows </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> only for 3D vectors. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you don&apos;t need to swizzle vectors of other dimensions.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-104</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically for 3D vectors. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use vector objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> (:link http://en.wikipedia.org/wiki/Rotation_matrix|matrix:) of unspecified type, of &apos;&apos;Dim&apos;&apos; rows and &apos;&apos;Dim&apos;&apos; columns and scalar type &apos;&apos;Angle&apos;&apos;, which performs a rotation around the X axis at &apos;&apos;angle&apos;&apos; radians.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines all available function overloads that operate on vector objects.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Preconditions:&#10;&#10;&apos;&apos;det!=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;::value(0)&apos;&apos;&#10;&#10;!!!!Returns:&#10;&#10;Both overloads compute the inverse of &apos;&apos;a&apos;&apos;. The first overload takes the pre-computed determinant of &apos;&apos;a&apos;&apos;.&#10;&#10;(:include throws:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> (:link http://en.wikipedia.org/wiki/Rotation_matrix|matrix:) of unspecified type, of &apos;&apos;Dim&apos;&apos; rows and &apos;&apos;Dim&apos;&apos; columns and scalar type &apos;&apos;Angle&apos;&apos;, which performs a rotation around the Z axis at &apos;&apos;angle&apos;&apos; radians.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;An expression of the form of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A:)&lt;I&gt;(v)&apos;&apos; can be used to access the &apos;&apos;I&apos;&apos;-th element a vector object &apos;&apos;v&apos;&apos;. For example, the expression:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A:)&lt;1&gt;(v) *= 42;@]&#10;&#10;can be used to multiply the element at index 1 (indexing in Boost QVM is always zero-based) of a vector &apos;&apos;v&apos;&apos; by 42.&#10;&#10;For convenience, there are also non-template overloads for &apos;&apos;I&apos;&apos; from 0 to 9; an alternative way to write the above expression is:&#10;&#10;[@A1(v) *= 42;@]&#10;&#10;&apos;&apos;X&apos;&apos;, &apos;&apos;Y&apos;&apos;, &apos;&apos;Z&apos;&apos; and &apos;&apos;W&apos;&apos; act the same as &apos;&apos;A0&apos;&apos;/&apos;&apos;A1&apos;&apos;/&apos;&apos;A2&apos;&apos;/&apos;&apos;A3&apos;&apos;; yet another alternative way to write the above expression is:&#10;&#10;[@Y(v) *= 42;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This exception indicates that an operation requires a matrix with non-zero determinant, but the computed determinant is zero.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This member of user-defined (partial) specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must be a compile-time integer constant greater than zero that defines the number of rows of a user-defined matrix type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<size>33</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Assumptions:&#10;&#10;*Both &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::type&apos;&apos; are well defined&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value || (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;&#10;&#10;!!!!Requirements:&#10;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&gt;::value&apos;&apos; must be &apos;&apos;true&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&apos;&apos; must be copyable&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Rows&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Cols&apos;&apos;&#10;&#10;This template is used by Boost QVM whenever it needs to deduce a matrix type of certain dimensions from the types of two user-supplied function parameters. The returned type must have accessible copy constructor (the &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; types themselves could be non-copyable, and either one of them may be a non-matrix type.)&#10;&#10;The main template definition returns an unspecified matrix type of the requested dimensions with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; obtained by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&apos;&apos;, except if &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; are the same matrix type &apos;&apos;M&apos;&apos; of dimensions &apos;&apos;Rows&apos;&apos; x &apos;&apos;Cols&apos;&apos;, in which case &apos;&apos;M&apos;&apos; is returned, which is only suitable for copyable types. Boost QVM also defines (partial) specializations for the non-copyable matrix types it produces. Users can define other (partial) specializations for their own types.&#10;&#10;A typical use of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is for specifying the preferred matrix type to be returned by the generic function template overloads in Boost QVM depending on the type of their arguments.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The magnitude of the quaternion &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<size>51</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;Out of the box Boost QVM defines generic yet simple &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; types. For example, the following snippet creates a quaternion object that rotates around the X axis:&#10;&#10;[@#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;....&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float&gt; rx=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(3.14159f);@]&#10;&#10;Similarly, a matrix that translates by a given vector can be created as follows:&#10;&#10;[@#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;....&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float,3&gt; v={0,0,7};&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float,4,4&gt; tr=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v);@]&#10;&#10;The usual quaternion, vector and matrix operations work on these Boost QVM types, however &apos;&apos;the operations are decoupled from any specific types&apos;&apos;: they work on any suitable type that has been registered by specializing the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; templates.&#10;&#10;For example, a user-defined 3D vector type &apos;&apos;float3&apos;&apos; can be introduced to Boost QVM as follows:&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;&#10;After a similar specialization of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template for a user-defined 3x3 matrix type &apos;&apos;float33&apos;&apos;, the full range of vector and matrix operations defined by Boost QVM headers becomes available automatically:&#10;&#10;[@float3 v;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|X:)(v) = 0;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Y:)(v) = 0;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Z:)(v) = 7;&#10;float vmag = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(v);&#10;float33 m = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;3&gt;(3.14159f);&#10;float3 vrot = m (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) v;@]&#10;&#10;User-defined quaternion types are similarly introduced to Boost QVM by specializing the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Copies all elements of the matrix &apos;&apos;b&apos;&apos; to the matrix &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-120</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:pagelist tags=&quot;type&quot; except_tags=&quot;noindex&quot; fmt=&quot;index&quot;:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;C&gt;(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses column &apos;&apos;C&apos;&apos; of the matrix &apos;&apos;m&apos;&apos; as a vector.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;&apos;&apos;R&apos;&apos; must be copyable.&#10;&#10;!!!!Effects:&#10;&#10;As if: &apos;&apos;R r; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(r,a); return r;&apos;&apos;&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;`!(a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|==:) b)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header file defines (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) that access a subset of the elements of a given matrix object as a vector object.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;());@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(axis,angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;`!(a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|==:) b)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;SFINAE stands for Substitution Failure Is Not An Error. This refers to a situation in C++ where an invalid substitution of template parameters (including when those parameters are deduced implicitly as a result of an unqualified call) is not in itself an error.&#10;&#10;In absence of concepts support, SFINAE can be used to disable function template overloads that would otherwise present a signature that is too generic. More formally, this is supported by the (:link http://www.boost.org/doc/libs/release/libs/utility/enable_if.html|Boost enable_if library:).&#10;&#10;For example, Boost QVM defines &apos;&apos;operator*&apos;&apos; overload which works with any user-defined matrix and vector types. The naive approach would be to declare this overload as follows:&#10;&#10;[@template &lt;class Matrix,class Vector&gt;&#10;Vector operator*( Matrix const &amp; m, Vector const &amp; v );@]&#10;&#10;Even if the function definition might contain code that would compile only for &apos;&apos;Matrix&apos;&apos; and &apos;&apos;Vector&apos;&apos; types, because the function declaration itself is valid, it will participate in overload rezolutions when multiplying objects of any two types whatsoever. This typically renders overload resolutions ambiguous and the compiler (correctly) issues an error.&#10;&#10;Using &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, Boost QVM declares such overloads in a way that they retain their generic signature but only participate (in overload resolutions) if the passed parameters make sense depending on the semantics of the operation being defined:&#10;&#10;[@template &lt;class A,class B&gt;&#10;typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|enable_if_c:)&lt;&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value &amp;&amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:), //Condition&#10;    B&gt;::type //Return type&#10;operator*( A const &amp; a, B const &amp; b );@]&#10;&#10;For brevity, function declarations throughout this documentation specify the condition which controls whether they are enabled or not without specifying exactly what &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; construct is used to achieve this effect.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<size>55</size>
												<variant>2</variant>
												<string>!!!Interoperability&#10;&#10;An important design goal of Boost QVM is that it works seamlessly with 3rd-party quaternion, vector and matrix types and libraries. Even when such libraries overload the same C++ operators as Boost QVM, it is safe to bring the entire &apos;&apos;boost::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; namespace in scope by specifying:&#10;&#10;[@using namespace boost::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:);@]&#10;&#10;The above using directive does not introduce ambiguities with function and operator overloads a 3rd-party library may define because:&#10;&#10;*Most &apos;&apos;boost::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; function overloads and all operator overloads use (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:), which makes them disappear unless an expression uses types that have the appropriate Boost QVM-specific (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) defined;&#10;*Whenever such overloads are compatible with a given expression, their signature is extremely generic, which means that any other (user-defined) compatible overload will be a better match in any overload resolution.&#10;&#10;Bringing the &apos;&apos;boost::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; namespace in scope lets you mix vector and matrix types that come from different APIs into a common, type-safe framework. In this case however, it should be considered what types should be returned by binary operations that return an object by value. For example, if you multiply a 3x3 matrix &apos;&apos;m1&apos;&apos; of type &apos;&apos;user_matrix1&apos;&apos; by a 3x3 matrix &apos;&apos;m2&apos;&apos; of type &apos;&apos;user_matrix2&apos;&apos;, what type should that operation return?&#10;&#10;The answer is that by default, Boost QVM returns some kind of compatible matrix type, so it is always safe to write:&#10;&#10;[@auto &amp; m = m1 (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) m2;@]&#10;&#10;However, the type deduced by default converts implicitly to any compatible matrix type, so the following is also valid, at the cost of a temporary:&#10;&#10;[@user_matrix1 m = m1 (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) m2;@]&#10;&#10;While the temporary object can be optimized away by many compilers, it can be avoided altogether by specializing the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. For example, to specify that multiplying a &apos;&apos;user_matrix1&apos;&apos; by a &apos;&apos;user_matrix2&apos;&apos; should always produce a &apos;&apos;user_matrix1&apos;&apos; object, you could specify:&#10;&#10;[@namespace&#10;boost&#10;    {&#10;    namespace&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;        {&#10;        template &lt;&gt;&#10;        struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;user_matrix1,user_matrix2,3,3&gt;&#10;            { typedef user_matrix1 type; };&#10;&#10;        template &lt;&gt;&#10;        struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;user_matrix2,user_matrix1,3,3&gt;&#10;            { typedef user_matrix1 type; };&#10;        }&#10;    }@]&#10;&#10;Finally, any time you need to create a matrix of a particular C++ type from any other compatible matrix type, you can use the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos; function:&#10;&#10;[@user_matrix2 m=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;user_matrix2&gt;(m1 (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) m2);@]&#10;&#10;Perhaps surprisingly, unary operations that return an object by value have a similar, though simpler issue. That&apos;s because the argument they&apos;re called with may not be copyable, as in:&#10;&#10;[@float m[3][3];&#10;auto &amp; inv = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(m);@]&#10;&#10;Again, Boost QVM &quot;just works&quot;, returning an object of suitable matrix type that is copyable. This deduction process can also be controlled, by specializing the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template.&#10;&#10;-&gt;Note: Bringing the entire &apos;&apos;boost::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; namespace in scope may introduce ambiguities when accessing &apos;&apos;types&apos;&apos; (as opposed to functions) defined in 3rd-party libraries. In that case, you can safely bring namespace &apos;&apos;boost::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; in scope instead, which contains only function and operator overloads that use (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;&#10;-&gt;&apos;&apos;&apos;Warning&apos;&apos;&apos;: Be mindful of potential ODR violation when using &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; in 3rd party libraries. For example this could happen if &apos;&apos;lib1&apos;&apos; defines &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;lib1::vec,lib2::vec&gt;::type&apos;&apos; as &apos;&apos;lib1::vec&apos;&apos; and in the same program &apos;&apos;lib2&apos;&apos; defines &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;lib1::vec,lib2::vec&gt;::type&apos;&apos; as &apos;&apos;lib2::vec&apos;&apos;. It is best to keep such specializations out of &apos;&apos;lib1&apos;&apos; and &apos;&apos;lib2&apos;&apos;. Of course, it is always safe for &apos;&apos;lib1&apos;&apos; and &apos;&apos;lib2&apos;&apos; to use &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos; to convert between the &apos;&apos;lib1::vec&apos;&apos; and &apos;&apos;lib2::vec&apos;&apos; types as needed.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-131</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The result of multiplying the vector &apos;&apos;a&apos;&apos; and the matrix &apos;&apos;b&apos;&apos;, where a is interpreted as a matrix-row. The resulting matrix-column is returned as a vector type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This type template defines a compile-time boolean constant value which can be used to determine whether a type &apos;&apos;T&apos;&apos; is a valid scalar type. It must be specialized together with the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template in order to introduce a user scalar type to Boost QVM. Such types must satisfy the </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The magnitude of the vector &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;An identity quaternion with scalar type &apos;&apos;S&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;An identity matrix of size &apos;&apos;D&apos;&apos;x&apos;&apos;D&apos;&apos; and scalar type &apos;&apos;S&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-137</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:pagelist tags=&quot;function&quot; except_tags=&quot;noindex&quot; fmt=&quot;index&quot;:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-138</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include decl:)&#10;&#10;This function template is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns a mutable reference to the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;q&apos;&apos;.&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses the vector &apos;&apos;v&apos;&apos; as (:link https://en.wikipedia.org/w/index.php?title=Translation_(geometry)#Matrix_representation|translation matrix:) of size &apos;&apos;v&apos;&apos;&apos;s dimension plus one.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-141</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A vector that is the result of multiplying the scalar &apos;&apos;a&apos;&apos; by the vector &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A vector of the same size as &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;, with elements the elements of &apos;&apos;b&apos;&apos; subtracted from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns the element at row &apos;&apos;r&apos;&apos; and column &apos;&apos;c&apos;&apos; of &apos;&apos;m&apos;&apos;, by value or by const reference.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A quaternion of unspecified type which performs a rotation around the &apos;&apos;axis&apos;&apos; at &apos;&apos;angle&apos;&apos; radians.&#10;&#10;(:include throws:)&#10;!!!!Note:&#10;&#10;The &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; function is not a </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>; it returns a temp object.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;C&gt;(m)&apos;&apos; returns a read-only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that looks like the matrix &apos;&apos;m&apos;&apos; with column &apos;&apos;C&apos;&apos; negated.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(m)&apos;&apos; returns a mutable (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that (:link https://en.wikipedia.org/wiki/Transpose|transposes:) the matrix &apos;&apos;m&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A matrix of the negated elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines all exception types emitted by various Boost QVM functions.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This member of user-defined (partial) specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must be a compile-time integer constant greater than zero that defines the number of columns of a user-defined matrix type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-154</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header allows </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> only for 2D vectors. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you don&apos;t need to swizzle vectors of other dimensions.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns the &apos;&apos;i&apos;&apos;-th element of &apos;&apos;v&apos;&apos;, by value or by const reference.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!Matrix-to-matrix (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;pw&quot;:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The result of (:link http://en.wikipedia.org/wiki/Matrix_multiplication|multiplying:) the matrices &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;This operation divides a vector by a scalar.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is the member type that user-defined (partial) specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template define the scalar type of a matrix type. Valid scalar types are value types that satisfy the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;true if each element of &apos;&apos;a&apos;&apos; compares equal to its corresponding element of &apos;&apos;b&apos;&apos;, false otherwise.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template which can be specialized to register user-defined vector types into Boost QVM.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines various macros used throughout Boost QVM to specify the desired inlining strategy for different functions depending on their semantics.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;The boost::</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> namespace contains all Boost QVM type and function names. The boost::</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>::</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> namespace contains only function names that use </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header introduces in the &apos;&apos;boost::qvm&apos;&apos; namespace function template declarations corresponding to the functions defined in the standard C header file &apos;&apos;&lt;math.h&gt;&apos;&apos;, and defines &apos;&apos;float&apos;&apos; and &apos;&apos;double&apos;&apos; specializations which simply call the appropriate C function.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This type template defines a compile-time boolean constant value which can be used to determine whether a type &apos;&apos;T&apos;&apos; is a quaternion type. For quaternion types, the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template can be used to access their elements generically, or to obtain their scalar type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header provides generic access to the elements of a given vector object.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function template is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns mutable reference to the element at row &apos;&apos;R&apos;&apos; and column &apos;&apos;C&apos;&apos; of &apos;&apos;m&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Adds the elements of &apos;&apos;b&apos;&apos; to the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header provides generic access to the elements of a given quaternion object.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Preconditions:&#10;&#10;&apos;&apos;t&gt;=0 &amp;&amp; t&lt;=1&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;A quaternion that is the result of Spherical Linear Interpolation of the quaternions &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos; and the interpolation parameter &apos;&apos;c&apos;&apos;. When &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; is applied to unit quaternions, the quaternion path maps to a path through 3D rotations in a standard way. The effect is a rotation with uniform angular velocity around a fixed rotation axis.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template which can be used as a convenient base type for &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; specializations.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This type template defines a compile-time boolean constant value which can be used to determine whether a type &apos;&apos;T&apos;&apos; is a vector type. For vector types, the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template can be used to access their elements generically, or to obtain their dimension and scalar type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> machinery used throughout Boost QVM.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header provides generic access to the elements of a given matrix object.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-177</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines various (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) between vectors and matrices.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<size>21</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;!!!!Assumption:&#10;&#10;&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;.&#10;&#10;!!!!Requirements:&#10;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::type&gt;::value&apos;&apos; must be &apos;&apos;true&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::type&apos;&apos; must be copyable&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::type&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Dim&apos;&apos;&#10;&#10;This template is used by Boost QVM whenever it needs to deduce a copyable vector type of certain dimension from a single user-supplied function parameter of vector type. The returned type must have accessible copy constructor. Note that &apos;&apos;V&apos;&apos; may be non-copyable.&#10;&#10;The main template definition returns an unspecified copyable vector type of size &apos;&apos;Dim&apos;&apos;, except if &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;V&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)==Dim&apos;&apos;, in which case it returns &apos;&apos;V&apos;&apos;, which is suitable only if &apos;&apos;V&apos;&apos; is a copyable type. Boost QVM also defines (partial) specializations for the non-copyable vector types it produces. Users can define other (partial) specializations for their own types.&#10;&#10;A typical use of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is for specifying the preferred vector type to be returned by the generic function template overloads in Boost QVM depending on the type of their arguments.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<size>33</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is designed to be used as a public base for user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template, to easily define the required members. If it is used, the only member that must be defined by the user in a &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; specialization is &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;; the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; base will define &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;, as well as &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; automatically.&#10;&#10;Optionally, the user may also define &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;, in which case the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; base will provide a suitable &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; definition automatically. In addition, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; defines a &apos;&apos;&apos;protected&apos;&apos;&apos; implementation of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; which may be made publicly available by the deriving &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; specialization in case the vector type for which it is being specialized can not be indexed efficiently. This &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; function is less efficient (using meta-programming), implemented in terms of the required user-defined &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The (:link http://en.wikipedia.org/wiki/Dot_product|dot product:) of the quaternions &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This exception indicates that an operation requires a vector or a quaternion with non-zero magnitude, but the computed magnitude is zero.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;Swizzling allows zero-overhead direct access to a (possibly rearranged) subset of the elements of 2D, 3D and 4D vectors. For example, if &apos;&apos;v&apos;&apos; is a 4D vector, the expression &apos;&apos;(v,YX)&apos;&apos; is a 2D (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) whose &apos;&apos;X&apos;&apos; element refers to the &apos;&apos;Y&apos;&apos; element of &apos;&apos;v&apos;&apos;, and whose &apos;&apos;Y&apos;&apos; element refers to the &apos;&apos;X&apos;&apos; element of &apos;&apos;v&apos;&apos;. Like other (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) &apos;&apos;YX&apos;&apos; is an lvalue, that is, if &apos;&apos;v2&apos;&apos; is a 2D vector, one could write:&#10;&#10;[@YX(v) = v2;@]&#10;&#10;The above will leave the &apos;&apos;Z&apos;&apos; and &apos;&apos;W&apos;&apos; elements of &apos;&apos;v&apos;&apos; unchanged but assign the &apos;&apos;Y&apos;&apos; element of &apos;&apos;v2&apos;&apos; to the &apos;&apos;X&apos;&apos; element of &apos;&apos;v&apos;&apos; and the &apos;&apos;X&apos;&apos; element of &apos;&apos;v2&apos;&apos; to the &apos;&apos;Y&apos;&apos; element of &apos;&apos;v&apos;&apos;.&#10;&#10;All permutations of &apos;&apos;X&apos;&apos;, &apos;&apos;Y&apos;&apos;, &apos;&apos;Z&apos;&apos;, &apos;&apos;W&apos;&apos;, &apos;&apos;0&apos;&apos;, &apos;&apos;1&apos;&apos; for 2D, 3D and 4D swizzling are available (if the first character of the swizzle identifier is 0 or 1, it is preceded by a &apos;&apos;_&apos;&apos;, for example &apos;&apos;_11XY&apos;&apos;).&#10;&#10;It is valid to use the same vector element more than once: the expression &apos;&apos;ZZZ(v)&apos;&apos; is a 3D vector whose &apos;&apos;X&apos;&apos;, &apos;&apos;Y&apos;&apos; and &apos;&apos;Z&apos;&apos; elements all refer to the &apos;&apos;Z&apos;&apos; element of &apos;&apos;v&apos;&apos;.&#10;&#10;Finally, scalars can be &quot;swizzled&quot; to access them as vectors: the expression &apos;&apos;_0X01(42.0f)&apos;&apos; is a 4D vector with &apos;&apos;X==0&apos;&apos;, &apos;&apos;Y==42.0f&apos;&apos;, &apos;&apos;Z==0&apos;&apos;, &apos;&apos;W==1&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns mutable reference to the element at row &apos;&apos;r&apos;&apos; and column &apos;&apos;c&apos;&apos; of &apos;&apos;m&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;`!(a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|==:) b)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is the macro Boost QVM uses to assert on precondition violations and logic errors. A user-defined &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; should have the semantics of the standard &apos;&apos;assert&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type tmp;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(tmp,a);&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(tmp);&#10;return tmp;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-188</id>
													</shared_ptr>
												</weak_ptr>
												<size>39</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-277</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;&#10;&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api pre_indent=&quot;8&quot;:)&#10;    }&#10;&#10;}&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> api:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;This operation multiplies the quaternion &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-191</id>
													</shared_ptr>
												</weak_ptr>
												<size>37</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;While Boost QVM defines generic functions that operate on matrix and vector types of arbitrary static dimensions, it also provides a code generator that can be used to create compatible header files that define much simpler specializations of these functions for specific dimensions. This is useful during debugging since the generated code is much easier to read than the template metaprogramming-heavy generic implementations. It is also potentially friendlier to the optimizer.&#10;&#10;The code generator is a command-line utility program. Its source code can be found in the &apos;&apos;libs/qvm/gen&apos;&apos; directory. It was used to generate the following headers:&#10;&#10;* 2D, 3D and 4D matrix operations:&#10;** &apos;&apos;boost/qvm/gen/mat_operations2.hpp&apos;&apos; (matrices of size 2x2, 2x1 and 1x2, included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/mat_operations3.hpp&apos;&apos; (matrices of size 3x3, 3x1 and 1x3, included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-216</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/mat_operations4.hpp&apos;&apos; (matrices of size 4x4, 4x1 and 1x4, included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-213</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;* 2D, 3D and 4D vector operations:&#10;** &apos;&apos;boost/qvm/gen/v2.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-217</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/v3.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-104</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/v4.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;* 2D, 3D and 4D vector-matrix operations:&#10;** &apos;&apos;boost/qvm/gen/vm2.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/vm3.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-100</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/vm4.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-60</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;* 2D, 3D and 4D vector swizzling operations:&#10;** &apos;&apos;boost/qvm/gen/sw2.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-154</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/sw3.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-103</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;** &apos;&apos;boost/qvm/gen/sw4.hpp&apos;&apos; (included by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-197</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;)&#10;&#10;Any such generated headers must be included before the corresponding generic header file is included. For example, if one creates a header &apos;&apos;boost/qvm/gen/m5.hpp&apos;&apos;, it must be included before &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;. However, the generic headers (&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;) already include the generated headers from the list above, so the generated headers don&apos;t need to be included manually.&#10;&#10;Note: that headers under &apos;&apos;boost/qvm/gen&apos;&apos; are not part of the public interface of Boost QVM. For example, &apos;&apos;boost/qvm/gen/mat_operations2.hpp&apos;&apos; should not be included directly; &apos;&apos;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&apos;&apos; instead.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This member of user-defined (partial) specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must be a compile-time integer constant greater than zero that defines the size (number of elements, or dimension) of a user-defined vector type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A matrix that is the result of multiplying the matrix &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> (:link https://en.wikipedia.org/wiki/Quaternion|quaternion:) of unspecified type and scalar type &apos;&apos;Angle&apos;&apos;, which performs a rotation around the Y axis at &apos;&apos;angle&apos;&apos; radians.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@return a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|XYZ1:)(x);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-197</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header allows </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> only for 4D vectors. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you don&apos;t need to swizzle vectors of other dimensions.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> (:link https://en.wikipedia.org/wiki/Quaternion|quaternion:) of unspecified type and scalar type &apos;&apos;Angle&apos;&apos;, which performs a rotation around the X axis at &apos;&apos;angle&apos;&apos; radians.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<size>35</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is designed to be used as a public base for user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template, to easily define the required members. If it is used, the only member that must be defined by the user in a &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; specialization is &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;; the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; base will define &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;, as well as &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; automatically.&#10;&#10;Optionally, the user may also define &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;, in which case the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; base will provide a suitable &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; definition automatically. In addition, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; defines a &apos;&apos;&apos;protected&apos;&apos;&apos; implementation of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; which may be made publicly available by the deriving &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; specialization in case the matrix type for which it is being specialized can not be indexed efficiently. This &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; function is less efficient (using meta-programming), implemented in terms of the required user-defined &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;An identity (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) of &apos;&apos;a&apos;&apos;; that is, it simply accesses the elements of &apos;&apos;a&apos;&apos;.&#10;&#10;This allows calling Boost QVM operations when &apos;&apos;a&apos;&apos; is of built-in type, for example a plain old C array.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include decl:)&#10;&#10;This function template is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;q&apos;&apos;, by value or by const reference.&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;This operation divides a matrix by a scalar.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;A valid scalar type &apos;&apos;S&apos;&apos; must have accessible destructor, default constructor, copy constructor and assignment operator, and must support the following operations:&#10;&#10;[@S operator*( S, S );&#10;S operator/( S, S );&#10;S operator+( S, S );&#10;S operator-( S, S );&#10;&#10;S &amp; operator*=( S &amp;, S );&#10;S &amp; operator/=( S &amp;, S );&#10;S &amp; operator+=( S &amp;, S );&#10;S &amp; operator-=( S &amp;, S );&#10;&#10;bool operator==( S, S );&#10;bool operator!=( S, S );@]&#10;&#10;In addition, the expression &apos;&apos;S(0)&apos;&apos; should construct a scalar of value zero, and &apos;&apos;S(1)&apos;&apos; should construct a scalar of value one -or- the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must be specialized appropriately.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A quaternion with elements equal to the elements of &apos;&apos;b&apos;&apos; subtracted from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<size>65</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must be specialized for (user-defined) matrix types in order to enable vector and matrix operations defined in Boost QVM headers for objects of those types.&#10;&#10;-&gt;Note: &apos;&apos;matrix types are not required to be copyable.&apos;&apos;&#10;&#10;The main &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template members are not specified. Valid specializations are required to define the following members:&#10;&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Matrix&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must evaluate to a compile-time integer constant greater than 0 that specifies the number of rows in a matrix.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must evaluate to a compile-time integer constant greater than 0 that specifies the number of columns in a matrix.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Matrix&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must be a value type which satisfies the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;&#10;In addition, valid specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template may define the following access functions as static members, where &apos;&apos;m&apos;&apos; is an object of type &apos;&apos;Matrix&apos;&apos;, &apos;&apos;R&apos;&apos; and &apos;&apos;C&apos;&apos; are compile-time integer constants, and &apos;&apos;r&apos;&apos; and &apos;&apos;c&apos;&apos; are variables of type &apos;&apos;int&apos;&apos;:&#10;&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Matrix&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;R,C&gt;(m)&apos;&apos; returns either a copy of or a const reference to the element at row &apos;&apos;R&apos;&apos; and column &apos;&apos;C&apos;&apos; of &apos;&apos;m&apos;&apos;.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Matrix&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;R,C&gt;(m)&apos;&apos; returns mutable reference to the element at row &apos;&apos;R&apos;&apos; and column &apos;&apos;C&apos;&apos; of &apos;&apos;m&apos;&apos;.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Matrix&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)(r,c,m)&apos;&apos; returns either a copy of or a const reference to the element at row &apos;&apos;r&apos;&apos; and column &apos;&apos;c&apos;&apos; of &apos;&apos;m&apos;&apos;.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Matrix&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)(r,c,m)&apos;&apos; returns mutable reference to the element at row &apos;&apos;r&apos;&apos; and column &apos;&apos;c&apos;&apos; of &apos;&apos;m&apos;&apos;.&#10;&#10;It is illegal to call any of the above functions unless &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Matrix&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;. Even then, matrix types are allowed to define only a subset of the access functions. The general requirements are:&#10;&#10;* At least one of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; or &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must be defined;&#10;* If &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; is defined, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must also be defined;&#10;* If &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; is defined, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must also be defined.&#10;&#10;Below is an example of a user-defined 3x3 matrix type, and its corresponding specialization of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template:&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-98</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;struct </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template, which acts as a generic quaternion type.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!Vector-to-matrix (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;pw&quot;:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is the member type that user-defined (partial) specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template define the scalar type of a vector type. Valid scalar types are value types that satisfy the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-209</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The result of rotating the vector &apos;&apos;b&apos;&apos; by the quaternion &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;This operation multiplies the vector &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines all available operations between quaternions and vectors.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses the vector &apos;&apos;v&apos;&apos; as a column matrix.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-213</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically for matrices of size 4x4, 4x1 and 1x4. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use matrix objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This macro is used whenever Boost QVM throws an exception. Users who override the standard (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) behavior must ensure that when invoked, the substituted implementation does not return control to the caller. Below is a list of all QVM functions that invoke (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:):&#10;&#10;(:pagelist tags=&quot;throws&quot;:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A 4x4 projection matrix of unspecified type of the following form:&#10;&#10;[@xs             0              0                 0&#10;0              ys             0                 0&#10;0              0         zf/(zf-zn)   -zn*zf/(zf-zn)&#10;0              0              1                 0@]&#10;&#10;where ys=cot(fov_y/2) and xs=ys/aspect.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-216</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically for matrices of size 3x3, 3x1 and 1x3. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use matrix objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-217</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines function and operator overloads that implement all the same operations defined in the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; header, but specifically for 2D vectors. You can include it instead of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if you know you don&apos;t use vector objects of any other size.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<size>15</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;Boost QVM allows (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:), exposing vector views of different dimensions, and/or views with reordered elements. The example below rotates &apos;&apos;v&apos;&apos; around the X axis, and stores the resulting vector back in &apos;&apos;v&apos;&apos; but with the X and Y elements swapped:&#10;&#10;[@float3 v = {0,0,7};&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|YXZ:)(v) = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;3&gt;(3.14159f) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) v;@]&#10;&#10;A special case of swizzling provides next-dimension-view of a vector object, adding either 0 or 1 as its last component. Assuming &apos;&apos;float3&apos;&apos; is a 3D vector type, and &apos;&apos;float4&apos;&apos; is a 4D vector type, the following statements are valid:&#10;&#10;[@float3 v = {0,0,7};&#10;float4 point = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|XYZ1:)(v); //{0,0,7,1}&#10;float4 vector = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|XYZ0:)(v); //{0,0,7,0}@]&#10;&#10;It is also valid for swizzling to address vector elements more than once:&#10;&#10;[@float3 v = {0,0,7};&#10;float4 v1 = (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|ZZZZ:)(v); //{7,7,7,7}@]&#10;&#10;Boost QVM defines all permutations of &apos;&apos;X&apos;&apos;, &apos;&apos;Y&apos;&apos;, &apos;&apos;Z&apos;&apos;, &apos;&apos;W&apos;&apos; for 1D, 2D, 3D and 4D swizzling, plus each dimension defines variants with &apos;&apos;0&apos;&apos; or &apos;&apos;1&apos;&apos; used at any position (if 0 or 1 appear at the first position, the swizzling function name begins with underscore, e.g. &apos;&apos;_1XY&apos;&apos;).&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<size>43</size>
												<variant>2</variant>
												<string>[@#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;struct float3 { float a[3]; };&#10;&#10;namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;        template &lt;&gt;&#10;        struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float3&gt;&#10;        {&#10;            static int const (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)=3;&#10;            typedef float (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);&#10;&#10;            template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( float3 &amp; v ) { return v.a[I]; }&#10;            template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( float3 const &amp; v ) { return v.a[I]; }&#10;&#10;            static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, float3 &amp; v ) { return v.a[i]; } //optional&#10;            static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, float3 const &amp; v ) { return v.a[i]; } //optional&#10;        };&#10;    }&#10;}@]&#10;&#10;Equivalently, using the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template the above can be shortened to:&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;        template &lt;&gt;&#10;        struct (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;float3&gt;: </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&lt;float3,float,3&gt;&#10;        {&#10;            template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( float3 &amp; v ) { return v.a[I]; }&#10;&#10;            static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( int i, float3 &amp; v ) { return v.a[i]; } //optional&#10;        };&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-220</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A of type &quot;array of 4 elements of type &apos;&apos;T&apos;&apos;&quot; to the memory pointed by &apos;&apos;ptr&apos;&apos;. This makes it possible to use the array at &apos;&apos;ptr&apos;&apos; as a quaternion.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>----&#10;&#10;&apos;&apos;&apos;Tutorial navigation:&apos;&apos;&apos; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:) | (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:) | (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:) | (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;w&quot;:) | (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;\\&#10;\\&#10;See also: (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;An identity (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) of &apos;&apos;a&apos;&apos;; that is, it simply accesses the elements of &apos;&apos;a&apos;&apos;.&#10;&#10;This allows calling Boost QVM operations when &apos;&apos;a&apos;&apos; is of built-in type, for example a plain old C array.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is the virtual base type of all exceptions originating within Boost QVM.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-224</id>
													</shared_ptr>
												</weak_ptr>
												<size>29</size>
												<variant>2</variant>
												<string>[@#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;struct fquat { float a[4]; };&#10;&#10;namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;        template &lt;&gt;&#10;        struct&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;fquat&gt;&#10;        {&#10;            typedef float (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:);&#10;&#10;            template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( fquat &amp; q ) { return q.a[I]; }&#10;            template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( fquat const &amp; q ) { return q.a[I]; }&#10;        };&#10;    }&#10;}@]&#10;&#10;Equivalently, using the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template the above can be shortened to:&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;        template &lt;&gt;&#10;        struct&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;fquat&gt;: (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;fquat,float&gt;&#10;        {&#10;            template &lt;int I&gt; static inline (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:) &amp; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)( fquat &amp; q ) { return q.a[I]; }&#10;        };&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;An identity (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) of &apos;&apos;a&apos;&apos;; that is, it simply accesses the elements of &apos;&apos;a&apos;&apos;.&#10;&#10;This allows calling Boost QVM operations when &apos;&apos;a&apos;&apos; is of built-in type, for example a plain old C array.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header file defines (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) that access a given matrix object as different matrix object, for example deleting or swapping rows or columns.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<size>17</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;&#10;        typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;());@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;struct </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template, which acts as a generic matrix type.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns mutable reference to the &apos;&apos;i&apos;&apos;-th element of &apos;&apos;v&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;The boost::</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>::</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> namespace contains only function names that use </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>. The boost::</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> namespace contains all Boost QVM type and function names.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@return a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|XYZ0:)(b);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>&apos;&apos;&apos;Note:&apos;&apos;&apos; For the quaternion &apos;&apos;a + bi + cj + dk&apos;&apos;, the elements are assumed to be in the following order: &apos;&apos;a&apos;&apos;, &apos;&apos;b&apos;&apos;, &apos;&apos;c&apos;&apos;, &apos;&apos;d&apos;&apos;; that is, &apos;&apos;I&apos;&apos;=&apos;&apos;0&apos;&apos;/&apos;&apos;1&apos;&apos;/&apos;&apos;2&apos;&apos;/&apos;&apos;3&apos;&apos; would access &apos;&apos;a&apos;&apos;/&apos;&apos;b&apos;&apos;/&apos;&apos;c&apos;&apos;/&apos;&apos;d&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<size>19</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;wp&quot;:)&#10;&#10;Boost QVM defines various function templates which take a reference to a quaternion/vector/matrix object and return it by reference as a different unspecified static type with quaternion/vector/matrix semantics for which the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)/(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)/(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is specialized.&#10;&#10;For example, given a vector &apos;&apos;v&apos;&apos;, the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that makes &apos;&apos;v&apos;&apos; &quot;look and feel&quot; like a matrix-column. More complex views are created by simple composition, for example &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)((:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v))&apos;&apos; is equivalent to &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(v)&apos;&apos;.&#10;&#10;Below is a list of all (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) supported by Boost QVM:&#10;&#10;(:pagelist tags=&quot;view&quot; except_tags=&quot;category noindex&quot;:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines all available function overloads that operate on quaternion objects.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-237</id>
													</shared_ptr>
												</weak_ptr>
												<size>43</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Capturing view proxies with &apos;&apos;auto&apos;&apos;&#10;&#10;By design (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) must not return temporary objects. They return reference to an argument they take by (const) reference, cast to reference of unspecified type that is not copyable. Because of this, the return value of a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) can not be captured by &apos;&apos;auto&apos;&apos;:&#10;&#10;[@auto tr=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(m); //Error: the return type of (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) can not be copied.@]&#10;&#10;The correct use of &apos;&apos;auto&apos;&apos; with (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) is:&#10;&#10;[@auto &amp; tr=(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(m);@]&#10;&#10;!!!!Note:&#10;&#10;many (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;p&quot;:) are not read-only, that is, changes made on the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) operate on the original object. This is another reason why they can not be captured by &apos;&apos;auto&apos;&apos; by value.&#10;&#10;!!!Binding QVM overloads from an unrelated namespace&#10;&#10;The operator overloads in namespace &apos;&apos;boost::qvm&apos;&apos; are designed to work with user-defined types. Typically it is sufficient to make these operators available in the namespace where the operator is used, by &apos;&apos;using namespace boost::qvm&apos;&apos;. A problem arises if the scope that uses the operator is not controlled by the user. For example:&#10;&#10;[@namespace ns1&#10;{&#10;    struct float2 { float x, y; };&#10;}&#10;&#10;namespace ns2&#10;{&#10;    using namespace boost::qvm;&#10;&#10;    void f()&#10;    {&#10;        ns1::float2 a, b;&#10;        a==b; //OK&#10;        ns1::float2 arr1[2], arr2[2];&#10;        std::equal(arr1,arr1+2,arr2); //Error: (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:) is inaccessible from namespace std&#10;    }&#10;}@]&#10;&#10;In the &apos;&apos;std::equal&apos;&apos; expression above, even though &apos;&apos;boost::qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos; is made visible in namespace &apos;&apos;ns2&apos;&apos; by &apos;&apos;using namespace boost::qvm&apos;&apos;, the call originates from namespace &apos;&apos;std&apos;&apos;. In this case the compiler can&apos;t bind &apos;&apos;boost::qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos; because only namespace &apos;&apos;ns1&apos;&apos; is visible through ADL, and it does not contain a suitable declaration. The solution is to declare &apos;&apos;operator==&apos;&apos; in namespace &apos;&apos;ns1&apos;&apos;, which can be done like this:&#10;&#10;[@namespace ns1 { using boost::qvm::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:); }@]&#10;&#10;!!!Link errors when calling math functions with &apos;&apos;int&apos;&apos; arguments&#10;&#10;Boost QVM does not call standard math functions (e.g. &apos;&apos;sin&apos;&apos;, &apos;&apos;cos&apos;&apos;, etc.) directly. Instead, it calls function templates declared in &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; in namespace &apos;&apos;boost::qvm&apos;&apos;. This allows the user to specialize these templates for user-defined (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) types.&#10;&#10;Boost QVM itself defines specializations of the math function templates only for &apos;&apos;float&apos;&apos; and &apos;&apos;double&apos;&apos;, but it does not provide generic definitions. This is done to protect the user from unintentionally writing code that binds standard math functions that take &apos;&apos;double&apos;&apos; when passing arguments of lesser types, which would be suboptimal.&#10;&#10;Because of this, a call to e.g. &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(axis,1)&apos;&apos; will compile successfully but fail to link, since it calls e.g. &apos;&apos;boost::qvm::sin&lt;int&gt;&apos;&apos;, which is undefined. Because rotations by integer number of radians are rarely needed, in QVM there is no protection against such errors. In such cases the solution is to use &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(axis,1.0f)&apos;&apos; instead.&#10;&#10;!!!MSVC 2013 parsing bug&#10;&#10;Due to a MSVC 2013 bug, expressions of the form &apos;&apos;(v,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A&lt;I&gt;:))&apos;&apos; used to access vector elements as well as &apos;&apos;(m,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A&lt;R,C&gt;:))&apos;&apos; used to access matrix elements do not parse correctly. A workaround is to add parentheses, for example &apos;&apos;(v,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A&lt;I&gt;:)())&apos;&apos;. It is unknown if other versions of MSVC have the same issue.&#10;&#10;The corresponding non-template syntax used to access specific elements, e.g. &apos;&apos;(m,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A31:))&apos;&apos; or &apos;&apos;(v,(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|Y:))&apos;&apos; is not affected by this issue.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;R&gt;(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses row &apos;&apos;R&apos;&apos; of the matrix &apos;&apos;m&apos;&apos; as a vector.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;&apos;&apos;R&apos;&apos; must be copyable.&#10;&#10;!!!!Effects:&#10;&#10;The first overload is equivalent to: &apos;&apos;R r; (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(r,a); return r;&apos;&apos;&#10;&#10;The second overload assumes that &apos;&apos;m&apos;&apos; is an orthonormal rotation matrix and converts it to a quaternion that performs the same rotation.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;An expression of the form &apos;&apos;S(q)&apos;&apos; can be used to access the scalar component of the quaternion &apos;&apos;q&apos;&apos;. For example,&#10;&#10;[@S(q) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) 42;@]&#10;&#10;multiplies the scalar component of &apos;&apos;q&apos;&apos; by the scalar 42.&#10;&#10;An expression of the form &apos;&apos;V(q)&apos;&apos; can be used to access the vector component of the quaternion &apos;&apos;q&apos;&apos;. For example,&#10;&#10;[@V(q) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) 42@]&#10;&#10;multiplies the vector component of &apos;&apos;q&apos;&apos; by the scalar 42.&#10;&#10;The X, Y and Z elements of the vector component can also be accessed directly using &apos;&apos;X(q)&apos;&apos;, &apos;&apos;Y(q)&apos;&apos; and &apos;&apos;Z(q)&apos;&apos;.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines the &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos; template which can be specialized to register user-defined scalar types into Boost QVM.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!Matrix-to-vector (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;pw&quot;:)&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A vector that is the result of multiplying the vector &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<size>63</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must be specialized for (user-defined) vector types in order to enable vector and matrix operations defined in Boost QVM headers for objects of those types.&#10;&#10;&apos;&apos;Note: vector types are not required to be copyable.&apos;&apos;&#10;&#10;The main &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template members are not specified. Valid specializations are required to define the following members:&#10;&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Vector&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must evaluate to a compile-time integer constant greater than 0 that specifies the vector size.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Vector&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must be a value type which satisfies the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;&#10;In addition, valid specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template may define the following access functions as static members, where &apos;&apos;v&apos;&apos; is an object of type &apos;&apos;Vector&apos;&apos;, &apos;&apos;I&apos;&apos; is a compile-time integer constant, and &apos;&apos;i&apos;&apos; is a variable of type &apos;&apos;int&apos;&apos;:&#10;&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Vector&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;I&gt;(v)&apos;&apos; returns either a copy of or a const reference to the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;v&apos;&apos;.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Vector&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;I&gt;(v)&apos;&apos; returns mutable reference to the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;v&apos;&apos;.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Vector&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)(i,v)&apos;&apos; returns either a copy of or a const reference to the &apos;&apos;i&apos;&apos;-th element of &apos;&apos;v&apos;&apos;.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Vector&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)(i,v)&apos;&apos; returns mutable reference to the &apos;&apos;i&apos;&apos;-th element of &apos;&apos;v&apos;&apos;.&#10;&#10;It is illegal to call any of the above functions unless &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Vector&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;. Even then, vector types are allowed to define only a subset of the access functions. The general requirements are:&#10;&#10;* At least one of &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; or &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must be defined;&#10;* If &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; is defined, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must also be defined;&#10;* If &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; is defined, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must also be defined.&#10;&#10;Below is an example of a user-defined 3D vector type, and its corresponding specialization of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template:&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The (:link http://en.wikipedia.org/wiki/Cross_product|cross product:) of the vectors &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A matrix that is the result of multiplying the scalar &apos;&apos;a&apos;&apos; by the matrix &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header defines all available operations between vectors and matrices.&#10;&#10;!!!Synopsis:&#10;&#10;(:include synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(axis,angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;Similar to &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos;, except that it uses the binary predicate &apos;&apos;pred&apos;&apos; to compare the individual quaternion elements.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;An expression of the form &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A:)&lt;R,C&gt;(m)&apos;&apos; can be used to access the element at row &apos;&apos;R&apos;&apos; and column &apos;&apos;C&apos;&apos; of a matrix object &apos;&apos;m&apos;&apos;. For example, the expression:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|A:)&lt;4,2&gt;(m) *= 42;@]&#10;&#10;can be used to multiply the element at row 4 and column 2 of a matrix &apos;&apos;m&apos;&apos; by 42.&#10;&#10;For convenience, there are also non-template overloads for &apos;&apos;R&apos;&apos; from 0 to 9 and &apos;&apos;C&apos;&apos; from 0 to 9; an alternative way to write the above expression is:&#10;&#10;[@A42(m) *= 42;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;Computes the (:link http://en.wikipedia.org/wiki/Quaternion#Conjugation.2C_the_norm.2C_and_reciprocal|conjugate:) of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type tmp;&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(tmp,a);&#10;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(tmp);&#10;return tmp;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;Computes the multiplicative inverse of &apos;&apos;a&apos;&apos;, or the (:link http://en.wikipedia.org/wiki/Quaternion#Conjugation.2C_the_norm.2C_and_reciprocal|conjugate-to-norm:) ratio.&#10;&#10;(:include throws:)&#10;&#10;!!!!Note:&#10;&#10;If &apos;&apos;a&apos;&apos; is known to be unit length, &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; is equivalent to &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&apos;&apos;, yet it is faster to compute.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;Boost QVM uses &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; in definitions of recursive functions that are not critical for the overall performance of the library (definitions of all critical functions, including critical recursive functions, use &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;.)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<size>21</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Assumptions:&#10;&#10;*Both &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::type&apos;&apos; and &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::type&apos;&apos; are well defined&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::value || (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;B&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;&#10;&#10;!!!!Requirements:&#10;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&gt;::value&apos;&apos; must be &apos;&apos;true&apos;&apos;&#10;*&apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&apos;&apos; must be copyable&#10;&#10;This template is used by Boost QVM whenever it needs to deduce a quaternion type from the types of two user-supplied function parameters. The returned type must have accessible copy constructor (the &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; types themselves could be non-copyable, and either one of them may not be a quaternion type.)&#10;&#10;The main template definition returns an unspecified quaternion type with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; obtained by &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A,B&gt;::type&apos;&apos;, except if &apos;&apos;A&apos;&apos; and &apos;&apos;B&apos;&apos; are the same quaternion type &apos;&apos;Q&apos;&apos;, in which case &apos;&apos;Q&apos;&apos; is returned, which is only suitable for copyable types. Boost QVM also defines (partial) specializations for the non-copyable quaternion types it produces. Users can define other (partial) specializations for their own types.&#10;&#10;A typical use of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template is for specifying the preferred quaternion type to be returned by the generic function template overloads in Boost QVM depending on the type of their arguments.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A quaternion of the negated elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)(m)&apos;&apos; returns a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) that accesses the (:link https://en.wikipedia.org/w/index.php?title=Translation_(geometry)#Matrix_representation|translation component:) of the square matrix &apos;&apos;m&apos;&apos;, which is a vector of size &apos;&apos;D-1&apos;&apos;, where &apos;&apos;D&apos;&apos; is the size of &apos;&apos;m&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function computes the determinant of the (square) matrix &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<size>21</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; evaluates to the scalar type of the vector type &apos;&apos;T&apos;&apos; (if &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;).&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; evaluates to the scalar type of the matrix type &apos;&apos;T&apos;&apos; (if &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;).&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; evaluates to the scalar type of the quaternion type &apos;&apos;T&apos;&apos; (if &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::value&apos;&apos; is &apos;&apos;true&apos;&apos;).&#10;&#10;The expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::scalar_type&apos;&apos; is similar, except that it automatically detects whether &apos;&apos;T&apos;&apos; is a vector or a matrix or a quaternion type.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A read-only (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:) of a that looks like a quaternion of the same dimensions as &apos;&apos;a&apos;&apos;, but with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; &apos;&apos;Scalar&apos;&apos; and elements constructed from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A read-only matrix of unspecified type with &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; &apos;&apos;T&apos;&apos;, &apos;&apos;R&apos;&apos; rows and &apos;&apos;C&apos;&apos; columns (or &apos;&apos;D&apos;&apos; rows and &apos;&apos;D&apos;&apos; columns), with all elements equal to &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;T&gt;::value(0)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Adds the elements of &apos;&apos;b&apos;&apos; to the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-264</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:pagelist tags=&quot;hpp&quot; except_tags=&quot;noindex&quot; fmt=&quot;index&quot; sort_prefix=&quot;10&quot;:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@a (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>|*=:) (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(angle);@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This is a simple vector type. It converts to any other vector type of compatible size.&#10;&#10;The partial specialization of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template makes the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template compatible with the generic operations defined by Boost QVM.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<size>35</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must be specialized for (user-defined) quaternion types in order to enable quaternion operations defined in Boost QVM headers for objects of those types.&#10;&#10;&apos;&apos;Note: quaternion types are not required to be copyable.&apos;&apos;&#10;&#10;The main &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template members are not specified. Valid specializations are required to define the following members:&#10;&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Quaternion&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos; must be a value type which satisfies the (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:).&#10;&#10;In addition, valid specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template must define at least one of the following access functions as static members, where &apos;&apos;q&apos;&apos; is an object of type Quaternion, and &apos;&apos;I&apos;&apos; is compile-time integer constant:&#10;&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Quaternion&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;I&gt;(q)&apos;&apos; returns either a copy of or a const reference to the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;q&apos;&apos;.&#10;* &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&apos;&apos;: the expression &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Quaternion&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&lt;I&gt;(q)&apos;&apos; returns mutable reference to the &apos;&apos;I&apos;&apos;-th element of &apos;&apos;q&apos;&apos;.&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;&#10;It is illegal to call any of the above functions unless &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;Quaternion&gt;::value&apos;&apos;&apos; is true. Even then, quaternion types are allowed to define only a subset of the access functions.&#10;&#10;Below is an example of a user-defined quaternion type, and its corresponding specialization of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template:&#10;&#10;(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-224</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-268</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;Similar to (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:), except that the individuual elements of &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos; are passed to the binary predicate &apos;&apos;pred&apos;&apos; for comparison.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;Boost QVM uses &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; in definitions of functions that implement various high-level operations, such as matrix multiplication, computing the magnitude of a vector, etc.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A matrix of the same size as &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;, with elements the elements of &apos;&apos;b&apos;&apos; added to the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;The (:link http://en.wikipedia.org/wiki/Dot_product|dot product:) of the vectors &apos;&apos;a&apos;&apos; and &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;Subtracts the elements of &apos;&apos;b&apos;&apos; from the corresponding elements of &apos;&apos;a&apos;&apos;.&#10;&#10;!!!!Returns:&#10;&#10;&apos;&apos;a&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This template can be specialized for user-defined scalar types to define the appropriate conversion from int; this is primarily used whenever Boost QVM needs to deduce a zero or one value.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;&#10;        typename (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:),&#10;        (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;());@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if:&#10;&#10;[@(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)(&#10;    a,&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;(&quot;:)&lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&lt;A&gt;::(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> mod=&quot;m&quot;:)&gt;(angle));@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-276</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!! mod=&quot;/&quot;:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A of type &quot;array of &apos;&apos;Dim&apos;&apos; elements of type &apos;&apos;T&apos;&apos;&quot; to the memory pointed by &apos;&apos;ptr&apos;&apos;. This makes it possible to use the array at &apos;&apos;ptr&apos;&apos; as a vector of size &apos;&apos;Dim&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-277</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;This header includes all other Boost QVM headers. It is provided for convenience only and should be avoided to minimize coupling.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This function template is expected to be static member of user-defined specializations of the &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; template. It returns the element at row &apos;&apos;R&apos;&apos; and column &apos;&apos;C&apos;&apos; of &apos;&apos;m&apos;&apos;, by value or by const reference.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;A quaternion that is the result of multiplying the quaternion &apos;&apos;a&apos;&apos; by the scalar &apos;&apos;b&apos;&apos;.&#10;</string>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>throws</string>
								<shared_ptr>
									<id>284</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>275</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!!Throws:&#10;&#10;If &apos;&apos;a&apos;&apos;&apos;s magnitude is zero, throws &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!!Throws:&#10;&#10;In case the &apos;&apos;axis&apos;&apos; vector has zero magnitude, throws &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos;.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-54</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-60</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-62</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!!Throws:&#10;&#10;If &apos;&apos;a&apos;&apos;&apos;s magnitude is zero, throws &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-73</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-79</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-98</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-100</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-103</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-104</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!!Throws:&#10;&#10;The second overload computes the determinant automatically and throws &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos; if the computed determinant is zero.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-120</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-131</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-137</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-138</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-141</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!!Throws:&#10;&#10;In case the &apos;&apos;axis&apos;&apos; vector has zero magnitude, throws &apos;&apos;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&apos;&apos;.</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-154</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-177</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-188</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-191</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-197</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-209</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-213</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-216</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-217</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-220</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-224</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-237</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>!!!!Throws:&#10;&#10;If the magnitude of &apos;&apos;a&apos;&apos; is zero, throws &apos;&apos;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&apos;&apos;.&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-264</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-268</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-276</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-277</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>synopsis</string>
								<shared_ptr>
									<id>285</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>275</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<size>13</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<size>9</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@(:include api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-45</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-46</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-47</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-48</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-49</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-50</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-51</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-52</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-53</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-54</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-55</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-56</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-57</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-60</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-61</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-62</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-63</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-64</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-65</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-67</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-68</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-69</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;{&#10;    namespace&#10;    </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-70</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-71</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-72</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-73</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-74</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-75</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-76</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-77</id>
													</shared_ptr>
												</weak_ptr>
												<size>11</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-78</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-79</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-80</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-82</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-84</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-85</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-86</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-88</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-89</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-90</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@(:include def:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-91</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-92</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-93</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-94</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-95</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-96</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-97</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-98</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-99</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-100</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-101</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-103</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-104</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-106</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-107</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-108</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-109</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@(:include api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-111</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-112</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-113</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-114</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-115</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-116</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-117</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-118</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-119</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-120</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-121</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-122</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-123</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-124</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-126</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-127</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-128</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-129</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-130</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-131</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-132</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace&#10;boost&#10;{&#10;    namespace&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-133</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-134</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-135</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@(:include api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-137</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-138</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-139</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-140</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-141</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-142</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-143</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-144</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-145</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;&#10;[@namespace&#10;boost&#10;    {&#10;    namespace&#10;    qvm&#10;        {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;        }&#10;    }@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-146</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-147</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-148</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-149</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-150</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-152</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-153</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-154</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-155</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-156</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-158</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-159</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-160</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-161</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-163</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;(:include api:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<size>7</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-166</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@#include &lt;math.h&gt;&#10;#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-167</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;{&#10;    namespace&#10;    </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-168</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-169</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-170</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-172</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-174</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;{&#10;    namespace&#10;    (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-175</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@#include &lt;(:link www.boost.org/doc/libs/release/boost/utility/enable_if.hpp|boost/utility/enable_if.hpp:)&gt;&#10;&#10;namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-177</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-177</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@(:include api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-178</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-179</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;\\&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-180</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-102</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-181</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-182</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-183</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-87</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-184</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-185</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-186</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-136</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-187</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-188</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-189</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-190</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-191</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-192</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-193</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-194</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-195</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-196</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-197</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-198</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-199</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-173</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-200</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-201</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-202</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-203</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-204</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-205</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-59</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-206</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-207</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-208</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-209</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-210</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-211</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-212</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-213</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-214</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-110</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-215</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-216</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-217</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-218</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-219</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-220</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-66</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-221</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-222</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-223</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-151</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-224</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-225</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-226</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-227</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-228</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-229</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-230</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-231</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-232</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-233</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-234</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-235</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-237</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-238</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-239</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-240</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-171</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-242</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@(:include api:)@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-243</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-244</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-245</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-162</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;{&#10;    namespace&#10;    </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-246</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-247</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-248</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include api pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-249</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-250</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-251</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-176</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-252</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-253</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-254</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-255</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-256</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-157</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-257</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-258</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-125</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-259</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-260</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-261</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-262</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-263</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-264</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-265</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-266</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>(:include </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-58</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string> synopsis:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-267</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;{&#10;    namespace&#10;    </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-268</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-269</id>
													</shared_ptr>
												</weak_ptr>
												<size>3</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-164</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;(:include def:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-270</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-271</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-272</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-273</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-241</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include def pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-274</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;(:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-105</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-275</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-83</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;{&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-276</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-81</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-277</id>
													</shared_ptr>
												</weak_ptr>
												<size>0</size>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-278</id>
													</shared_ptr>
												</weak_ptr>
												<size>1</size>
												<variant>2</variant>
												<string>(:include decl:)&#10;</string>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-279</id>
													</shared_ptr>
												</weak_ptr>
												<size>5</size>
												<variant>2</variant>
												<string>`#include &lt;</string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-236</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>&gt;&#10;&#10;[@namespace boost&#10;{&#10;    namespace (:link </string>
												<variant>1</variant>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-165</id>
													</shared_ptr>
												</weak_ptr>
												<variant>2</variant>
												<string>:)&#10;    {&#10;(:include decl pre_indent=&quot;8&quot;:)&#10;    }&#10;}@]&#10;</string>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
						</sorted>
					</object>
				</shared_ptr>
			</layers>
			<contexts>
				<shared_ptr>
					<id>286</id>
					<type>
						<string>reno_context_map</string>
					</type>
					<object>
						<contexts>
							<sorted>
								<size>275</size>
								<shared_ptr>
									<id>-5</id>
								</shared_ptr>
								<shared_ptr>
									<id>-6</id>
								</shared_ptr>
								<shared_ptr>
									<id>-7</id>
								</shared_ptr>
								<shared_ptr>
									<id>-8</id>
								</shared_ptr>
								<shared_ptr>
									<id>-9</id>
								</shared_ptr>
								<shared_ptr>
									<id>-10</id>
								</shared_ptr>
								<shared_ptr>
									<id>-11</id>
								</shared_ptr>
								<shared_ptr>
									<id>-12</id>
								</shared_ptr>
								<shared_ptr>
									<id>-13</id>
								</shared_ptr>
								<shared_ptr>
									<id>-14</id>
								</shared_ptr>
								<shared_ptr>
									<id>-15</id>
								</shared_ptr>
								<shared_ptr>
									<id>-16</id>
								</shared_ptr>
								<shared_ptr>
									<id>-17</id>
								</shared_ptr>
								<shared_ptr>
									<id>-18</id>
								</shared_ptr>
								<shared_ptr>
									<id>-19</id>
								</shared_ptr>
								<shared_ptr>
									<id>-20</id>
								</shared_ptr>
								<shared_ptr>
									<id>-21</id>
								</shared_ptr>
								<shared_ptr>
									<id>-22</id>
								</shared_ptr>
								<shared_ptr>
									<id>-23</id>
								</shared_ptr>
								<shared_ptr>
									<id>-24</id>
								</shared_ptr>
								<shared_ptr>
									<id>-25</id>
								</shared_ptr>
								<shared_ptr>
									<id>-26</id>
								</shared_ptr>
								<shared_ptr>
									<id>-27</id>
								</shared_ptr>
								<shared_ptr>
									<id>-28</id>
								</shared_ptr>
								<shared_ptr>
									<id>-29</id>
								</shared_ptr>
								<shared_ptr>
									<id>-30</id>
								</shared_ptr>
								<shared_ptr>
									<id>-31</id>
								</shared_ptr>
								<shared_ptr>
									<id>-32</id>
								</shared_ptr>
								<shared_ptr>
									<id>-33</id>
								</shared_ptr>
								<shared_ptr>
									<id>-34</id>
								</shared_ptr>
								<shared_ptr>
									<id>-35</id>
								</shared_ptr>
								<shared_ptr>
									<id>-36</id>
								</shared_ptr>
								<shared_ptr>
									<id>-37</id>
								</shared_ptr>
								<shared_ptr>
									<id>-38</id>
								</shared_ptr>
								<shared_ptr>
									<id>-39</id>
								</shared_ptr>
								<shared_ptr>
									<id>-40</id>
								</shared_ptr>
								<shared_ptr>
									<id>-41</id>
								</shared_ptr>
								<shared_ptr>
									<id>-42</id>
								</shared_ptr>
								<shared_ptr>
									<id>-43</id>
								</shared_ptr>
								<shared_ptr>
									<id>-44</id>
								</shared_ptr>
								<shared_ptr>
									<id>-45</id>
								</shared_ptr>
								<shared_ptr>
									<id>-46</id>
								</shared_ptr>
								<shared_ptr>
									<id>-47</id>
								</shared_ptr>
								<shared_ptr>
									<id>-48</id>
								</shared_ptr>
								<shared_ptr>
									<id>-49</id>
								</shared_ptr>
								<shared_ptr>
									<id>-50</id>
								</shared_ptr>
								<shared_ptr>
									<id>-51</id>
								</shared_ptr>
								<shared_ptr>
									<id>-52</id>
								</shared_ptr>
								<shared_ptr>
									<id>-53</id>
								</shared_ptr>
								<shared_ptr>
									<id>-54</id>
								</shared_ptr>
								<shared_ptr>
									<id>-55</id>
								</shared_ptr>
								<shared_ptr>
									<id>-56</id>
								</shared_ptr>
								<shared_ptr>
									<id>-57</id>
								</shared_ptr>
								<shared_ptr>
									<id>-58</id>
								</shared_ptr>
								<shared_ptr>
									<id>-59</id>
								</shared_ptr>
								<shared_ptr>
									<id>-60</id>
								</shared_ptr>
								<shared_ptr>
									<id>-61</id>
								</shared_ptr>
								<shared_ptr>
									<id>-62</id>
								</shared_ptr>
								<shared_ptr>
									<id>-63</id>
								</shared_ptr>
								<shared_ptr>
									<id>-64</id>
								</shared_ptr>
								<shared_ptr>
									<id>-65</id>
								</shared_ptr>
								<shared_ptr>
									<id>-67</id>
								</shared_ptr>
								<shared_ptr>
									<id>-68</id>
								</shared_ptr>
								<shared_ptr>
									<id>-69</id>
								</shared_ptr>
								<shared_ptr>
									<id>-70</id>
								</shared_ptr>
								<shared_ptr>
									<id>-71</id>
								</shared_ptr>
								<shared_ptr>
									<id>-72</id>
								</shared_ptr>
								<shared_ptr>
									<id>-73</id>
								</shared_ptr>
								<shared_ptr>
									<id>-74</id>
								</shared_ptr>
								<shared_ptr>
									<id>-75</id>
								</shared_ptr>
								<shared_ptr>
									<id>-76</id>
								</shared_ptr>
								<shared_ptr>
									<id>-77</id>
								</shared_ptr>
								<shared_ptr>
									<id>-78</id>
								</shared_ptr>
								<shared_ptr>
									<id>-79</id>
								</shared_ptr>
								<shared_ptr>
									<id>-80</id>
								</shared_ptr>
								<shared_ptr>
									<id>-81</id>
								</shared_ptr>
								<shared_ptr>
									<id>-82</id>
								</shared_ptr>
								<shared_ptr>
									<id>-83</id>
								</shared_ptr>
								<shared_ptr>
									<id>-84</id>
								</shared_ptr>
								<shared_ptr>
									<id>-85</id>
								</shared_ptr>
								<shared_ptr>
									<id>-86</id>
								</shared_ptr>
								<shared_ptr>
									<id>-87</id>
								</shared_ptr>
								<shared_ptr>
									<id>-88</id>
								</shared_ptr>
								<shared_ptr>
									<id>-89</id>
								</shared_ptr>
								<shared_ptr>
									<id>-90</id>
								</shared_ptr>
								<shared_ptr>
									<id>-91</id>
								</shared_ptr>
								<shared_ptr>
									<id>-92</id>
								</shared_ptr>
								<shared_ptr>
									<id>-93</id>
								</shared_ptr>
								<shared_ptr>
									<id>-94</id>
								</shared_ptr>
								<shared_ptr>
									<id>-95</id>
								</shared_ptr>
								<shared_ptr>
									<id>-96</id>
								</shared_ptr>
								<shared_ptr>
									<id>-97</id>
								</shared_ptr>
								<shared_ptr>
									<id>-98</id>
								</shared_ptr>
								<shared_ptr>
									<id>-99</id>
								</shared_ptr>
								<shared_ptr>
									<id>-100</id>
								</shared_ptr>
								<shared_ptr>
									<id>-101</id>
								</shared_ptr>
								<shared_ptr>
									<id>-102</id>
								</shared_ptr>
								<shared_ptr>
									<id>-103</id>
								</shared_ptr>
								<shared_ptr>
									<id>-104</id>
								</shared_ptr>
								<shared_ptr>
									<id>-106</id>
								</shared_ptr>
								<shared_ptr>
									<id>-107</id>
								</shared_ptr>
								<shared_ptr>
									<id>-105</id>
								</shared_ptr>
								<shared_ptr>
									<id>-108</id>
								</shared_ptr>
								<shared_ptr>
									<id>-109</id>
								</shared_ptr>
								<shared_ptr>
									<id>-110</id>
								</shared_ptr>
								<shared_ptr>
									<id>-111</id>
								</shared_ptr>
								<shared_ptr>
									<id>-112</id>
								</shared_ptr>
								<shared_ptr>
									<id>-113</id>
								</shared_ptr>
								<shared_ptr>
									<id>-114</id>
								</shared_ptr>
								<shared_ptr>
									<id>-115</id>
								</shared_ptr>
								<shared_ptr>
									<id>-116</id>
								</shared_ptr>
								<shared_ptr>
									<id>-117</id>
								</shared_ptr>
								<shared_ptr>
									<id>-118</id>
								</shared_ptr>
								<shared_ptr>
									<id>-119</id>
								</shared_ptr>
								<shared_ptr>
									<id>-120</id>
								</shared_ptr>
								<shared_ptr>
									<id>-121</id>
								</shared_ptr>
								<shared_ptr>
									<id>-122</id>
								</shared_ptr>
								<shared_ptr>
									<id>-123</id>
								</shared_ptr>
								<shared_ptr>
									<id>-124</id>
								</shared_ptr>
								<shared_ptr>
									<id>-125</id>
								</shared_ptr>
								<shared_ptr>
									<id>-126</id>
								</shared_ptr>
								<shared_ptr>
									<id>-127</id>
								</shared_ptr>
								<shared_ptr>
									<id>-128</id>
								</shared_ptr>
								<shared_ptr>
									<id>-129</id>
								</shared_ptr>
								<shared_ptr>
									<id>-130</id>
								</shared_ptr>
								<shared_ptr>
									<id>-131</id>
								</shared_ptr>
								<shared_ptr>
									<id>-132</id>
								</shared_ptr>
								<shared_ptr>
									<id>-133</id>
								</shared_ptr>
								<shared_ptr>
									<id>-134</id>
								</shared_ptr>
								<shared_ptr>
									<id>-135</id>
								</shared_ptr>
								<shared_ptr>
									<id>-136</id>
								</shared_ptr>
								<shared_ptr>
									<id>-137</id>
								</shared_ptr>
								<shared_ptr>
									<id>-138</id>
								</shared_ptr>
								<shared_ptr>
									<id>-139</id>
								</shared_ptr>
								<shared_ptr>
									<id>-140</id>
								</shared_ptr>
								<shared_ptr>
									<id>-141</id>
								</shared_ptr>
								<shared_ptr>
									<id>-142</id>
								</shared_ptr>
								<shared_ptr>
									<id>-143</id>
								</shared_ptr>
								<shared_ptr>
									<id>-144</id>
								</shared_ptr>
								<shared_ptr>
									<id>-145</id>
								</shared_ptr>
								<shared_ptr>
									<id>-146</id>
								</shared_ptr>
								<shared_ptr>
									<id>-147</id>
								</shared_ptr>
								<shared_ptr>
									<id>-148</id>
								</shared_ptr>
								<shared_ptr>
									<id>-149</id>
								</shared_ptr>
								<shared_ptr>
									<id>-150</id>
								</shared_ptr>
								<shared_ptr>
									<id>-151</id>
								</shared_ptr>
								<shared_ptr>
									<id>-152</id>
								</shared_ptr>
								<shared_ptr>
									<id>-153</id>
								</shared_ptr>
								<shared_ptr>
									<id>-154</id>
								</shared_ptr>
								<shared_ptr>
									<id>-155</id>
								</shared_ptr>
								<shared_ptr>
									<id>-156</id>
								</shared_ptr>
								<shared_ptr>
									<id>-157</id>
								</shared_ptr>
								<shared_ptr>
									<id>-158</id>
								</shared_ptr>
								<shared_ptr>
									<id>-159</id>
								</shared_ptr>
								<shared_ptr>
									<id>-160</id>
								</shared_ptr>
								<shared_ptr>
									<id>-161</id>
								</shared_ptr>
								<shared_ptr>
									<id>-162</id>
								</shared_ptr>
								<shared_ptr>
									<id>-163</id>
								</shared_ptr>
								<shared_ptr>
									<id>-164</id>
								</shared_ptr>
								<shared_ptr>
									<id>-165</id>
								</shared_ptr>
								<shared_ptr>
									<id>-166</id>
								</shared_ptr>
								<shared_ptr>
									<id>-167</id>
								</shared_ptr>
								<shared_ptr>
									<id>-168</id>
								</shared_ptr>
								<shared_ptr>
									<id>-169</id>
								</shared_ptr>
								<shared_ptr>
									<id>-170</id>
								</shared_ptr>
								<shared_ptr>
									<id>-171</id>
								</shared_ptr>
								<shared_ptr>
									<id>-172</id>
								</shared_ptr>
								<shared_ptr>
									<id>-173</id>
								</shared_ptr>
								<shared_ptr>
									<id>-174</id>
								</shared_ptr>
								<shared_ptr>
									<id>-175</id>
								</shared_ptr>
								<shared_ptr>
									<id>-176</id>
								</shared_ptr>
								<shared_ptr>
									<id>-177</id>
								</shared_ptr>
								<shared_ptr>
									<id>-178</id>
								</shared_ptr>
								<shared_ptr>
									<id>-179</id>
								</shared_ptr>
								<shared_ptr>
									<id>-180</id>
								</shared_ptr>
								<shared_ptr>
									<id>-181</id>
								</shared_ptr>
								<shared_ptr>
									<id>-182</id>
								</shared_ptr>
								<shared_ptr>
									<id>-183</id>
								</shared_ptr>
								<shared_ptr>
									<id>-184</id>
								</shared_ptr>
								<shared_ptr>
									<id>-185</id>
								</shared_ptr>
								<shared_ptr>
									<id>-186</id>
								</shared_ptr>
								<shared_ptr>
									<id>-187</id>
								</shared_ptr>
								<shared_ptr>
									<id>-188</id>
								</shared_ptr>
								<shared_ptr>
									<id>-189</id>
								</shared_ptr>
								<shared_ptr>
									<id>-190</id>
								</shared_ptr>
								<shared_ptr>
									<id>-191</id>
								</shared_ptr>
								<shared_ptr>
									<id>-192</id>
								</shared_ptr>
								<shared_ptr>
									<id>-193</id>
								</shared_ptr>
								<shared_ptr>
									<id>-194</id>
								</shared_ptr>
								<shared_ptr>
									<id>-195</id>
								</shared_ptr>
								<shared_ptr>
									<id>-196</id>
								</shared_ptr>
								<shared_ptr>
									<id>-197</id>
								</shared_ptr>
								<shared_ptr>
									<id>-198</id>
								</shared_ptr>
								<shared_ptr>
									<id>-199</id>
								</shared_ptr>
								<shared_ptr>
									<id>-200</id>
								</shared_ptr>
								<shared_ptr>
									<id>-201</id>
								</shared_ptr>
								<shared_ptr>
									<id>-202</id>
								</shared_ptr>
								<shared_ptr>
									<id>-203</id>
								</shared_ptr>
								<shared_ptr>
									<id>-204</id>
								</shared_ptr>
								<shared_ptr>
									<id>-205</id>
								</shared_ptr>
								<shared_ptr>
									<id>-206</id>
								</shared_ptr>
								<shared_ptr>
									<id>-207</id>
								</shared_ptr>
								<shared_ptr>
									<id>-208</id>
								</shared_ptr>
								<shared_ptr>
									<id>-209</id>
								</shared_ptr>
								<shared_ptr>
									<id>-210</id>
								</shared_ptr>
								<shared_ptr>
									<id>-211</id>
								</shared_ptr>
								<shared_ptr>
									<id>-212</id>
								</shared_ptr>
								<shared_ptr>
									<id>-213</id>
								</shared_ptr>
								<shared_ptr>
									<id>-214</id>
								</shared_ptr>
								<shared_ptr>
									<id>-215</id>
								</shared_ptr>
								<shared_ptr>
									<id>-216</id>
								</shared_ptr>
								<shared_ptr>
									<id>-217</id>
								</shared_ptr>
								<shared_ptr>
									<id>-218</id>
								</shared_ptr>
								<shared_ptr>
									<id>-219</id>
								</shared_ptr>
								<shared_ptr>
									<id>-220</id>
								</shared_ptr>
								<shared_ptr>
									<id>-66</id>
								</shared_ptr>
								<shared_ptr>
									<id>-221</id>
								</shared_ptr>
								<shared_ptr>
									<id>-222</id>
								</shared_ptr>
								<shared_ptr>
									<id>-223</id>
								</shared_ptr>
								<shared_ptr>
									<id>-224</id>
								</shared_ptr>
								<shared_ptr>
									<id>-225</id>
								</shared_ptr>
								<shared_ptr>
									<id>-226</id>
								</shared_ptr>
								<shared_ptr>
									<id>-227</id>
								</shared_ptr>
								<shared_ptr>
									<id>-228</id>
								</shared_ptr>
								<shared_ptr>
									<id>-229</id>
								</shared_ptr>
								<shared_ptr>
									<id>-230</id>
								</shared_ptr>
								<shared_ptr>
									<id>-231</id>
								</shared_ptr>
								<shared_ptr>
									<id>-232</id>
								</shared_ptr>
								<shared_ptr>
									<id>-233</id>
								</shared_ptr>
								<shared_ptr>
									<id>-234</id>
								</shared_ptr>
								<shared_ptr>
									<id>-235</id>
								</shared_ptr>
								<shared_ptr>
									<id>-236</id>
								</shared_ptr>
								<shared_ptr>
									<id>-237</id>
								</shared_ptr>
								<shared_ptr>
									<id>-238</id>
								</shared_ptr>
								<shared_ptr>
									<id>-239</id>
								</shared_ptr>
								<shared_ptr>
									<id>-240</id>
								</shared_ptr>
								<shared_ptr>
									<id>-241</id>
								</shared_ptr>
								<shared_ptr>
									<id>-242</id>
								</shared_ptr>
								<shared_ptr>
									<id>-243</id>
								</shared_ptr>
								<shared_ptr>
									<id>-244</id>
								</shared_ptr>
								<shared_ptr>
									<id>-245</id>
								</shared_ptr>
								<shared_ptr>
									<id>-246</id>
								</shared_ptr>
								<shared_ptr>
									<id>-247</id>
								</shared_ptr>
								<shared_ptr>
									<id>-248</id>
								</shared_ptr>
								<shared_ptr>
									<id>-249</id>
								</shared_ptr>
								<shared_ptr>
									<id>-250</id>
								</shared_ptr>
								<shared_ptr>
									<id>-251</id>
								</shared_ptr>
								<shared_ptr>
									<id>-252</id>
								</shared_ptr>
								<shared_ptr>
									<id>-253</id>
								</shared_ptr>
								<shared_ptr>
									<id>-254</id>
								</shared_ptr>
								<shared_ptr>
									<id>-255</id>
								</shared_ptr>
								<shared_ptr>
									<id>-256</id>
								</shared_ptr>
								<shared_ptr>
									<id>-257</id>
								</shared_ptr>
								<shared_ptr>
									<id>-258</id>
								</shared_ptr>
								<shared_ptr>
									<id>-259</id>
								</shared_ptr>
								<shared_ptr>
									<id>-260</id>
								</shared_ptr>
								<shared_ptr>
									<id>-261</id>
								</shared_ptr>
								<shared_ptr>
									<id>-262</id>
								</shared_ptr>
								<shared_ptr>
									<id>-263</id>
								</shared_ptr>
								<shared_ptr>
									<id>-264</id>
								</shared_ptr>
								<shared_ptr>
									<id>-265</id>
								</shared_ptr>
								<shared_ptr>
									<id>-266</id>
								</shared_ptr>
								<shared_ptr>
									<id>-267</id>
								</shared_ptr>
								<shared_ptr>
									<id>-268</id>
								</shared_ptr>
								<shared_ptr>
									<id>-269</id>
								</shared_ptr>
								<shared_ptr>
									<id>-270</id>
								</shared_ptr>
								<shared_ptr>
									<id>-271</id>
								</shared_ptr>
								<shared_ptr>
									<id>-272</id>
								</shared_ptr>
								<shared_ptr>
									<id>-273</id>
								</shared_ptr>
								<shared_ptr>
									<id>-274</id>
								</shared_ptr>
								<shared_ptr>
									<id>-275</id>
								</shared_ptr>
								<shared_ptr>
									<id>-276</id>
								</shared_ptr>
								<shared_ptr>
									<id>-277</id>
								</shared_ptr>
								<shared_ptr>
									<id>-278</id>
								</shared_ptr>
								<shared_ptr>
									<id>-279</id>
								</shared_ptr>
							</sorted>
						</contexts>
						<index>
							<sorted>
								<size>275</size>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-30</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-94</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-155</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-231</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-278</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-169</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-144</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-184</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-203</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-235</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-129</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-19</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-188</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-137</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-120</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-22</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-264</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-6</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-77</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-179</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-145</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-117</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-65</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-85</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-218</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-66</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-201</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-139</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-165</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-232</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-234</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-44</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-119</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-49</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-101</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-153</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-29</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-156</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-243</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-207</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-237</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-191</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>0</size>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-54</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>BE19A1140BAF404829CFA9182A383693D1BEDA2CE40EB3EFAF0F8DE895337602</strong>
											<weak>1255227846</weak>
											<size>217</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>vec_traits_array.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-62</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>A7736D203850E35F21DC0D7822DAB6C432266E2E4C65F8957BA9FDD1B4ECAB03</strong>
											<weak>2403471497</weak>
											<size>46</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations4.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-213</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>8A211470A69E5752F5B22C40FEC4815D2700D1FE0B3D631AAA12320291930E05</strong>
											<weak>2291363803</weak>
											<size>1557</size>
											<position>451</position>
											<strong>A7B2FA3826FB11744EAFED43F50F821B4443E653AB60ADF771A555BB2227D356</strong>
											<weak>3843778483</weak>
											<size>1525</size>
											<position>26</position>
											<strong>7B8EA84E20E66DB1BBD002EAF66F774545DC494151F9597DA8B7A3E2E294125B</strong>
											<weak>254041694</weak>
											<size>1479</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\detail\vec_assign.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-50</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>2796A58569D42ED93E92797A964EDD12666C64DC7B0EB7147AB0FD0818F65F09</strong>
											<weak>872817502</weak>
											<size>3189</size>
											<position>474</position>
											<strong>7F04DF2437171CBAA76DD82ADC3A393170E6A96EE91E9C7A1F0F92D535BF5D84</strong>
											<weak>2289638198</weak>
											<size>3157</size>
											<position>26</position>
											<strong>E4AAE0895754BE3D722D7464589F0BD2FE02CCFDC30354B151A6A0E428ED8A70</strong>
											<weak>2776314383</weak>
											<size>185</size>
											<position>2962</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits_array.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-79</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>63AB829DA921A0F0EB8F9B4D3814A7B55627BC529D386C69DD4D68F7D9381213</strong>
											<weak>972758830</weak>
											<size>95</size>
											<position>262</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-214</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>26DE885BCD0C3C2065CCE27F157976B715AAC9E73FD04C858662FD8BEE7F8A16</strong>
											<weak>2391224194</weak>
											<size>844</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\all.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-277</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>38D7A8958A423275F8FFC186678700D4B75BB9C87F43D885A79DF5FDFD15B11A</strong>
											<weak>2115414522</weak>
											<size>2667</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits_defaults.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-173</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
											<weak>2266063101</weak>
											<size>401</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-162</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
											<weak>2266063101</weak>
											<size>401</size>
											<position>323</position>
											<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
											<weak>1106991317</weak>
											<size>369</size>
											<position>26</position>
											<strong>7BF6A0382FB421090D4F2E809435B8D0E170BDE7BCE4821E91BA0AC300859930</strong>
											<weak>564996640</weak>
											<size>171</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-245</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>4</size>
											<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
											<weak>2266063101</weak>
											<size>401</size>
											<position>323</position>
											<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
											<weak>1106991317</weak>
											<size>369</size>
											<position>26</position>
											<strong>7BF6A0382FB421090D4F2E809435B8D0E170BDE7BCE4821E91BA0AC300859930</strong>
											<weak>564996640</weak>
											<size>171</size>
											<position>36</position>
											<strong>A7921C4A860BD9C259C9F729BCE569BBB1D9B1A3625432AE1A0818CAF776EB31</strong>
											<weak>3309243212</weak>
											<size>39</size>
											<position>117</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-208</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>4</size>
											<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
											<weak>2266063101</weak>
											<size>401</size>
											<position>323</position>
											<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
											<weak>1106991317</weak>
											<size>369</size>
											<position>26</position>
											<strong>7BF6A0382FB421090D4F2E809435B8D0E170BDE7BCE4821E91BA0AC300859930</strong>
											<weak>564996640</weak>
											<size>171</size>
											<position>36</position>
											<strong>696121566468A76AA5ABB8FF646050D7AB0B016656D6D71DD108E33F3D6E58F8</strong>
											<weak>2830371283</weak>
											<size>37</size>
											<position>80</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-192</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>E959455B6BBE67CBED8B147D38ADEC2999DA57C6B882815FC1D487B0300DE81A</strong>
											<weak>2266063101</weak>
											<size>401</size>
											<position>323</position>
											<strong>51872DF9AE6C7C27CE944B54380FF0B95D597A53D8CBD83F78549631CDF03066</strong>
											<weak>1106991317</weak>
											<size>369</size>
											<position>26</position>
											<strong>5B3D6A9938BA490F4203F76B7D0B0CE3C369D05288BD1BFC5B5D0F61E07F27A2</strong>
											<weak>3771147593</weak>
											<size>150</size>
											<position>209</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-174</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>C418C87CE6A3D4988FEDFE218468F1A8303BBA2F50FAA3DC7E429F70455B7420</strong>
											<weak>3070938325</weak>
											<size>1879</size>
											<position>451</position>
											<strong>9D3F30F51BD97954CA198CDD78AE965C7633B321C1FD45E62FC74FFC3C860C8C</strong>
											<weak>2710881453</weak>
											<size>1847</size>
											<position>26</position>
											<strong>4BDD7E1B9C4B65FF6E45DAB39232F15EC74E4864E6CE53B7AF97B7DAFCF2DFDE</strong>
											<weak>203275096</weak>
											<size>1801</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\detail\mat_assign.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-118</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>CFD08F7E58194E61F7480503A3E0F2FCB83080F4C99182BAD2F7ED40913EF720</strong>
											<weak>2855819363</weak>
											<size>3340</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits_array.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-99</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>7CFCA5F600370F2366F7F1B0DCE4C1CA4A833ECD22E6847F3E9FC78BF59E0F30</strong>
											<weak>350625407</weak>
											<size>4955</size>
											<position>22719</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-33</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>861BAD8C651858682BCC800D9BC85FF5F12AE165DF9F3CB42E16226BC1F15152</strong>
											<weak>3369844770</weak>
											<size>3596</size>
											<position>14684</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-34</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>A17E8422EED0C4655D6EB57B340751558458992ED9EB5732BD1C521FFB736084</strong>
											<weak>1747071240</weak>
											<size>5040</size>
											<position>9582</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-78</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>E1065A5615E915C8819652817E2F7F6A43B1CA49492E422EFE5A4AC64D15208B</strong>
											<weak>665589743</weak>
											<size>4955</size>
											<position>27736</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-70</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>B92144F96FB975995C297303A86EC469B2BF2BFC16701B3713535B266F474E9E</strong>
											<weak>1478344165</weak>
											<size>3595</size>
											<position>18342</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-148</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>4E76C37479A073600FE2414C2A049DE9B9013D81CEE9027998EB9497A96DEEBC</strong>
											<weak>3614560266</weak>
											<size>4681</size>
											<position>4839</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-88</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>8174550BE63906B3B846243204CA05B2D20A9A8BD6D2CDA1E29DD3681E73C6DD</strong>
											<weak>1588777717</weak>
											<size>4681</size>
											<position>96</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-86</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>333166A9BE06BCA874B47F76B2387D8B306ECC3FA09F0680ABAD099E829D3222</strong>
											<weak>744532336</weak>
											<size>32793</size>
											<position>509</position>
											<strong>8AA9F39803AC760718AEC53A9643EB48BF5A0D92BA9416749BB2273F53EB720A</strong>
											<weak>1367712072</weak>
											<size>32761</size>
											<position>26</position>
											<strong>E963BD7ED8DD48F34FEEC86D2EE372E6531FF3743893FC62AB5E7DA91D4BBAFB</strong>
											<weak>3857298664</weak>
											<size>658</size>
											<position>21999</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-149</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>187B2250361ACB57E34259AED05434E93B73601015600E2984BDAC80DE2CA925</strong>
											<weak>3270845686</weak>
											<size>105</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\swizzle.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-87</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>0594A0ECC09942FAAFFC787AAFF28FE890A838A4B06857734C376502BAD52B28</strong>
											<weak>2928186431</weak>
											<size>66012</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-83</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>E01D67A2ECC8357FA57AAC8347CA42E4FADCC4853F691DA82D1DC9A66A28242A</strong>
											<weak>330178664</weak>
											<size>108</size>
											<position>903</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\inline.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-255</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>B2CF736CB75D6BBDB46DB62A539AE8F26C653A433CF28F46E7C888D861DC8E2B</strong>
											<weak>2268268263</weak>
											<size>4589</size>
											<position>509</position>
											<strong>88ABAB09AEA0654D5E9B4BABF03A7E9B38A76543D6014B9ABDD6C7F8004DD4F3</strong>
											<weak>3985112767</weak>
											<size>4557</size>
											<position>26</position>
											<strong>9B3E2EECBA1F63179CE55A3AF3A113A2EAAB40E41DB9E75B27BA463BEAF70767</strong>
											<weak>3650019694</weak>
											<size>4391</size>
											<position>96</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_access.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-240</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>0008FDDBF07641B221F5B9AFAE507B999478BC9B8DFE8CBDF3FEE7F57C2EF72B</strong>
											<weak>2910024480</weak>
											<size>18101</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-125</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>58AF417B539B408D8E2C581ECDD98DA584779BC6C292C0E3E78AC40CA12CF82C</strong>
											<weak>1427670282</weak>
											<size>545</size>
											<position>432</position>
											<strong>25C91D9856E3696DD78C027FBFDD89AA6A8E06A32CEEB5530425B7017C353FF2</strong>
											<weak>409435362</weak>
											<size>513</size>
											<position>26</position>
											<strong>114DF1C5004BD6C63F4968F91CFD272BB3CFD30370A77208689D6D6576791E55</strong>
											<weak>281627609</weak>
											<size>349</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\error.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-223</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>58AF417B539B408D8E2C581ECDD98DA584779BC6C292C0E3E78AC40CA12CF82C</strong>
											<weak>1427670282</weak>
											<size>545</size>
											<position>432</position>
											<strong>25C91D9856E3696DD78C027FBFDD89AA6A8E06A32CEEB5530425B7017C353FF2</strong>
											<weak>409435362</weak>
											<size>513</size>
											<position>26</position>
											<strong>2CCEC8BDAC00E8EBAFEA8BDE6A05A08E5FA48FDD579CDAC9FC33B99A8CAE32BD</strong>
											<weak>1292440637</weak>
											<size>59</size>
											<position>387</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\error.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-113</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>58AF417B539B408D8E2C581ECDD98DA584779BC6C292C0E3E78AC40CA12CF82C</strong>
											<weak>1427670282</weak>
											<size>545</size>
											<position>432</position>
											<strong>25C91D9856E3696DD78C027FBFDD89AA6A8E06A32CEEB5530425B7017C353FF2</strong>
											<weak>409435362</weak>
											<size>513</size>
											<position>26</position>
											<strong>5CFC274B16BF8B381E75941EAF5327A6A47EE67878477C4A1D6865AEA3B940F2</strong>
											<weak>543298400</weak>
											<size>57</size>
											<position>446</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\error.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-182</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>AF9F4C1EA6C3598F92BA481448DEF358AB3A0D00A95F6ED742988F1F5FC04830</strong>
											<weak>3821619302</weak>
											<size>4775</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_access.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-171</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>42A1F84DB9D82341ACB6835538251B5B8933380BC32B8A75EF90CD32A2D59B35</strong>
											<weak>559634728</weak>
											<size>1355</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_quat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-157</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>5AC3A912591E64D1DC0B9A33E3B007E35F4649858E416E572BE7803F7243B935</strong>
											<weak>287135679</weak>
											<size>302</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\inline.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-91</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>EB14C73734B21ABE94AAAFFE2A09BF69B84A5533AE51D909240120DA46428D3C</strong>
											<weak>2635321909</weak>
											<size>10780</size>
											<position>464</position>
											<strong>57E385CFE473637C72728CE41224191AFDFA17E14471A4E9C9AA68C024EC7B16</strong>
											<weak>1201261069</weak>
											<size>10748</size>
											<position>26</position>
											<strong>7C07BF7F8C433866F4577C030A21AA679A966FEAEA50C59445EF6DA633D24C55</strong>
											<weak>3716006072</weak>
											<size>10702</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\detail\swizzle_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-183</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>321D400174ECF50ED86BE4A73045FBF126090E74126D11F4058C663B7212B13D</strong>
											<weak>62135702</weak>
											<size>100</size>
											<position>700</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\inline.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-16</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>4D699412DF093E41E417E15BC8A14E140EEFCDF7196F4F1549E3F288415D1E3E</strong>
											<weak>2398621827</weak>
											<size>46</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations2.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-217</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>253F2FDC7485149CECF0C89574D0A1D652F8530AAAE71D1F03115F6D44C4AE3F</strong>
											<weak>3648524837</weak>
											<size>50</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations3.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-100</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>7046498E5D94CDDC6F337604AB06FAEF45624DFC522C25A2F22CCB92EFA65B40</strong>
											<weak>724192466</weak>
											<size>266</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\enable_if.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-175</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>A1089D653757560F635DA2450109C8FCC9B6C29E62A6009A6F41077502E3C843</strong>
											<weak>2277529753</weak>
											<size>2490</size>
											<position>474</position>
											<strong>133FC81411296C7ECEA8236C06B3C7B916958EBC5F815141DD9F10D9A54DBDC5</strong>
											<weak>3140636785</weak>
											<size>2458</size>
											<position>26</position>
											<strong>508C27A3462355409E202C6CF1B8967DE8484AF9554878EDD311342300BE1511</strong>
											<weak>664283307</weak>
											<size>161</size>
											<position>2287</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits_array.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-276</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>4B8F2A88636963C52698B8AE67E06CBD030609936BD3C95FC192A817D27BC444</strong>
											<weak>1267844370</weak>
											<size>724</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits_defaults.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-112</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>DE7C6E9445392DC9538378A59F744B0F0C80AB7ADC0894C3196FBD8B2D221545</strong>
											<weak>1032449969</weak>
											<size>1862</size>
											<position>469</position>
											<strong>91953620234E74C20E95741404ADE8B322B40F3E65896081101AD3C8D823EC0C</strong>
											<weak>2892228489</weak>
											<size>1830</size>
											<position>26</position>
											<strong>057F35C91D33DBEBCA1CA0E3BE4B1D776FBA2DDE98DCE4856DEBCC74E5C92933</strong>
											<weak>1345045793</weak>
											<size>1673</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-209</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>3B4744D1596A68B12032A037C16C39A09F46DD7698194DF406F8D4E63F88FC47</strong>
											<weak>3649049126</weak>
											<size>50</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations4.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-60</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>73505EF034D0405FEB97E0A46A8DF43CFBC5FEF054B7CD5EF0E7FCA555D94749</strong>
											<weak>375252313</weak>
											<size>784</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\inline.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-164</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>CE5475DD258041D46E39FAD0121415A41893B255B50FE2E66D0FFD81736CB74D</strong>
											<weak>286625178</weak>
											<size>2641</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits_array.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-81</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4C20D9E1BB130E520352A1194BC594E19B30DD53A09F579F36D522EECF538F4F</strong>
											<weak>3704691970</weak>
											<size>5265</size>
											<position>377</position>
											<strong>37F22365AF2EB2BC94BA8EC0ABFE94D3B3B4FCB85302441E7EC839BC7616C6E8</strong>
											<weak>4153939162</weak>
											<size>5233</size>
											<position>26</position>
											<strong>60E8025A53CD64E8892FA9FA03F2B2D7E53A1EB0695565C87FCBB45E12B8DDAE</strong>
											<weak>1635257221</weak>
											<size>5187</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\math.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-166</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
											<weak>2530702481</weak>
											<size>466</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-59</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
											<weak>2530702481</weak>
											<size>466</size>
											<position>323</position>
											<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
											<weak>4238437481</weak>
											<size>434</size>
											<position>26</position>
											<strong>F1AEBEBA46AF836FD8C926875611E4A44DA6576002A6AB8A39CD1202C5D34325</strong>
											<weak>2206674439</weak>
											<size>176</size>
											<position>248</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-69</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
											<weak>2530702481</weak>
											<size>466</size>
											<position>323</position>
											<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
											<weak>4238437481</weak>
											<size>434</size>
											<position>26</position>
											<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
											<weak>2547266806</weak>
											<size>210</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-205</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>4</size>
											<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
											<weak>2530702481</weak>
											<size>466</size>
											<position>323</position>
											<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
											<weak>4238437481</weak>
											<size>434</size>
											<position>26</position>
											<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
											<weak>2547266806</weak>
											<size>210</size>
											<position>36</position>
											<strong>A7921C4A860BD9C259C9F729BCE569BBB1D9B1A3625432AE1A0818CAF776EB31</strong>
											<weak>3309243212</weak>
											<size>39</size>
											<position>156</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-160</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>4</size>
											<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
											<weak>2530702481</weak>
											<size>466</size>
											<position>323</position>
											<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
											<weak>4238437481</weak>
											<size>434</size>
											<position>26</position>
											<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
											<weak>2547266806</weak>
											<size>210</size>
											<position>36</position>
											<strong>90F83D824B24E6DC637DD7BCA96CB2905EF312478B9A96CBBC6E308DC933423F</strong>
											<weak>3029994058</weak>
											<size>38</size>
											<position>118</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-152</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>4</size>
											<strong>7954D6409544BA4C00A3A3BFDA541C604B3265473C8140C24EAE4B4FF87C2B51</strong>
											<weak>2530702481</weak>
											<size>466</size>
											<position>323</position>
											<strong>B85E979E366F1A30DCF2CB9E4455FA42F4E442503607B663ED0B88C1389BC641</strong>
											<weak>4238437481</weak>
											<size>434</size>
											<position>26</position>
											<strong>2F6A0B0D4359F38BFC56A42E7F7BA666B7F06FAC663D9F15D5F387B6B6DF2572</strong>
											<weak>2547266806</weak>
											<size>210</size>
											<position>36</position>
											<strong>438449DABBE1C710D102DBEA899BA33ED001AF9B5CB0EDD94DAB0461563695BF</strong>
											<weak>3043887716</weak>
											<size>38</size>
											<position>80</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-114</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>276AC54B76F2E0EF8C22EAD3697FD4CFD6179ECD168415F2C717202C45397B54</strong>
											<weak>2010323982</weak>
											<size>10079</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_scalar.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-106</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>3005136E068FFF69E97261CA0E0A858F0F504B38E4E75360ED1CC5399917B056</strong>
											<weak>1358900239</weak>
											<size>138</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-110</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>F39417709771EA895CF0FB26F7524F7A4E98F956224A42ACC0784CCE32DED056</strong>
											<weak>3649841451</weak>
											<size>130</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\static_assert.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-242</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
											<weak>1527395585</weak>
											<size>17923</size>
											<position>501</position>
											<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
											<weak>3538955481</weak>
											<size>17891</size>
											<position>26</position>
											<strong>EF0F727CEF8F37ADB26C0E414F6BD9DE32206A91C48FF6CA62A00C2ACA7C0501</strong>
											<weak>1149058756</weak>
											<size>4169</size>
											<position>96</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-121</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
											<weak>1527395585</weak>
											<size>17923</size>
											<position>501</position>
											<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
											<weak>3538955481</weak>
											<size>17891</size>
											<position>26</position>
											<strong>ACCF8E4F7382DA2749A499B7D0015CF20AFCCEB0BCB1A87B9CC3A4F5E09DB735</strong>
											<weak>3342319762</weak>
											<size>4569</size>
											<position>13252</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-258</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
											<weak>1527395585</weak>
											<size>17923</size>
											<position>501</position>
											<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
											<weak>3538955481</weak>
											<size>17891</size>
											<position>26</position>
											<strong>7B61EA7DDBD79E8746F9C7CB3CF771C2DD2DE98BC3F9892C30E53836BED6944B</strong>
											<weak>209694521</weak>
											<size>4632</size>
											<position>8558</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-5</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>81883AC0856909DCC28A345323D71348920AB2DA86CFD37D5E8CE4A8D7ECFB56</strong>
											<weak>1527395585</weak>
											<size>17923</size>
											<position>501</position>
											<strong>966DC2170701D8E361D523AE09748612570A1EEFDC74FCC4E3B9C84E0EB0FAB7</strong>
											<weak>3538955481</weak>
											<size>17891</size>
											<position>26</position>
											<strong>3EC144A5CBF680ECB171225745CC591477934F5A761E66F078D134F254821E73</strong>
											<weak>3162194618</weak>
											<size>4169</size>
											<position>4327</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-238</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>1C078950EBDFFAC104D5D6859780BF43A531E51E4A866970ECDB1B931BF4C757</strong>
											<weak>2490488981</weak>
											<size>1928</size>
											<position>442</position>
											<strong>E74BB096466B13F2E28552C8DFFEA78391F3CEC8F59CFF900ABCCBFE527C122A</strong>
											<weak>3521630317</weak>
											<size>1896</size>
											<position>26</position>
											<strong>D00D42B29BD06F22D43795C654F92288A6BD3C6EE30FD8FC8C4B41B970C8FF0E</strong>
											<weak>1213136203</weak>
											<size>1044</size>
											<position>842</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-8</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>1C078950EBDFFAC104D5D6859780BF43A531E51E4A866970ECDB1B931BF4C757</strong>
											<weak>2490488981</weak>
											<size>1928</size>
											<position>442</position>
											<strong>E74BB096466B13F2E28552C8DFFEA78391F3CEC8F59CFF900ABCCBFE527C122A</strong>
											<weak>3521630317</weak>
											<size>1896</size>
											<position>26</position>
											<strong>B0F2E5063D1BE1A0305262A7623C1D9EE69BFC8CDE7E378FCE3E10093EE936C2</strong>
											<weak>1357495000</weak>
											<size>747</size>
											<position>93</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-178</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>D7309EFDD18F8459483B113AA441A4A25E88DE36815BA1F398E06AC06CD2C259</strong>
											<weak>1796283635</weak>
											<size>89</size>
											<position>260</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\static_assert.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-90</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>12686C63D6FDD2F9EA805144CB8DD47DCBE042A3E2B7F466C012D9D63C094561</strong>
											<weak>2598969295</weak>
											<size>102</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\assert.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-136</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>BFE352156252DB75DB5F7515C707A5D5586372E73767FDC8823C400C23BBE56B</strong>
											<weak>3870457913</weak>
											<size>2614</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-230</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>C4DA5D3E912C8E29A1CE1F3F83B03CFA6C95698EE79BACFBBF54B2623600D870</strong>
											<weak>894380173</weak>
											<size>114</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-177</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>4FAFB93F530EE98CA7EF06F8BE94F8AC505523DB0AB5EA938FCBBD223527E370</strong>
											<weak>2875589293</weak>
											<size>2047</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-28</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>00984703E475647DD9E66A1CF47CC65B9CC7B5D3F36B360039D90822B4509D72</strong>
											<weak>1874013843</weak>
											<size>1235</size>
											<position>443</position>
											<strong>9796B8E16C70FA779CAD1998E83822ADD2BEAF798A1D255B38F3492968F9DD27</strong>
											<weak>2086348395</weak>
											<size>1203</size>
											<position>26</position>
											<strong>0F4E649E9DF1EA335C99C4048BD6B256090C5813D081808480D44F113994323F</strong>
											<weak>2050483062</weak>
											<size>921</size>
											<position>272</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_quat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-256</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>00984703E475647DD9E66A1CF47CC65B9CC7B5D3F36B360039D90822B4509D72</strong>
											<weak>1874013843</weak>
											<size>1235</size>
											<position>443</position>
											<strong>9796B8E16C70FA779CAD1998E83822ADD2BEAF798A1D255B38F3492968F9DD27</strong>
											<weak>2086348395</weak>
											<size>1203</size>
											<position>26</position>
											<strong>E77688DFC8AEFA8D8263DB54A0F7F6E02F2CFE30AB4A0BB675B2F498001A43D7</strong>
											<weak>4167511049</weak>
											<size>182</size>
											<position>88</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_quat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-35</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>C3FAF68A09D6A9C23C5CD3846F5FC87C6CD8DA50A65A4FB5D06C8F4B7E618774</strong>
											<weak>1213605622</weak>
											<size>1292</size>
											<position>443</position>
											<strong>A56706EC53C13D739EC516C8264B20E8776AC2B58B1AAC461BE589233F22CF48</strong>
											<weak>4141162190</weak>
											<size>1260</size>
											<position>26</position>
											<strong>8994730A6711B3B286F056D270BE4D5E8717DCFD53611FCCDE25C56EF0C5D57B</strong>
											<weak>1232999801</weak>
											<size>1214</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-95</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>2BAAD9D49DA6E021FD0D8D6FC52FB1ED8F98180BF837B80422B66135189A7E76</strong>
											<weak>575606148</weak>
											<size>10037</size>
											<position>365</position>
											<strong>81FB553A3F0B95EB315DF04EFABF7C1A144F4ECD4E9B7382438EDA6C4CA3F6C1</strong>
											<weak>3099067740</weak>
											<size>10005</size>
											<position>26</position>
											<strong>CA4D11BF95B4743E318C05D032949CCD6C3899EE4320B593CDDB24F3CF22AE34</strong>
											<weak>1130298375</weak>
											<size>9959</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_scalar.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-93</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
											<weak>2210930467</weak>
											<size>6705</size>
											<position>463</position>
											<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
											<weak>3207075579</weak>
											<size>6673</size>
											<position>26</position>
											<strong>F088412EF4F90C0CBED25E29580B74A174DA424969332A729F24E21B98AB351B</strong>
											<weak>4084543876</weak>
											<size>1965</size>
											<position>2632</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-196</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
											<weak>2210930467</weak>
											<size>6705</size>
											<position>463</position>
											<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
											<weak>3207075579</weak>
											<size>6673</size>
											<position>26</position>
											<strong>681F1BD0071E785AB28A7E96DA25FE415B31FF1BF5833EC8F0426FC128C3F354</strong>
											<weak>1053748737</weak>
											<size>1732</size>
											<position>4599</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-233</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
											<weak>2210930467</weak>
											<size>6705</size>
											<position>463</position>
											<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
											<weak>3207075579</weak>
											<size>6673</size>
											<position>26</position>
											<strong>BF2B8C34C02622B620263C2D7E177FC0A3C8CE41F27959FEF17E87834F3B8CF9</strong>
											<weak>2942060246</weak>
											<size>1236</size>
											<position>1334</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-131</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>AB0432A2CD1C0CF9DB53AF49D6B37F0053EE2E0058BF0FC9E3D3240142AD577C</strong>
											<weak>2210930467</weak>
											<size>6705</size>
											<position>463</position>
											<strong>7F7B053DAD102F5737E307596B5179D11990513E5591CEDF21A4E55A99A2E39B</strong>
											<weak>3207075579</weak>
											<size>6673</size>
											<position>26</position>
											<strong>236D127B0A24452A82635A805030F49EDB342EB0FC79CD8DBA8BE9FE4D2711FD</strong>
											<weak>3649849066</weak>
											<size>1236</size>
											<position>96</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-51</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>C945090FB0648B45943B7307F76E5DA9082C9FA6051DA6B8CAB6D51C40680B03</strong>
											<weak>811115380</weak>
											<size>2654</size>
											<position>34459</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-262</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>2AEFDFA8AA23D56D0F80D8EA62CD0014CBB2D2F8104E1C41F8ABC32E7A6B3904</strong>
											<weak>3803367396</weak>
											<size>792</size>
											<position>22864</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-63</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>7EBEEC0994922955DDEC36B023AAC2FA783963AF3AF01BF8A6332FF282605004</strong>
											<weak>3420356563</weak>
											<size>476</size>
											<position>43288</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-40</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>2CFB75164F6F1CBE6110BF7B484E5638738B64548F676DE8494E7D7B6E5DF10B</strong>
											<weak>3875338736</weak>
											<size>952</size>
											<position>18116</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-53</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>CBE5E084A540BB4E63CA884E1E5FA3D46CBF3AC9988E8CE8F846597BDC92A810</strong>
											<weak>1102930952</weak>
											<size>366</size>
											<position>7445</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-39</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>C3E0DC2C199851D953AEB9933D41F5C7238CC66ED061C1C2F6882A8E64F4E514</strong>
											<weak>484122276</weak>
											<size>2172</size>
											<position>5271</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-135</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>3F1584C70E324580A0E293069F66CBBEAFAE62E5F6D83773DC53E02D2DEFA517</strong>
											<weak>2721474376</weak>
											<size>3230</size>
											<position>11937</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-97</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>BC33D72B91605D4AC866DC74052FC030BADD0DAA85A970B205DA9BC3E6627118</strong>
											<weak>1377320520</weak>
											<size>1160</size>
											<position>29201</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-270</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>E47276F54E5907414635B2276A52FCF1F97269B8667200196929D5B2B6973320</strong>
											<weak>1091020759</weak>
											<size>5210</size>
											<position>50351</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-12</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>98C36260D0B7444CB185E50BB8497E88796F3C8230E3C2C01980BE2C5D67A629</strong>
											<weak>523134273</weak>
											<size>386</size>
											<position>49903</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-265</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>C25ECA2288127AB7DF790E18523684F2428B0776A355145254E36E710715022E</strong>
											<weak>1197665932</weak>
											<size>916</size>
											<position>25176</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-193</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>3E4160F9711F26C572CFA75C9E0A040B46C63E374B577367C91C9109C29E0D37</strong>
											<weak>3156002776</weak>
											<size>792</size>
											<position>15229</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-202</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>EBF00384C7ABC8B96920DF58B2180126C2F44586F2D38234E70ADE9297E6B646</strong>
											<weak>316460131</weak>
											<size>1658</size>
											<position>62461</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-108</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>4FAC276CC1F0341B3C77AF56D009D50FB8DA07A5F76100B813A694697EE0C052</strong>
											<weak>208754481</weak>
											<size>321</size>
											<position>37115</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-229</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>48D1BEC7DC7FF65FFACE1194023602EC21AFF9C2FDAAA06EC900CC9412352E57</strong>
											<weak>2881545160</weak>
											<size>881</size>
											<position>19130</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-150</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>1BA0FCA3C5ACC8CC7EAAE4D95AEF4A1D41CA659271A960450A577005E2920759</strong>
											<weak>409988736</weak>
											<size>916</size>
											<position>16083</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-57</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>E5EE92EE7880011EE0D64E74A8B0A2E7C9245479F38E282717F573D779E9F45D</strong>
											<weak>3902732331</weak>
											<size>934</size>
											<position>2724</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-31</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>926D55A208750236A7E1895B5B9A66AB859CE4B1D01E3822E5D43DD4014EAB72</strong>
											<weak>1702061999</weak>
											<size>391</size>
											<position>55563</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-228</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>AB4C81E3F70B1EAC5A61E66C4FB06A3D7900E13C72D6E0EABEBD68C65C544A75</strong>
											<weak>530474308</weak>
											<size>386</size>
											<position>62013</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-190</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>C9F301F6834440D2963CA9532503A4A0896DF6683AAE0EF90E7C49AC19FA0F76</strong>
											<weak>4112187996</weak>
											<size>993</size>
											<position>17061</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-72</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>707340B277298501727B83FA9DF3EBD8BB548B050E86FFDDC877AB42567EBA80</strong>
											<weak>4275401549</weak>
											<size>1396</size>
											<position>23718</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-158</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>13ED8322B81E7B4AB8039A9F2A1623AEC246A2555873D2899BDC59CA7CA182A5</strong>
											<weak>533751107</weak>
											<size>386</size>
											<position>55956</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-195</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>F6D5DF0EF9B5868E0A51D7B6922863A8B76B839DE54DF3C455637B6CB18CB7A9</strong>
											<weak>1231154835</weak>
											<size>916</size>
											<position>26154</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-247</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>85B50128E5FF774A89A902BAADA8D0C395C55634C2EB2E72A11A7F09277945B5</strong>
											<weak>2766473170</weak>
											<size>3175</size>
											<position>30423</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-225</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>05F488EF3380F6EFF59E02CD64EA966C3BE1C4A737A20700BD791A4FD7197DB7</strong>
											<weak>2070314247</weak>
											<size>470</size>
											<position>43766</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-127</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>456F0FD79427456727F2636D753FF6F02CC1B646175423C7CF3066E77BA7C5BB</strong>
											<weak>1713072049</weak>
											<size>391</size>
											<position>61620</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-275</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>27B897CC21B1DE8FF3259AA531562ECD6E2F4FEDEA9F21BD22C03F4DC4DD63BE</strong>
											<weak>2493294537</weak>
											<size>5210</size>
											<position>44298</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-107</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>288006AD21151C2FC58CA10EA1524439370D1EE023D9C163D9B430DBFD3DBFC1</strong>
											<weak>1587447060</weak>
											<size>1505</size>
											<position>21297</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-7</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>94237835F54C8FA9C3F61D5799131F548FBB3730C8D49602117887694F377EC6</strong>
											<weak>1705273262</weak>
											<size>391</size>
											<position>49510</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-227</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>E98BE774DF07E1860BAC91B1EE6391BFDE8ACFAE018A2B5B8AAB2CD0047620C7</strong>
											<weak>2614269955</weak>
											<size>550</size>
											<position>11325</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-67</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>CAB135F843A9FBE2D9B23D52015BDE5C5605E41F813AEAB607EC88B3A59E31D1</strong>
											<weak>1581505429</weak>
											<size>5788</size>
											<position>37498</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-25</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>5A844F9639CD3B4092B135BB0C428CA42F3809AA59B325E8DA0C6513506E59D5</strong>
											<weak>1752150024</weak>
											<size>674</size>
											<position>4535</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-259</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>7EEA43F8736B954ECEB9477AF7F1E42D87D66B477EE8684F7BC49D6C4B4DC2DE</strong>
											<weak>2883519260</weak>
											<size>995</size>
											<position>27132</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-128</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>B2B15854D758B3C567F1F9FEA05B165BA1E7E8B3FF31D7A58A687EE26240B5DF</strong>
											<weak>3163465833</weak>
											<size>5214</size>
											<position>56404</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-109</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>2BA1DC244BA923B4B741FBB754D76F67FE56ED18BDD9E46B08C0F23DF06ABBE0</strong>
											<weak>2642099996</weak>
											<size>1162</size>
											<position>20073</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-56</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>0610DF3B9EBE2C51DF14272DD6FC4BD594DB4039431A74F29FA1FD6FD678DFEF</strong>
											<weak>1200355612</weak>
											<size>950</size>
											<position>28189</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-170</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>D7F08D4D7682EEAA6133CAD886968A87287A2A20D76A7E0E5ABA6C56D923A5F5</strong>
											<weak>1936285900</weak>
											<size>3450</size>
											<position>7873</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-215</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>4BE2E6B6F2C7F5241973EC0433CD6E98E2C2018FD4EF1479017AFB038C26EA84</strong>
											<weak>3512665047</weak>
											<size>65608</size>
											<position>727</position>
											<strong>006E712F200EF752698D3813D548C00E87913EF23D60FD521B04C6E75D317063</strong>
											<weak>822606767</weak>
											<size>65576</size>
											<position>26</position>
											<strong>E2A33D3D84E87BA234CF4D2716BC3BE8BE4A7F6075A2E7E2FED80E7B9D2BDDF5</strong>
											<weak>774816254</weak>
											<size>753</size>
											<position>3720</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-46</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>D547B0C852E2C1AFC45639DC4D9F49F672B9A9DFE0A64B3B8DC5781DEFDC1288</strong>
											<weak>2402422919</weak>
											<size>46</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations2.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-21</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>E4B9893DE662EFCD4826123E9EF7D5C43292900009752B23F765003C9B95278D</strong>
											<weak>1149226474</weak>
											<size>2561</size>
											<position>470</position>
											<strong>4D9D39869F37EF6CF609F8FEC537C42DCE547031AA2D905311035430FD61AFE1</strong>
											<weak>1278133698</weak>
											<size>2529</size>
											<position>26</position>
											<strong>20005D89A65FA28B2191D9C071B4C676645A61CAB16A4B98332A5454D8E3E712</strong>
											<weak>1929002233</weak>
											<size>283</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-273</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>E4B9893DE662EFCD4826123E9EF7D5C43292900009752B23F765003C9B95278D</strong>
											<weak>1149226474</weak>
											<size>2561</size>
											<position>470</position>
											<strong>4D9D39869F37EF6CF609F8FEC537C42DCE547031AA2D905311035430FD61AFE1</strong>
											<weak>1278133698</weak>
											<size>2529</size>
											<position>26</position>
											<strong>886C690FE3D455ED9CDAD208DC2333F90C8ED6E340B8907013C747CB128A8B94</strong>
											<weak>3151037956</weak>
											<size>1047</size>
											<position>1483</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-260</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>E4B9893DE662EFCD4826123E9EF7D5C43292900009752B23F765003C9B95278D</strong>
											<weak>1149226474</weak>
											<size>2561</size>
											<position>470</position>
											<strong>4D9D39869F37EF6CF609F8FEC537C42DCE547031AA2D905311035430FD61AFE1</strong>
											<weak>1278133698</weak>
											<size>2529</size>
											<position>26</position>
											<strong>4FF0380DAE7EE6514620DC8040DB32D467C9F0AE4CF3CA59EF9C46A7D7AA6EBE</strong>
											<weak>2516999627</weak>
											<size>1074</size>
											<position>321</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-132</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>FD3F78762C7BFB30930177C354E304EC43F703A5205F7EC57B841BCBF3452A90</strong>
											<weak>3888337262</weak>
											<size>6845</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-248</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>C6E50703483B0AE2BC2F4C9F5929BF7D80849382FAEDC3C026FF048DB1614D90</strong>
											<weak>850338480</weak>
											<size>2008</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-211</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>09227650BD7548F36799062FF2A92C8F5BE42BCC5C1F54FA1A8E952F94454892</strong>
											<weak>1374872986</weak>
											<size>31117</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-105</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>6486869BC618CF1722DD1567C33F43C43367F2C128261293E61C34D20D606D99</strong>
											<weak>2399146116</weak>
											<size>46</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations3.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-104</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>83CD0CA09E5ABA16B4F673EE5FC2C5D7B88BC19B33242205A9FD850C0EEC819A</strong>
											<weak>1592935100</weak>
											<size>2296</size>
											<position>442</position>
											<strong>3B6DFF89CF3F88BBEDDBE47093999B245CA6155DF88C4D7704BE1DC976845242</strong>
											<weak>2291612308</weak>
											<size>2264</size>
											<position>26</position>
											<strong>BF69BA2306F585D02D3E60F5E0A99837E24ECD0DA2D0D3A3468967767A07144A</strong>
											<weak>2364808611</weak>
											<size>1164</size>
											<position>1090</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-115</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>83CD0CA09E5ABA16B4F673EE5FC2C5D7B88BC19B33242205A9FD850C0EEC819A</strong>
											<weak>1592935100</weak>
											<size>2296</size>
											<position>442</position>
											<strong>3B6DFF89CF3F88BBEDDBE47093999B245CA6155DF88C4D7704BE1DC976845242</strong>
											<weak>2291612308</weak>
											<size>2264</size>
											<position>26</position>
											<strong>1B644504B125532F201621BA8A16D7888AB9BA188356DEF8C3E8531A7C4C9784</strong>
											<weak>26476564</weak>
											<size>983</size>
											<position>105</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-24</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>2EEC24318A80A1465209B1910DF15900F375FA9C7D7936C42777D4FD11EBA69D</strong>
											<weak>1780893462</weak>
											<size>2374</size>
											<position>391</position>
											<strong>5696C6ECA7F344E3741AA2C84E26E16DEB90A3EABA1C01FB77C4EA9928E00BF7</strong>
											<weak>1295859438</weak>
											<size>2342</size>
											<position>26</position>
											<strong>B415A564D109DDC41433EB4BB473F89294D21943FDFDE62B22593F2DBE3F94F2</strong>
											<weak>294530375</weak>
											<size>1141</size>
											<position>1191</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits_defaults.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-180</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>5B9453069284BF03176C5390CEDC265EC411E25C2F1BE1F1A7D47190521136A8</strong>
											<weak>4073921945</weak>
											<size>99</size>
											<position>802</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\inline.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-269</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>2DC6CA3F8739C7450887979E5074C6D03FBD4C772B8C80AED816015BCDF8B6A8</strong>
											<weak>57328266</weak>
											<size>2939</size>
											<position>475</position>
											<strong>4C662D06163175251C2B40E688F013F165844DC85A991CA7A733E9D90E677B4F</strong>
											<weak>3878795874</weak>
											<size>2907</size>
											<position>26</position>
											<strong>10A53C3F4CA440176FF68ED2931C15885EF70C8C7BEEE3E701BFA73261E5AE2E</strong>
											<weak>3203343401</weak>
											<size>149</size>
											<position>2748</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits_array.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-220</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>4B297E1DC4FEC6A6791DE14CEB990890E33D2AABDC0933FCA6AE9BE3841528A9</strong>
											<weak>2402947208</weak>
											<size>46</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_operations3.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-216</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
											<weak>1061339090</weak>
											<size>21066</size>
											<position>501</position>
											<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
											<weak>82163626</weak>
											<size>21034</size>
											<position>26</position>
											<strong>91ED6E57FFD2D87EE1B0E33B62D09F52F79A3378C156FBC0522990266A3A6111</strong>
											<weak>2024964432</weak>
											<size>4428</size>
											<position>1</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-212</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
											<weak>1061339090</weak>
											<size>21066</size>
											<position>501</position>
											<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
											<weak>82163626</weak>
											<size>21034</size>
											<position>26</position>
											<strong>E4CDA256E65BD2542E987D876CE6FE256146DC8FA7166238E3F9F02FE49E361D</strong>
											<weak>3033972061</weak>
											<size>4574</size>
											<position>16390</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-82</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
											<weak>1061339090</weak>
											<size>21066</size>
											<position>501</position>
											<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
											<weak>82163626</weak>
											<size>21034</size>
											<position>26</position>
											<strong>9A621B3974B4A36CA4612BE7E09BEC93B12A05624E4CA97EA25160BCC2D58067</strong>
											<weak>1130197037</weak>
											<size>4333</size>
											<position>4491</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-68</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>5E920CB58E234CF1C59DA574746971728AA45969FA1EA36166DD23D31AC926AB</strong>
											<weak>1061339090</weak>
											<size>21066</size>
											<position>501</position>
											<strong>71C3299745B0B6D785099D625DA8A54BE106CA0430CE9891C7D03C017B78C368</strong>
											<weak>82163626</weak>
											<size>21034</size>
											<position>26</position>
											<strong>ACC9393D5B4EAA40971E8F79D61819AE6368E5622AD5E2BEC8C101BD3CCA6668</strong>
											<weak>3531792127</weak>
											<size>7442</size>
											<position>8886</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-140</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>AE4EE2F5DEB7CFB155FF4C9A3C9A2CA3FF17D51CD9BEEC4D6595E700C96C7EB1</strong>
											<weak>2991569864</weak>
											<size>1939</size>
											<position>442</position>
											<strong>67CDB0E55E1DE1EC766920BB469BE0083EF841AFB53D619DDDD2C26669A2A738</strong>
											<weak>1803858848</weak>
											<size>1907</size>
											<position>26</position>
											<strong>30E0D4046F983A6E14C98F6CCAD79E0E1F2DC7A8E7FDF9C05CB6F024A46CD60B</strong>
											<weak>3227560523</weak>
											<size>1861</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-266</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>EA570BFE3AD7B028E545990C9DE15DE92596A6210620D3AE4B05BE7AB01206B3</strong>
											<weak>2399670405</weak>
											<size>46</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations4.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-15</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>91BEE5C5F9F240A7D62139EA02650EAE314754B29600FC9E34EAFEC76E6FB6B4</strong>
											<weak>954351199</weak>
											<size>224</size>
											<position>365</position>
											<strong>0C29E96B7FDA3EF5600D4DD02ED0BA86C2966467637FF7525933D772A1C1A116</strong>
											<weak>3404871223</weak>
											<size>192</size>
											<position>26</position>
											<strong>510C300CB59A35401B0C99ACE6F090156D77EF4E5AE2C015AE5E9CC857A03535</strong>
											<weak>1967402210</weak>
											<size>146</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\enable_if.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-52</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
											<weak>2394670759</weak>
											<size>820</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-10</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
											<weak>2394670759</weak>
											<size>820</size>
											<position>323</position>
											<strong>2987AF079555D7D7AAEBD5131A984CEF6986395A6CC35E8ECC670BCA65E917A2</strong>
											<weak>3963862655</weak>
											<size>788</size>
											<position>26</position>
											<strong>0A35DD484F5FFF6F4E27D845991F74514AB2C5D91C3DEDA003F106FE25004660</strong>
											<weak>3346742165</weak>
											<size>206</size>
											<position>572</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-167</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
											<weak>2394670759</weak>
											<size>820</size>
											<position>323</position>
											<strong>2987AF079555D7D7AAEBD5131A984CEF6986395A6CC35E8ECC670BCA65E917A2</strong>
											<weak>3963862655</weak>
											<size>788</size>
											<position>26</position>
											<strong>473C0941872ACCAD17DB9AA6D35E17339C89F66BC34C46419CE289C0C5869CF6</strong>
											<weak>3681624261</weak>
											<size>135</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-267</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>4</size>
											<strong>D9E6D5E023D7A690A4E7A380FCC4368055E8D69944241FDF3ECD1304C96697B5</strong>
											<weak>2394670759</weak>
											<size>820</size>
											<position>323</position>
											<strong>2987AF079555D7D7AAEBD5131A984CEF6986395A6CC35E8ECC670BCA65E917A2</strong>
											<weak>3963862655</weak>
											<size>788</size>
											<position>26</position>
											<strong>473C0941872ACCAD17DB9AA6D35E17339C89F66BC34C46419CE289C0C5869CF6</strong>
											<weak>3681624261</weak>
											<size>135</size>
											<position>36</position>
											<strong>A7921C4A860BD9C259C9F729BCE569BBB1D9B1A3625432AE1A0818CAF776EB31</strong>
											<weak>3309243212</weak>
											<size>39</size>
											<position>81</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-26</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>2FD32AFEB06DE2A63241E32CF04DE61DB0AD5918CD42B128E6662033A12F1EB7</strong>
											<weak>3114984899</weak>
											<size>2058</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-58</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>BB5911D6AE232295311763D74938A8163AADEAEE0330678F55305B70611C71B9</strong>
											<weak>1505950842</weak>
											<size>56925</size>
											<position>321</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_access.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-176</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>CD8A0E7B3B97341438895136525CFA5C355771C0F98910E7702E90902867ACBB</strong>
											<weak>4289579138</weak>
											<size>56777</size>
											<position>469</position>
											<strong>6D84BB81555A65F737D8D01F7504B68B30BBECD4E06AC093C57DB72F503EAA56</strong>
											<weak>697614426</weak>
											<size>56745</size>
											<position>26</position>
											<strong>55471878EC742494A2618C45BF04B3F7643AC1EB3B41EF774C9876052207257D</strong>
											<weak>2927272713</weak>
											<size>56579</size>
											<position>96</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_access.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-251</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>C637CAE81E13DFC12646862196C906F3BE0EDCF36EC327098E5FAD938E1F8401</strong>
											<weak>2098799371</weak>
											<size>1047</size>
											<position>12139</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-271</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>624711D5211AE3F4F1A9BDB8C3C25411348AF464D39739E4925930CB5B59B903</strong>
											<weak>1518392064</weak>
											<size>819</size>
											<position>20362</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-141</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>B0854C15114E02F42844BE05CDF16F0FFCD6B05290D2239ED6585EE935A8E221</strong>
											<weak>309919905</weak>
											<size>960</size>
											<position>25173</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-76</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>1D10E439CB22D9EFCB5990950977A0EB08C87FF9CD5B1C84F34F390F03F6BF24</strong>
											<weak>1537004283</weak>
											<size>819</size>
											<position>19481</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-244</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>1FBCA679225AA536BEB718F8044611FEF70DC1D99C8AC79ECE8E41095E37263C</strong>
											<weak>3672641366</weak>
											<size>2918</size>
											<position>7519</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-47</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>07DBB60ABCB708E4AABB2704B0E386A883135266F0F8651BC5DB1697B59DFC3C</strong>
											<weak>794936032</weak>
											<size>749</size>
											<position>4255</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-268</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>2E17D475B558FCC1C153B92C520DC152582B0ABFF84BCC482B56A4B00EF84A46</strong>
											<weak>3268018344</weak>
											<size>2089</size>
											<position>5066</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-74</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>FE097205F6504E8FFFC08D6ED14B53D5F1F34A5B84C31B0C7CAADA39A8184D46</strong>
											<weak>3570194523</weak>
											<size>865</size>
											<position>14143</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-96</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>A3B2C133CD9DA70079337C4C2C9ACA4111E8372C208D4784D6D41F7C59741458</strong>
											<weak>2194320629</weak>
											<size>697</size>
											<position>18722</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-210</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>A1F7EFAA5299201C357D33995D63A92392987A8EBBE9EED8C20AC3084E17306E</strong>
											<weak>986240137</weak>
											<size>833</size>
											<position>13248</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-89</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>CF14D5A9C308256B0BE2F994E529F96280D757E2189542E5DD2282DA1E341477</strong>
											<weak>2845796485</weak>
											<size>1233</size>
											<position>2960</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-246</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>0B31976D56B7578A3C24B2A0B218895A6AC9E26AA74A1086429124146B1D587F</strong>
											<weak>857592559</weak>
											<size>819</size>
											<position>11258</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-75</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>FC537C929B039E6BC930FF1B0EA767F5829E55D1235A1A0F61FFE38A9C15F180</strong>
											<weak>799722441</weak>
											<size>794</size>
											<position>24317</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-263</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>7AAE9499F44EE0DBC5AA23A1178804B7A7D6BCD9F3EA978F952107C9608E4B86</strong>
											<weak>1162258026</weak>
											<size>667</size>
											<position>2231</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-122</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>549B1B042A347B93B6AF41DB4DF17A611FACF6DDCDCABEDA6BCBF552C1489687</strong>
											<weak>3749759031</weak>
											<size>784</size>
											<position>16852</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-27</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>17904E01491C48ACBD91531989A3DADA8CA41FF80C6890D53D5DF08635C42BA1</strong>
											<weak>2029835593</weak>
											<size>835</size>
											<position>21243</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-124</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>50433FAA9D0BED305FEB032FE872D49F1DA5F5AD0F047E34F79DB290A1DEBAA6</strong>
											<weak>649647653</weak>
											<size>862</size>
											<position>15070</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-133</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>D3DB092C22A5C22F49E9875B1432BE714DEC7769F44DD5103D238A1DD489CAAD</strong>
											<weak>3426960718</weak>
											<size>1253</size>
											<position>22140</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-187</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>E0565850AAC1EAA82D982F2403A4C73ACE5BC684DF8EED5345D4A3E9514906C0</strong>
											<weak>2021345822</weak>
											<size>3440</size>
											<position>26195</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-200</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>C00267E38148DB556831FACDE1DAEB21184A036AB5BE3809F6891C43571B02C3</strong>
											<weak>1459211421</weak>
											<size>796</size>
											<position>15994</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-71</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>911C56FF593D1BD88CE4F4CECF884AE322988A4084EFE6C225072B34EC1497D9</strong>
											<weak>844030593</weak>
											<size>860</size>
											<position>23395</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-17</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>4B69258D09315EDE9FD97D459058D81EBD311845033E6934CD4E0A4AE4DE11E9</strong>
											<weak>3232780108</weak>
											<size>300</size>
											<position>7157</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-274</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>D28CAF68BA9BE8E389CA37CEFC41E8D20C3CCAC1816B7CBE05C1600CFD494AF6</strong>
											<weak>1652993257</weak>
											<size>697</size>
											<position>10499</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-159</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>3929C2A06E688E66088EA28F12C27183632BEF04FE3E2C4BF084C7C8546BD0BC</strong>
											<weak>3887630348</weak>
											<size>30853</size>
											<position>587</position>
											<strong>551A5D2288DAFBF90EA84C91FBD985EE1716C041710F6FF0EBBDEB018124F349</strong>
											<weak>2586410980</weak>
											<size>30821</size>
											<position>26</position>
											<strong>2C6F77C3445DF20A26AEF22EAC68F7C283467E28CA4468FF91A09EC10F6A00FD</strong>
											<weak>3251372405</weak>
											<size>962</size>
											<position>17698</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-142</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>1413CB15A7AA565850D0DEF94573F4AA3AF9BCFBCBD98230E01BCF41CF22CFBF</strong>
											<weak>3830272366</weak>
											<size>1412</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-206</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>AAA5973C5768F3DA8F32BAE9EE840B59C61EB20191F15ABD4F027D415A8F6BC4</strong>
											<weak>3545701686</weak>
											<size>98</size>
											<position>600</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\inline.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-42</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>409E4D60B98EF741A3FD018BBBCD23F43C8C64BE667BAA55C8734229029BD7CA</strong>
											<weak>23846357</weak>
											<size>2521</size>
											<position>747</position>
											<strong>E5C8FE91924F0A023A765559536DD48841CE22298C788B34C29ECE3630D6A3F7</strong>
											<weak>3033388461</weak>
											<size>2489</size>
											<position>26</position>
											<strong>A73479F628914426270790200F82AF3479884DBDFE741E1E412EC5F09D454E2A</strong>
											<weak>1404546724</weak>
											<size>591</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>tutorial.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-219</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>409E4D60B98EF741A3FD018BBBCD23F43C8C64BE667BAA55C8734229029BD7CA</strong>
											<weak>23846357</weak>
											<size>2521</size>
											<position>747</position>
											<strong>E5C8FE91924F0A023A765559536DD48841CE22298C788B34C29ECE3630D6A3F7</strong>
											<weak>3033388461</weak>
											<size>2489</size>
											<position>26</position>
											<strong>3A2846FA4B9AC03140008EA4ADD2C01673EE696BC450FC228FF95AD50DBED178</strong>
											<weak>1629398311</weak>
											<size>554</size>
											<position>1925</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>tutorial.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-224</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>409E4D60B98EF741A3FD018BBBCD23F43C8C64BE667BAA55C8734229029BD7CA</strong>
											<weak>23846357</weak>
											<size>2521</size>
											<position>747</position>
											<strong>E5C8FE91924F0A023A765559536DD48841CE22298C788B34C29ECE3630D6A3F7</strong>
											<weak>3033388461</weak>
											<size>2489</size>
											<position>26</position>
											<strong>DF86FD9EEF444F73D273527DA311A052CD5F1E9EB07228147E5C668682BC8286</strong>
											<weak>1303890334</weak>
											<size>701</size>
											<position>1222</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>tutorial.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-98</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>BFA60DF1E91012ADC2E468708F87FFF4F83CB470102764E788F2821BFD184DCB</strong>
											<weak>1625094152</weak>
											<size>3091</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits_array.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-36</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>36B0B7E98A41DCD596369738639C82D7BC724D0A20AE3C03F5314D21DE65DACD</strong>
											<weak>4017544201</weak>
											<size>770</size>
											<position>432</position>
											<strong>18DE9CD6558A56D25CA4980068F816482049145C691D470606C024122133509B</strong>
											<weak>423154657</weak>
											<size>738</size>
											<position>26</position>
											<strong>56745E1F2F91A6F6B07813DB5030D5C7B0C3E3D0380F89025FF31799873E7DA1</strong>
											<weak>1939524236</weak>
											<size>692</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\detail\quat_assign.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-43</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>94B992A48A1E88E6CFBC0B0F4FA2849E4D3AC86B6BC3A416088375061E1534CE</strong>
											<weak>3964755532</weak>
											<size>2442</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_traits_defaults.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-102</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>E421538D01E77D91004500AB45521260F64432BD9B4D77DA8BD81C1AE8C485D0</strong>
											<weak>228995482</weak>
											<size>8117</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_access.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-168</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>02A4FCA78CFBB5C8CE4A60C6AA81517EB351CDD28EBE2A959192113E7DDE72D1</strong>
											<weak>967310833</weak>
											<size>21244</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_vec_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-38</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9ACBA701B147D464A58E5EA09D755B15DAD7F08829B73393019283E5E0D2FDD3</strong>
											<weak>2507510468</weak>
											<size>2599</size>
											<position>391</position>
											<strong>A0B8CDB7F7BCAF7030D050FEEFF7828BC7A6429CE45C8C13D92B2EDF5F795314</strong>
											<weak>775326364</weak>
											<size>2567</size>
											<position>26</position>
											<strong>907C3601D60E1BC53C6838C7A83BD1316FBE5579BF54C3BD9FC4B06586621672</strong>
											<weak>2531939411</weak>
											<size>1256</size>
											<position>1301</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat_traits_defaults.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-199</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>93F5E8019F9CA9A13661D60F67EB59C2373267DD6C8C500FD29DCE67A62CE000</strong>
											<weak>1896373155</weak>
											<size>355</size>
											<position>39324</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-41</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>DEC8DF8765CF355532905295E5D1A68A52242FAAE531208665CA36214BE5BD08</strong>
											<weak>592616582</weak>
											<size>2742</size>
											<position>31064</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-221</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>DC50662E20554661948A10AF72D1E748058592639000CD61CCA8D1526A126209</strong>
											<weak>243381956</weak>
											<size>645</size>
											<position>9938</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-61</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>1F050B7448BC14AD376D637DD15296197E38256B463235D6F654CAF674063611</strong>
											<weak>2180442342</weak>
											<size>792</size>
											<position>13924</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-13</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>433FB35009D478ADC7CC0929A4E25AAE846BB4F52A1F039ED9FCF940B9D80915</strong>
											<weak>656025566</weak>
											<size>964</size>
											<position>29067</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-80</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>90B08E55EE8956FC2719CC972AB74C3387BDB034E249612087B6714F06CE6415</strong>
											<weak>2581546570</weak>
											<size>276</size>
											<position>42873</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-55</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>DB8AE4BC07553D01DDD060C46423B330E90DE0939A5EB38DC9A1944736510C1D</strong>
											<weak>2808381593</weak>
											<size>1321</size>
											<position>21343</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-32</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>8C25A97B546080A2F973C135786C22E91240D333598BB2C2244A1C2FB495E91F</strong>
											<weak>426429444</weak>
											<size>689</size>
											<position>18940</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-272</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>9D82D57A4B2062AA910E42ACBA645DE34995A1CA890CE6154D836AED338CEF2A</strong>
											<weak>833961895</weak>
											<size>1145</size>
											<position>16598</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-254</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>9D39EBAE47060908B640127BB5815D1574A7697CBB17E572CA2A8843207F4137</strong>
											<weak>1843287609</weak>
											<size>1192</size>
											<position>26114</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-253</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>3DAEDE48C9680DC5D550710A72BEA4B69BAEE62C8D7662226D9DB52EEF8E0E39</strong>
											<weak>190530527</weak>
											<size>271</size>
											<position>46894</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-222</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>6BE5D3408C1AFCD4711C829B878452AF074BB086C676F4B9521A59F6EB270C40</strong>
											<weak>289789310</weak>
											<size>3130</size>
											<position>39741</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-198</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>73C15F343554FDCF94C8E7F7915D82A3015494E7CA8780ED6C2B6A09F977A741</strong>
											<weak>2217138966</weak>
											<size>744</size>
											<position>20597</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-257</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>2A6A8DF1B669951D6C2734BC4087696D97DC818E45B4D5A5B4AC8498609FD844</strong>
											<weak>3899350639</weak>
											<size>361</size>
											<position>38961</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-249</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>7C1D5FA798C79770944D446214F27ED1FB371ADD9BAD905372AF73B26FEE6345</strong>
											<weak>182535133</weak>
											<size>271</size>
											<position>43151</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-123</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>E2BAA39D769420C549FB2428C5449894C4212106C4C607C903BCD3EB8BF4D44B</strong>
											<weak>2598323790</weak>
											<size>276</size>
											<position>50359</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-143</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>23F1C2BF84A6ABA24DF83729930378B0E17C963A119CFF40AA8FB95AC5DD734C</strong>
											<weak>1130745952</weak>
											<size>714</size>
											<position>25398</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-185</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>A9B8FF8360177B12BFC5B2A980D814499E72692A6D409681EFB43C7E3FA4AD4E</strong>
											<weak>234671098</weak>
											<size>689</size>
											<position>28376</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-23</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>171B7F87E15B87E4882E126BED2E7D08A8F0297EBC49B18F24BEB5992199E25E</strong>
											<weak>105107176</weak>
											<size>714</size>
											<position>15882</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-161</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>247FADF47FCB2D19160EA3F3989486B89626C83C65BAA85E2078CAE38779A064</strong>
											<weak>901045008</weak>
											<size>743</size>
											<position>6939</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-252</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>11C1AE68567EC7C5911611D2E286E7CD26CA55CA4E446501367231E320DB5477</strong>
											<weak>74044838</weak>
											<size>3130</size>
											<position>47227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-37</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>FABB01A2FF79B086D18E380BEA06673580919C829EDB885049D81AD465F0A479</strong>
											<weak>2260804154</weak>
											<size>2192</size>
											<position>7744</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-134</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>2BE161679D73843FE4BF8A932AF0C12B6BE722E9369B7EF1E67F702DEA11407A</strong>
											<weak>198525921</weak>
											<size>271</size>
											<position>50637</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-163</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>64BCE00E4E1F33BB65620BE148AC7D9471F4A54D54C01E0898FD3985766CAE82</strong>
											<weak>2021959840</weak>
											<size>598</size>
											<position>18340</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-116</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>8B0E11B0DCB1C511E85448401EB03F54174E821FBA7C5A65FB058D538FBD998C</strong>
											<weak>3909506602</weak>
											<size>1364</size>
											<position>1491</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-250</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>8C34C90D668D2BD1901CC7ABFB8D1E8D10D31C89C974B9ED7B47338CF9881694</strong>
											<weak>1678596127</weak>
											<size>1162</size>
											<position>14718</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-181</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>688C3EB7CFC78A14DB41317073344A1D083765367AA1235BCE54B6E2AF4E3597</strong>
											<weak>145816868</weak>
											<size>969</size>
											<position>30033</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-172</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>8302C5100BF38CB2F739ADC1E8A212881F550B6DFCACF4B958B67DED14906A9C</strong>
											<weak>2140507318</weak>
											<size>518</size>
											<position>22666</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-189</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>0B151418AD6C87F3F35F0C837F3D026CD46E590E658EA940331C35D5C9DAC8A9</strong>
											<weak>484726198</weak>
											<size>3960</size>
											<position>2917</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-239</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>4D62CB4C3299CFEA85267212A627203D812A07D347DD162F5D32E67817AB9AAB</strong>
											<weak>1691003053</weak>
											<size>1768</size>
											<position>33868</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-92</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>AB94049EA854468096DA207DF75182071520E1938CED08E90A7097761A2516B0</strong>
											<weak>2589935180</weak>
											<size>276</size>
											<position>46616</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-138</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>363A54D1F42CAA9F0ED09C0488DB797CB829AA7C99BF70EC6B68B879734B90B2</strong>
											<weak>914106344</weak>
											<size>964</size>
											<position>19631</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-204</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>5A103711DC55E41DA7B272708B8303B478D52650F4A5D7E3D30CBDB428A71DC7</strong>
											<weak>2348869581</weak>
											<size>784</size>
											<position>24612</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-279</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>361818B43FCEEF2E68F727AEE304BD8D850E043C8DDD5E0874696CDFA81D0CCB</strong>
											<weak>2424605903</weak>
											<size>518</size>
											<position>13404</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-48</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>EA59CA925F3C7A0BD51B6D071B47A8F3C3FEDE5B3D020B4973C477CA88B32BD1</strong>
											<weak>2472793825</weak>
											<size>2697</size>
											<position>10645</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-261</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>D9F43B85D5D56635D7D4F3F0C17D613923C0FEFC04852DCF261F4A1C334856D3</strong>
											<weak>4024936300</weak>
											<size>593</size>
											<position>17745</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-45</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>3E6B6F902891F338DB336402C11D7E251A7EBE31C961FBBD399C3ADF7675E9E0</strong>
											<weak>1836621315</weak>
											<size>1424</size>
											<position>23186</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-84</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>C3FEA0573DE609A99DF9AA0BDA09F833B64D1E072D68010DEFD9F97E05BF1CE3</strong>
											<weak>2222994153</weak>
											<size>1066</size>
											<position>27308</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-64</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>594CB4DDE0B198F8E98B6802AACB0430B58F8C5A0494FADEDCB8B410655206E4</strong>
											<weak>3004868159</weak>
											<size>589</size>
											<position>35638</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-126</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>A9BAC47BA39F733408310940707F658FE59C1272BD3450E88904674451B25AE8</strong>
											<weak>336242201</weak>
											<size>2670</size>
											<position>36289</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-146</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>9895E43C9E558F965B14027B416B10A5440B7BA92521B56817B027F20F5168D5</strong>
											<weak>3228175212</weak>
											<size>54430</size>
											<position>642</position>
											<strong>96FF19AB80CB629ECABDB9BA4AC8F5880158D5749A99D7160C0E2C0E2CECB85A</strong>
											<weak>4198957892</weak>
											<size>54398</size>
											<position>26</position>
											<strong>9A84564CEB5E4E1AEB7049B6ED435BC0169C6EB8DC1B691BBDDFA6C65B2871EA</strong>
											<weak>2329400722</weak>
											<size>3130</size>
											<position>43484</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-194</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>83840FEAAA3CA69E2217467489FEFC422E593964539B30FE3FBB4639B1EBEBD5</strong>
											<weak>906799940</weak>
											<size>654</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\error.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-151</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>93E8802154BC3A73DA5F9AB710003DAF46A8E5E84B5FB2E87BDF1C08A4C1B6D6</strong>
											<weak>3260093530</weak>
											<size>67</size>
											<position>531</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\inline.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-11</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>B632C8CDA0076CF09ED3D758002F67E765D20CBCCC2F3C7EC8D2EB8B0E1CD3D7</strong>
											<weak>4141484968</weak>
											<size>39</size>
											<position>282</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\assert.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-186</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>E4184EFA0093FFC31DB85721EA63AEFB1B0BA13F6A770D1E59B0DB5DD17190D9</strong>
											<weak>1269595195</weak>
											<size>54749</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-236</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>16DD26DB40A8007EA8001066745DE736108DDA254E45AE2D4D6D782CE15435DA</strong>
											<weak>1351896772</weak>
											<size>215</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\operations.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-9</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>D442EAF44B63D468477539E205CC5677E40863AEEE1BBCFEEEE117D12805F9DB</strong>
											<weak>488639931</weak>
											<size>39</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\swizzle3.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-103</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>436968535752C1B1D4A79FC73D74FCAEDB915B3D1FB7A2282C083F26175E53E0</strong>
											<weak>3648000548</weak>
											<size>50</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_mat_operations2.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-20</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>667F219F6F819F06D38969AC7B8BF343D1E90B82F13D42B1E625A5084C0C52E1</strong>
											<weak>3932422585</weak>
											<size>2708</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\scalar_traits.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-241</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>B27E03D92E6FAD7D8075C3BAD05E7823E39B875DA8B47D5C67D2A14D55DB42E5</strong>
											<weak>487943384</weak>
											<size>2415</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\deduce_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-147</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>7C1C06F350992CD8FFF38840E1B693EF5A485370716C2E4F65FEBC6582459EE9</strong>
											<weak>2378870236</weak>
											<size>656</size>
											<position>391</position>
											<strong>1986FDC803FC68E3C010E7113B6507BF2EF3C848F484AF8583DA3BDAD4DA0E5B</strong>
											<weak>565159348</weak>
											<size>624</size>
											<position>26</position>
											<strong>1EC89DE6325B2C87862547FFCDAAF5BA5F17D5C96EC311CCADE429E0D1CEC6E3</strong>
											<weak>2577042525</weak>
											<size>521</size>
											<position>93</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\quat_traits_defaults.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-18</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>C484F07CBF4E9908922A85B02A7FD0A9A55EF62BABFFE05D3C6A9F0A700792F0</strong>
											<weak>1555561894</weak>
											<size>7969</size>
											<position>471</position>
											<strong>D947858FA5362B88B7B7DBEAAF36778243BED5451E227C759CBBEBC683F3BB36</strong>
											<weak>2411918718</weak>
											<size>7937</size>
											<position>26</position>
											<strong>9D8BFE4B1B8A2DCBF140DDBA5F96420071F3A4F355BC06C8261E5B83AC004295</strong>
											<weak>3204765741</weak>
											<size>7771</size>
											<position>96</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\vec_access.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-111</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>0D0CCCDE39294A042E91A41BCD6172DE1BAFAE5E3012F21BA463EFC672C4D7F2</strong>
											<weak>2588076710</weak>
											<size>32979</size>
											<position>323</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\map_mat_mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-226</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>28854EC2300D91AE54546892BD32E6498559F6BA2FD3FFED676D7BC5C985A8F3</strong>
											<weak>2649048134</weak>
											<size>221</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>mat_traits_array.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-73</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>0BCECA63125E1B73EC133694C17676F2B7FD5CC60BA547C777BCAA500AF23AFC</strong>
											<weak>3970075568</weak>
											<size>4051</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>interoperability.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-130</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>3</size>
											<strong>78179BBDDD2C75452CEE7FFDD097F51D3BEB23C7967388958D880678C54287FC</strong>
											<weak>2313508410</weak>
											<size>2495</size>
											<position>442</position>
											<strong>3CE5589C163484778B3973F71C2FA6B4C02826F1C167FB62556B3BDA9F77C50F</strong>
											<weak>2861321746</weak>
											<size>2463</size>
											<position>26</position>
											<strong>00385E8AFE4596EE95F95562CE3D5B127B0AFF23944A7E73D12897C4429341FB</strong>
											<weak>2237023421</weak>
											<size>2417</size>
											<position>36</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\mat.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-14</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>27B64D3BA86262629B9FAAD6B451D1CFBE5055B9FAD473D5A11F55D318D8F7FC</strong>
											<weak>488115642</weak>
											<size>39</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\swizzle2.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-154</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<size>1</size>
											<strong>DCB43B88E7D93012DF3C31CFC0CBE89728F11AA02C49FEECC1519B5E7654DBFF</strong>
											<weak>489164220</weak>
											<size>39</size>
											<position>227</position>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>..\..\include\boost\qvm\swizzle4.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-197</id>
									</shared_ptr>
								</pair>
							</sorted>
						</index>
					</object>
				</shared_ptr>
			</contexts>
			<index>
				<shared_ptr>
					<id>287</id>
					<type>
						<string>tag_index</string>
					</type>
					<object>
						<tag_index>
							<sorted>
								<size>212</size>
								<pair>
									<weak_ptr>
										<expired>1</expired>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-5</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-6</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-7</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-8</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-11</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-12</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-13</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-14</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-16</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-17</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-18</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-22</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-23</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-24</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-25</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-26</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-27</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-29</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-30</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-31</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-32</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-33</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-34</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-35</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-37</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-39</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-40</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-41</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-42</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-43</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-44</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-45</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-46</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-47</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-48</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-49</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-50</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-51</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-53</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-54</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-55</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-56</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-57</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-61</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-63</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-64</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-65</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-68</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-69</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-70</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-71</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-72</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-74</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-75</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-76</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-77</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-78</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-79</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-80</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-82</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-84</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-85</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-86</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-88</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-89</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-90</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-91</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-92</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-93</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-94</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-95</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-96</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-97</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-101</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-107</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-108</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-109</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-111</id>
										</shared_ptr>
									</weak_ptr>
									<string>view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-113</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-114</id>
										</shared_ptr>
									</weak_ptr>
									<string>constant</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-115</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-116</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-117</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-118</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-119</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-120</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-121</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-122</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-123</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-124</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-126</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-127</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-128</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-130</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-131</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-132</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-133</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-134</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-135</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-137</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-138</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-139</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-140</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-141</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-142</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-143</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-144</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-145</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-146</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-148</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-149</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-150</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-152</id>
										</shared_ptr>
									</weak_ptr>
									<string>constant</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-153</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-155</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-156</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-158</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-159</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-160</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-161</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-163</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-165</id>
										</shared_ptr>
									</weak_ptr>
									<string>namespace</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-167</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-169</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-170</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-172</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-174</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-178</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-179</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-180</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-181</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-182</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-183</id>
										</shared_ptr>
									</weak_ptr>
									<string>view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-184</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-185</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-186</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-187</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-188</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-189</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-190</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-191</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-192</id>
										</shared_ptr>
									</weak_ptr>
									<string>constant</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-193</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-194</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-195</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-196</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-198</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-199</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-200</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-201</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-202</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-204</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-205</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-207</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-208</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-209</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-210</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-212</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-214</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-218</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-220</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-221</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-222</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-223</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-225</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-227</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-228</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-229</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-231</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-232</id>
										</shared_ptr>
									</weak_ptr>
									<string>namespace</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-233</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-235</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-237</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-238</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-239</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-240</id>
										</shared_ptr>
									</weak_ptr>
									<string>view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-243</id>
										</shared_ptr>
									</weak_ptr>
									<string>category noalso noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-244</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-245</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-246</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-247</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-249</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-250</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-251</id>
										</shared_ptr>
									</weak_ptr>
									<string>view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-252</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-253</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-254</id>
										</shared_ptr>
									</weak_ptr>
									<string>function throws</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-255</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-256</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-257</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-258</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-259</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-260</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-261</id>
										</shared_ptr>
									</weak_ptr>
									<string>function view</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-262</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-263</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-264</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-265</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-266</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-267</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-268</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-269</id>
										</shared_ptr>
									</weak_ptr>
									<string>macro</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-270</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-271</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-272</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-273</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-274</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-275</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-276</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-278</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-279</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
							</sorted>
						</tag_index>
					</object>
				</shared_ptr>
			</index>
		</reno_project>
	</object>
</shared_ptr>
