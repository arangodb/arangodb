[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/structboost_1_1geometry_1_1segment__view.xml]
[section:segment_view segment_view]

'''<indexterm><primary>segment_view</primary></indexterm>'''
Makes a segment behave like a linestring or a range. 

[heading Description]
Adapts a segment to the Boost.Range concept, enabling the user to iterate the two segment points. The segment\u005fview is registered as a LineString Concept 

[heading Model of]
[link geometry.reference.concepts.concept_linestring LineString Concept]

[heading Synopsis]
``template<typename Segment>
struct segment_view
      : public detail::points_view< geometry::point_type< Segment >::type, 2 >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[typename Segment] [A type fulfilling the Segment Concept]]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``segment_view(Segment const & segment)``

] [Constructor accepting the segment to adapt. ] [[* Segment const &]: ['segment]:  



]]
]

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/views/segment_view.hpp>`

[include reference/views/segment_view.qbk]

[endsect]

