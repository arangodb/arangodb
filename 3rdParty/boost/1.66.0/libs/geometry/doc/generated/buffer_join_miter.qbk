[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1buffer_1_1join__miter.xml]
[section:strategy_buffer_join_miter strategy::buffer::join_miter]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>buffer</primary></indexterm><indexterm><primary>join_miter</primary></indexterm>'''
Let the buffer create sharp corners. 

[heading Description]
This strategy can be used as JoinStrategy for the buffer algorithm. It creates a sharp corners around each convex vertex. It can be applied for (multi)linestrings and (multi)polygons. If corners are sharp by themselves, the miters might become very long. Therefore there is a limit (miter\u005flimit), in terms of the used distance, which limits their length. The miter is not changed to a bevel form (as done in some other software), it is just adapted to the specified miter\u005flimit but keeps its miter form. If the buffer distance is 5.0, and the miter limit is 2.0, generated points will be located at a distance of at most 10.0 (2*5) units. This strategy is only applicable for Cartesian coordinate systems.

[heading Synopsis]
``class strategy::buffer::join_miter
{
  // ...
};
``

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``join_miter(double miter_limit = 5.0)``

] [Constructs the strategy. ] [[* double]: ['miter_limit]:  The miter limit, to avoid excessively long miters around sharp corners 



]]
]

[heading Header]
`#include <boost/geometry/strategies/cartesian/buffer_join_miter.hpp>`

[heading Example]
[buffer_join_miter]
[heading Output]
[$img/strategies/buffer_join_miter.png]
[heading See also]
* [link geometry.reference.algorithms.buffer.buffer_7_with_strategies buffer (with strategies)]
* [link geometry.reference.strategies.strategy_buffer_join_round join_round]

[endsect]

