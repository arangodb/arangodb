#~ Copyright Rene Rivera 2008
#~ Distributed under the Boost Software License, Version 1.0.
#~ (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)


project
    :   requirements
        <library>/boost/system//boost_system
        <define>BOOST_ALL_NO_LIB=1
        <warnings>all
        <toolset>gcc:<cxxflags>-Wextra
        <toolset>gcc:<cxxflags>-Wshadow
        # <toolset>gcc:<warnings-as-errors>on
        <toolset>gcc:<cxxflags>-Wno-long-long
        <toolset>pathscale:<cxxflags>-Wno-long-long
        <toolset>gcc:<cxxflags>-Wcast-align
        # <toolset>msvc:<warnings-as-errors>on
        <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
    ;

import testing ;

run valgrind_config_check.cpp : : : <testing.launcher>"valgrind --error-exitcode=1" ;
explicit valgrind_config_check ;

local use-valgrind = [ check-target-builds valgrind_config_check "valgrind" : <testing.launcher>"valgrind --error-exitcode=1" : <build>no ] ;

local Werr = <toolset>gcc:<warnings-as-errors>on <toolset>msvc:<warnings-as-errors>on ;

test-suite pool :
    [ run test_simple_seg_storage.cpp : : : $(Werr) <toolset>msvc:<cxxflags>-wd4267 ]
    [ run test_pool_alloc.cpp : : : $(Werr) ]
    [ run pool_msvc_compiler_bug_test.cpp : : : $(Werr) <toolset>msvc:<cxxflags>-wd4512 ]
    [ run test_msvc_mem_leak_detect.cpp : : : $(Werr) ]
    [ run test_bug_3349.cpp : : : $(Werr) ]
    [ run test_bug_4960.cpp : : : $(Werr) ]
    [ run test_bug_1252.cpp : : : $(Werr) ]
    [ run test_bug_2696.cpp : : : $(Werr) ]
    [ run test_bug_5526.cpp : : : $(Werr) ]
    [ run test_threading.cpp : : : <threading>multi <library>/boost/thread//boost_thread ]
    [ run  ../example/time_pool_alloc.cpp : : : $(Werr) ]
    [ compile test_poisoned_macros.cpp : $(Werr) ]

#
# The following tests test Boost.Pool's code with valgrind only if it's available:
#
    [ run test_simple_seg_storage.cpp  : : : $(use-valgrind) : test_simple_seg_storage_valgrind ]
    [ run test_pool_alloc.cpp  : : : $(use-valgrind) : test_pool_alloc_valgrind ]
    [ run pool_msvc_compiler_bug_test.cpp  : : : $(use-valgrind) : pool_msvc_compiler_bug_test_valgrind ]
    [ run test_msvc_mem_leak_detect.cpp  : : : $(use-valgrind) : test_msvc_mem_leak_detect_valgrind ]
    [ run test_bug_3349.cpp  : : : $(use-valgrind) : test_bug_3349_valgrind ]
    [ run test_bug_4960.cpp  : : : $(use-valgrind) : test_bug_4960_valgrind ]
    [ run test_bug_1252.cpp  : : : $(use-valgrind) : test_bug_1252_valgrind ]
    [ run test_bug_2696.cpp  : : : $(use-valgrind) : test_bug_2696_valgrind ]
    [ run test_bug_5526.cpp  : : : $(use-valgrind) : test_bug_5526_valgrind ]
    [ run test_threading.cpp  : : : <threading>multi <library>/boost/thread//boost_thread <toolset>gcc:<cxxflags>-Wno-attributes <toolset>gcc:<cxxflags>-Wno-missing-field-initializers $(use-valgrind) : test_threading_valgrind ]

#
# The following tests test Boost.Pool's code with valgrind if it's available, and in any case with BOOST_POOL_VALGRIND defined
# which has the effect of disabling any actual memory pooling:
#
    [ run test_simple_seg_storage.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_simple_seg_storage_valgrind_2 ]
    [ run test_pool_alloc.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_pool_alloc_valgrind_2 ]
    [ run pool_msvc_compiler_bug_test.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : pool_msvc_compiler_bug_test_valgrind_2 ]
    [ run test_msvc_mem_leak_detect.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_msvc_mem_leak_detect_valgrind_2 ]
    [ run test_bug_3349.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_bug_3349_valgrind_2 ]
    [ run test_bug_4960.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_bug_4960_valgrind_2 ]
    [ run test_bug_1252.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_bug_1252_valgrind_2 ]
    [ run test_bug_2696.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_bug_2696_valgrind_2 ]
    [ run test_bug_5526.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) : test_bug_5526_valgrind_2 ]
    [ run test_threading.cpp  : : : <threading>multi <library>/boost/thread//boost_thread <define>BOOST_POOL_VALGRIND=1 <toolset>gcc:<cxxflags>-Wno-attributes <toolset>gcc:<cxxflags>-Wno-missing-field-initializers $(use-valgrind) : test_threading_valgrind_2 ]
    [ run-fail test_valgrind_fail_1.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) ]
    [ run-fail test_valgrind_fail_2.cpp  : : : <define>BOOST_POOL_VALGRIND=1 $(use-valgrind) ]
    ;


