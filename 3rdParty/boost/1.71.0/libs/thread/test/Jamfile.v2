#  (C) Copyright William E. Kempf 2001.
#  (C) Copyright 2007 Anthony Williams.
#  (C) Copyright 2011-2012 Vicente J.Botet Escriba.
#  Distributed under the Boost Software License, Version 1.0. (See accompanying
#  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Boost.Threads test Jamfile
#
# Additional configuration variables used:
#   1. PTW32 may be used on Win32 platforms to specify that the pthreads-win32
#      library should be used instead of "native" threads. This feature is
#      mostly used for testing and it's generally recommended you use the
#      native threading libraries instead. PTW32 should be set to be a list
#      of two strings, the first specifying the installation path of the
#      pthreads-win32 library and the second specifying which library
#      variant to link against (see the pthreads-win32 documentation).
#      Example: jam -sPTW32="c:\pthreads-win32 pthreadVCE.lib"

# bring in rules for testing
import testing ;
import regex ;
import path ;
import os ;

project
    : requirements
        <threading>multi

        <define>BOOST_THREAD_THROW_IF_PRECONDITION_NOT_SATISFIED

        <warnings>all
        <toolset>gcc:<cxxflags>-Wextra
        <toolset>gcc:<cxxflags>-pedantic
        <toolset>gcc:<cxxflags>-Wno-long-long
        #<toolset>gcc:<cxxflags>-ansi
        #<toolset>gcc:<cxxflags>-fpermissive
        <toolset>gcc-4:<cxxflags>-Wno-variadic-macros
        <toolset>gcc-5:<cxxflags>-Wno-variadic-macros
        #<toolset>gcc:<cxxflags>-Wunused-local-typedefs
        <toolset>gcc:<cxxflags>-Wunused-function
        <toolset>gcc:<cxxflags>-Wno-unused-parameter

        <toolset>darwin:<cxxflags>-Wextra
        <toolset>darwin:<cxxflags>-pedantic
        <toolset>darwin:<cxxflags>-Wno-long-long
        #<toolset>darwin:<cxxflags>-ansi # doesn't work for 4.1.2
        <toolset>darwin:<cxxflags>-fpermissive
        <toolset>darwin:<cxxflags>-Wno-variadic-macros
        #<toolset>darwin:<cxxflags>-Wunused-local-typedefs
        <toolset>darwin:<cxxflags>-Wunused-function
        <toolset>darwin:<cxxflags>-Wno-unused-parameter

        #<toolset>pathscale:<cxxflags>-Wextra
        <toolset>pathscale:<cxxflags>-Wno-long-long
        <toolset>pathscale:<cxxflags>-pedantic

        <toolset>clang:<warnings>on
        <toolset>clang:<cxxflags>-Wextra
        #<toolset>clang:<cxxflags>-pedantic
        <toolset>clang:<cxxflags>-Wno-long-long
        #<toolset>clang:<cxxflags>-ansi
        #<toolset>clang:<cxxflags>-fpermissive # doesn't work
        <toolset>clang:<cxxflags>-Wunused-function
        <toolset>clang:<cxxflags>-Wno-unused-parameter

        #<toolset>gcc-mingw-4.4.0:<cxxflags>-fdiagnostics-show-option
        #<toolset>gcc-mingw-4.5.0:<cxxflags>-fdiagnostics-show-option
        #<toolset>gcc-mingw-4.6.0:<cxxflags>-fdiagnostics-show-option
        #<toolset>gcc-mingw-4.6.3:<cxxflags>-fdiagnostics-show-option
        #<toolset>gcc-mingw-4.7.0:<cxxflags>-fdiagnostics-show-option
        #<toolset>gcc-mingw-4.8.0:<cxxflags>-fdiagnostics-show-option

        <toolset>darwin-4.6.2:<cxxflags>-ansi
        #<toolset>darwin-4.6.2:<cxxflags>-Wno-delete-non-virtual-dtor # doesn't work
        <toolset>darwin-4.7.0:<cxxflags>-ansi
        <toolset>darwin-4.7.0:<cxxflags>-Wno-delete-non-virtual-dtor
        #<toolset>darwin-4.6.2:<cxxflags>-Wno-unused-local-typedefs
        #<toolset>darwin-4.7.1:<cxxflags>-Wno-unused-local-typedefs
        #<toolset>darwin-4.7.2:<cxxflags>-Wno-unused-local-typedefs
        #<toolset>darwin-4.8.0:<cxxflags>-Wno-unused-local-typedefs
        #<toolset>darwin-4.6.2x:<cxxflags>-Wno-unused-local-typedefs
        #<toolset>darwin-4.7.1x:<cxxflags>-Wno-unused-local-typedefs
        #<toolset>darwin-4.7.2x:<cxxflags>-Wno-unused-local-typedefs
        #<toolset>darwin-4.8.0x:<cxxflags>-Wno-unused-local-typedefs

        #<toolset>clang-2.8:<cxxflags>-Wno-delete-non-virtual-dtor
        #<toolset>clang-2.8:<cxxflags>-Wno-unused-function
        #<toolset>clang-2.9:<cxxflags>-Wno-delete-non-virtual-dtor
        #<toolset>clang-2.9:<cxxflags>-Wno-unused-function
        <toolset>clang-3.0:<cxxflags>-Wno-delete-non-virtual-dtor
        #<toolset>clang-3.0:<cxxflags>-Wno-unused-function
        #<toolset>clang-3.0:<cxxflags>-Wno-unused-variable
        #<toolset>clang-3.1:<cxxflags>-Wno-bind-to-temporary-copy
        #<toolset>clang-3.2:<cxxflags>-Wno-bind-to-temporary-copy

# Note: Some of the remarks from the Intel compiler are disabled
# remark #193: zero used for undefined preprocessing identifier "XXX"
# remark #304: access control not specified ("public" by default)
# remark #593: variable "XXX" was set but never used
# remark #1418: external function definition with no prior declaration
# remark #2415: variable "XXX" of static storage duration was declared but never referenced

        <toolset>intel:<cxxflags>-wd193,304,383,444
        <toolset>intel:<cxxflags>-wd593,981
        <toolset>intel:<cxxflags>-wd1418
        <toolset>intel:<cxxflags>-wd2415

        <toolset>msvc:<cxxflags>/wd4100
        <toolset>msvc:<cxxflags>/wd4512
        <toolset>msvc:<cxxflags>/wd6246
    ;

rule thread-run ( sources )
{
    sources = $(sources) winrt_init.cpp ;
    return
    [ run $(sources) ../build//boost_thread ]
    [ run $(sources) ../src/tss_null.cpp ../build//boost_thread/<link>static
        : : : : $(sources[1]:B)_lib ]
    ;
}


rule thread-test ( sources )
{
    sources = $(sources) winrt_init.cpp ;
    return
    [ run $(sources) ../build//boost_thread : : :
      <library>/boost/test//boost_unit_test_framework
    ]
    [ run $(sources) ../src/tss_null.cpp ../build//boost_thread/<link>static
        : : :
      <library>/boost/test//boost_unit_test_framework/<link>static
    : $(sources[1]:B)_lib
    ]
    ;
}

rule thread-run2 ( sources : name )
{
    sources = $(sources) winrt_init.cpp ;
    return
    [ run $(sources) ../build//boost_thread : : :
      : $(name) ]
    [ run $(sources) ../src/tss_null.cpp ../build//boost_thread/<link>static
        : : :
      : $(name)_lib ]
    ;
}

rule thread-run2-noit ( sources : name : reqs * )
{
    sources = $(sources) winrt_init.cpp ;
    return
    [ run $(sources) ../build//boost_thread : : : $(reqs)
      : $(name) ]
    [ run $(sources) ../src/tss_null.cpp ../build//boost_thread/<link>static
        : : : $(reqs)
      : $(name)_lib ]
    #[ run $(sources) ../build//boost_thread : : :
    #  <define>BOOST_THREAD_DONT_PROVIDE_INTERRUPTIONS
    #  : $(name)_noit ]
    ;
}

rule thread-run2-noit-pthread ( sources : name )
{
    sources = $(sources) winrt_init.cpp ;
    return
    [ run $(sources) ../build//boost_thread : : : <threadapi>win32:<build>no
      : $(name) ]
    [ run $(sources) ../src/tss_null.cpp ../build//boost_thread/<link>static
        : : : <threadapi>win32:<build>no
      : $(name)_lib ]
    #[ run $(sources) ../build//boost_thread : : :
    #  <define>BOOST_THREAD_DONT_PROVIDE_INTERRUPTIONS
    #  : $(name)_noit ]
    ;
}

rule thread-run2-h ( sources : name )
{
    sources = $(sources) winrt_init.cpp ;
    return
    [ run $(sources) : : :
      <define>BOOST_THREAD_DONT_PROVIDE_INTERRUPTIONS
      <define>BOOST_THREAD_VERSION=3
    : $(name)_h ]
    ;
}


rule thread-run-lib2 ( sources : name )
{
    sources = $(sources) winrt_init.cpp ;
    return
    [ run $(sources) ../src/tss_null.cpp ../build//boost_thread/<link>static
        : : :
      : $(name)_lib ]
    ;
}


rule thread-compile-fail ( sources : reqs * : name )
{
    return
    [ compile-fail $(sources)
        : $(reqs)
        : $(name) ]
    ;
}

rule clang-thread-safety ( properties * )
{
    if <toolset>clang in $(properties)
    {
        return <cxxflags>-Werror=thread-safety  <define>BOOST_THREAD_ENABLE_THREAD_SAFETY_ANALYSIS ;
    }
    else
    {
        return <build>no ;
    }
}

rule thread-safety-compile ( sources : reqs * : name )
{
    return
    [ compile $(sources)
        : $(reqs) <conditional>@clang-thread-safety
        : $(name) ]
    ;
}

rule thread-safety-compile-fail ( sources : reqs * : name )
{
    return
    [ compile-fail $(sources)
        : $(reqs) <conditional>@clang-thread-safety
        : $(name) ]
    ;
}

rule thread-compile ( sources : reqs * : name )
{
    return
    [ compile $(sources)
        : $(reqs)
        : $(name) ]
    ;
}

rule windows-cygwin-specific ( properties * )
{
    if <target-os>windows in $(properties) || <target-os>cygwin in $(properties)
    {
        return <build>yes ;
    }
    else
    {
        return <build>no ;
    }
}

rule generate_self_contained_header_tests
{
    local all_rules ;
    local file ;

    if ! [ os.environ BOOST_THREAD_TEST_WITHOUT_SELF_CONTAINED_HEADER_TESTS ]
    {
        local headers_path = [ path.make $(BOOST_ROOT)/libs/thread/include/boost/thread ] ;
        for file in [ path.glob-tree $(headers_path) : *.hpp : detail pthread win32 ]
        {
            local rel_file = [ path.relative-to $(headers_path) $(file) ] ;
            # Note: The test name starts with '~' in order to group these tests in the test report table, preferably at the end.
            #       All '/' are replaced with '-' because apparently test scripts have a problem with test names containing slashes.
            local test_name = [ regex.replace ~hdr/$(rel_file) "/" "-" ] ;
            #ECHO $(rel_file) ;
            all_rules += [ compile self_contained_header.cpp : <define>"BOOST_THREAD_TEST_HEADER=$(rel_file)" <dependency>$(file) : $(test_name) ] ;
            all_rules += [ compile self_contained_header.cpp : <define>"BOOST_THREAD_TEST_HEADER=$(rel_file)" <define>"BOOST_THREAD_TEST_POST_WINDOWS_H" <dependency>$(file) <conditional>@windows-cygwin-specific : $(test_name)-post_winh ] ;
        }
    }

    #ECHO All rules: $(all_rules) ;
    return $(all_rules) ;
}

{
    test-suite t_threads
    :
          [ thread-test test_thread.cpp ]
          [ thread-test test_thread_id.cpp ]
          [ thread-test test_hardware_concurrency.cpp ]
          [ thread-test test_physical_concurrency.cpp ]
          [ thread-test test_thread_move.cpp ]
          [ thread-test test_thread_return_local.cpp ]
          [ thread-test test_thread_move_return.cpp ]
          [ thread-test test_thread_launching.cpp ]
          [ thread-test test_thread_mf.cpp ]
          [ thread-test test_thread_exit.cpp ]
          [ thread-test test_move_function.cpp ]
          [ compile-fail no_implicit_move_from_lvalue_thread.cpp ]
          [ compile-fail no_implicit_assign_from_lvalue_thread.cpp ]
          [ thread-test test_tss.cpp ]
          [ thread-test test_xtime.cpp ]
    ;

    test-suite t_sync
    :
          [ thread-test test_mutex.cpp ]
          [ thread-test test_condition_notify_one.cpp ]
          [ thread-test test_condition_timed_wait_times_out.cpp ]
          [ thread-test test_condition_notify_all.cpp ]
          [ thread-test test_condition.cpp ]
          [ thread-test test_once.cpp ]
          [ thread-run test_barrier.cpp ]
          [ thread-run test_barrier_void_fct.cpp ]
          [ thread-run test_barrier_size_fct.cpp ]
          [ thread-test test_lock_concept.cpp ]
          [ thread-test test_generic_locks.cpp ]
          [ thread-run  test_latch.cpp ]
          [ thread-run  test_completion_latch.cpp ]
    ;

    test-suite t_shared
    :
          [ thread-test test_shared_mutex.cpp ]
          [ thread-test test_shared_mutex_part_2.cpp ]
          [ thread-test test_shared_mutex_timed_locks.cpp ]
          [ thread-test test_shared_mutex_timed_locks_chrono.cpp ]
          #uncomment the following once these works on windows
          #[ thread-test test_vhh_shared_mutex.cpp ]
          #[ thread-test test_vhh_shared_mutex_part_2.cpp ]
          #[ thread-test test_vhh_shared_mutex_timed_locks.cpp ]
    ;

    explicit t_futures_too_long ;
    test-suite t_futures_too_long
    :
          [ thread-test test_futures.cpp ]
    ;


    #explicit tickets ;
    test-suite tickets
    :
          [ thread-test test_2309.cpp ]
          [ thread-run test_2501.cpp ]
          [ thread-test test_2741.cpp ]
          [ thread-run test_3628.cpp ]
          [ thread-run test_4521.cpp ]
          [ thread-run test_4648.cpp ]
          [ thread-run test_4882.cpp ]
          [ thread-run test_5542_1.cpp ]
          [ thread-run test_5542_2.cpp ]
          [ thread-run test_5542_3.cpp ]
          [ thread-run test_5891.cpp ]
          #[ thread-run test_6130.cpp ]
          #[ thread-run test_6170.cpp ]
          [ thread-run test_6174.cpp ]
          #[ thread-run test_7160.cpp ]
          [ thread-run test_7328.cpp ]
          [ thread-run test_7571.cpp ]
          [ thread-run test_9319.cpp ]
          #[ thread-run test_9711.cpp ] This is an invalid use of ::then deferred.
          [ thread-run test_9856.cpp ]
          [ thread-compile test_10963.cpp : : test_10963_c ]
          [ thread-run test_10964.cpp ]
          [ thread-test test_11053.cpp ]
          [ thread-run test_11266.cpp ]
    ;


    explicit oth_tickets ;
    test-suite oth_tickets
    :
          [ thread-run test_5351.cpp ]
          [ thread-run test_5502.cpp ]
    ;



    #explicit ts_conditions ;
    test-suite ts_conditions
    :
          [ thread-compile-fail ./sync/conditions/condition_variable/assign_fail.cpp : : condition_variable__assign_f ]
          [ thread-compile-fail ./sync/conditions/condition_variable/copy_fail.cpp : : condition_variable__copy_f ]
          [ thread-run2-noit ./sync/conditions/condition_variable/default_pass.cpp : condition_variable__default_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable/dtor_pass.cpp : condition_variable__dtor_p ]
          [ thread-run2-noit-pthread ./sync/conditions/condition_variable/native_handle_pass.cpp : condition_variable__native_handle_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable/wait_pass.cpp : condition_variable__wait_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable/wait_for_pass.cpp : condition_variable__wait_for_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable/wait_for_pred_pass.cpp : condition_variable__wait_for_pred_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable/wait_until_pass.cpp : condition_variable__wait_until_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable/wait_until_pred_pass.cpp : condition_variable__wait_until_pred_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable/lost_notif_pass.cpp : condition_variable__lost_notif_p ]

          [ thread-compile-fail ./sync/conditions/condition_variable_any/assign_fail.cpp : : condition_variable_any__assign_f ]
          [ thread-compile-fail ./sync/conditions/condition_variable_any/copy_fail.cpp : : condition_variable_any__copy_f ]
          [ thread-run2-noit ./sync/conditions/condition_variable_any/default_pass.cpp : condition_variable_any__default_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable_any/dtor_pass.cpp : condition_variable_any__dtor_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable_any/wait_for_pass.cpp : condition_variable_any__wait_for_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable_any/wait_for_pred_pass.cpp : condition_variable_any__wait_for_pred_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable_any/wait_until_pass.cpp : condition_variable_any__wait_until_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable_any/wait_until_pred_pass.cpp : condition_variable_any__wait_until_pred_p ]
          [ thread-run2-noit ./sync/conditions/condition_variable_any/lost_notif_pass.cpp : condition_variable_any__lost_notif_p ]
          [ thread-run2-noit ./sync/conditions/cv_status/cv_status_pass.cpp : cv_status__cv_status_p ]
          [ thread-run2-noit ./sync/conditions/notify_all_at_thread_exit_pass.cpp : notify_all_at_thread_exit_p ]
    ;

    #explicit ts_async ;
    test-suite ts_async
    :
          [ thread-run2-noit ./sync/futures/async/async_pass.cpp : async__async_p ]
          [ thread-run2-noit ./sync/futures/async/async_executor_pass.cpp : async__async_executor_p ]
    ;

    #explicit ts_promise ;
    test-suite ts_promise
    :
          [ thread-compile-fail ./sync/futures/promise/copy_assign_fail.cpp : : promise__copy_assign_f ]
          [ thread-compile-fail ./sync/futures/promise/copy_ctor_fail.cpp : : promise__copy_ctor_f ]
          [ thread-run2-noit ./sync/futures/promise/alloc_ctor_pass.cpp : promise__alloc_ctor_p ]
          [ thread-run2-noit ./sync/futures/promise/default_pass.cpp : promise__default_p ]
          [ thread-run2-noit ./sync/futures/promise/dtor_pass.cpp : promise__dtor_p ]
          [ thread-run2-noit ./sync/futures/promise/get_future_pass.cpp : promise__get_future_p ]
          [ thread-run2-noit ./sync/futures/promise/move_ctor_pass.cpp : promise__move_ctor_p ]
          [ thread-run2-noit ./sync/futures/promise/move_assign_pass.cpp : promise__move_asign_p ]
          [ thread-run2-noit ./sync/futures/promise/set_exception_pass.cpp : promise__set_exception_p ]
          [ thread-run2-noit ./sync/futures/promise/set_lvalue_pass.cpp : promise__set_lvalue_p ]
          [ thread-run2-noit ./sync/futures/promise/set_rvalue_pass.cpp : promise__set_rvalue_p ]
          [ thread-run2-noit ./sync/futures/promise/set_value_const_pass.cpp : promise__set_value_const_p ]
          [ thread-run2-noit ./sync/futures/promise/set_value_void_pass.cpp : promise__set_value_void_p ]
          [ thread-run2-noit ./sync/futures/promise/emplace_pass.cpp : promise__emplace_p ]
          [ thread-run2-noit ./sync/futures/promise/use_allocator_pass.cpp : promise__use_allocator_p ]
          [ thread-run2-noit ./sync/futures/promise/set_exception_at_thread_exit_pass.cpp : promise__set_exception_at_thread_exit_p ]
          [ thread-run2-noit ./sync/futures/promise/set_lvalue_at_thread_exit_pass.cpp : promise__set_lvalue_at_thread_exit_p ]
          [ thread-run2-noit ./sync/futures/promise/set_rvalue_at_thread_exit_pass.cpp : promise__set_rvalue_at_thread_exit_p ]
          [ thread-run2-noit ./sync/futures/promise/set_value_at_thread_exit_const_pass.cpp : promise__set_value_at_thread_exit_const_p ]
          [ thread-run2-noit ./sync/futures/promise/set_value_at_thread_exit_void_pass.cpp : promise__set_value_at_thread_exit_void_p ]
    ;

    #explicit ts_make_ready_future ;
    test-suite ts_make_ready_future
    :
          [ thread-run2-noit ./sync/futures/make_ready_future_pass.cpp : make_ready_future_p ]
    ;

    #explicit ts_future ;
    test-suite ts_future
    :
          [ thread-compile-fail ./sync/futures/future/copy_assign_fail.cpp : : future__copy_assign_f ]
          [ thread-compile-fail ./sync/futures/future/copy_ctor_fail.cpp : : future__copy_ctor_f ]
          [ thread-run2-noit ./sync/futures/future/default_pass.cpp : future__default_p ]
          [ thread-run2-noit ./sync/futures/future/dtor_pass.cpp : future__dtor_p ]
          [ thread-run2-noit ./sync/futures/future/get_pass.cpp : future__get_p ]
          [ thread-run2-noit ./sync/futures/future/get_or_pass.cpp : future__get_or_p ]
          [ thread-run2-noit ./sync/futures/future/move_ctor_pass.cpp : future__move_ctor_p ]
          [ thread-run2-noit ./sync/futures/future/move_assign_pass.cpp : future__move_asign_p ]
          [ thread-run2-noit ./sync/futures/future/share_pass.cpp : future__share_p ]
          [ thread-run2-noit ./sync/futures/future/wait_pass.cpp : future__wait_p ]
          [ thread-run2-noit ./sync/futures/future/wait_for_pass.cpp : future__wait_for_p ]
          [ thread-run2-noit ./sync/futures/future/wait_until_pass.cpp : future__wait_until_p ]
          [ thread-run2-noit ./sync/futures/future/then_pass.cpp : future__then_p ]
          [ thread-run2-noit ./sync/futures/future/then_executor_pass.cpp : future__then_executor_p ]
          [ thread-run2-noit ./sync/futures/future/async_deferred_then_pass.cpp : future__async_def_then_p ]
          [ thread-run2-noit ./sync/futures/future/then_deferred_pass.cpp : future__then_def_p ]
    ;

    #explicit ts_shared_future ;
    test-suite ts_shared_future
    :
          [ thread-run2-noit ./sync/futures/shared_future/copy_assign_pass.cpp : shared_future__copy_assign_p ]
          [ thread-run2-noit ./sync/futures/shared_future/copy_ctor_pass.cpp : shared_future__copy_ctor_p ]
          [ thread-run2-noit ./sync/futures/shared_future/default_pass.cpp : shared_future__default_p ]
          [ thread-run2-noit ./sync/futures/shared_future/dtor_pass.cpp : shared_future__dtor_p ]
          [ thread-run2-noit ./sync/futures/shared_future/get_pass.cpp : shared_future__get_p ]
          [ thread-run2-noit ./sync/futures/shared_future/move_ctor_pass.cpp : shared_future__move_ctor_p ]
          [ thread-run2-noit ./sync/futures/shared_future/move_assign_pass.cpp : shared_future__move_asign_p ]
          [ thread-run2-noit ./sync/futures/shared_future/wait_pass.cpp : shared_future__wait_p ]
          [ thread-run2-noit ./sync/futures/shared_future/wait_for_pass.cpp : shared_future__wait_for_p ]
          [ thread-run2-noit ./sync/futures/shared_future/wait_until_pass.cpp : shared_future__wait_until_p ]
          [ thread-run2-noit ./sync/futures/shared_future/then_pass.cpp : shared_future__then_p ]
          [ thread-run2-noit ./sync/futures/shared_future/then_executor_pass.cpp : shared_future__then_executor_p ]
    ;

    #explicit ts_packaged_task ;
    test-suite ts_packaged_task
    :
          [ thread-run2-noit ./sync/futures/packaged_task/alloc_ctor_pass.cpp : packaged_task__alloc_ctor_p ]
          [ thread-compile-fail ./sync/futures/packaged_task/copy_assign_fail.cpp : : packaged_task__copy_assign_f ]
          [ thread-compile-fail ./sync/futures/packaged_task/copy_ctor_fail.cpp : : packaged_task__copy_ctor_f ]
          [ thread-run2-noit ./sync/futures/packaged_task/default_ctor_pass.cpp : packaged_task__default_ctor_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/func_ctor_pass.cpp : packaged_task__func_ctor_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/dtor_pass.cpp : packaged_task__dtor_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/get_future_pass.cpp : packaged_task__get_future_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/move_ctor_pass.cpp : packaged_task__move_ctor_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/move_assign_pass.cpp : packaged_task__move_asign_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/operator_pass.cpp : packaged_task__operator_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/reset_pass.cpp : packaged_task__reset_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/use_allocator_pass.cpp : packaged_task__use_allocator_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/types_pass.cpp : packaged_task__types_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/member_swap_pass.cpp : packaged_task__member_swap_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/non_member_swap_pass.cpp : packaged_task__non_member_swap_p ]
          [ thread-run2-noit ./sync/futures/packaged_task/make_ready_at_thread_exit_pass.cpp : packaged_task__make_ready_at_thread_exit_p ]
    ;


    #explicit ts_when_all ;
    test-suite ts_when_all
    :
          [ thread-run2-noit ./sync/futures/when_all/none_pass.cpp : when_all__none_p ]
          [ thread-run2-noit ./sync/futures/when_all/one_pass.cpp : when_all__one_p ]
          [ thread-run2-noit ./sync/futures/when_all/iterators_pass.cpp : when_all__iterators_p ]
          [ thread-run2-noit ./sync/futures/when_all/variadic_pass.cpp : when_all__variadic_p ]
    ;

    #explicit ts_when_any ;
    test-suite ts_when_any
    :
          [ thread-run2-noit ./sync/futures/when_any/none_pass.cpp : when_any__none_p ]
          [ thread-run2-noit ./sync/futures/when_any/one_pass.cpp : when_any__one_p ]
          [ thread-run2-noit ./sync/futures/when_any/iterators_pass.cpp : when_any__iterators_p ]
          [ thread-run2-noit ./sync/futures/when_any/variadic_pass.cpp : when_any__variadic_p ]
    ;

    #explicit ts_lock_guard ;
    test-suite ts_lock_guard
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/lock_guard/copy_assign_fail.cpp : : lock_guard__cons__copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/lock_guard/copy_ctor_fail.cpp : : lock_guard__cons__copy_ctor_f ]
          [ thread-safety-compile ./sync/mutual_exclusion/locks/lock_guard/lock_guard_compile_pass.cpp : : lock_guard__lock_compile_p ]
          [ thread-safety-compile-fail ./sync/mutual_exclusion/locks/lock_guard/lock_guard_compile_fail.cpp : : lock_guard__lock_compile_f ]
          [ thread-safety-compile ./sync/mutual_exclusion/locks/lock_guard/lock_guard_adopt_lock_compile_pass.cpp : : lock_guard__adopt_lock_compile_p ]
          [ thread-safety-compile-fail ./sync/mutual_exclusion/locks/lock_guard/lock_guard_adopt_lock_compile_fail.cpp : : lock_guard__adopt_lock_compile_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/lock_guard/adopt_lock_pass.cpp : lock_guard__cons__adopt_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/lock_guard/default_pass.cpp : lock_guard__cons__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/lock_guard/types_pass.cpp : lock_guard__types_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/lock_guard/make_lock_guard_pass.cpp : make_lock_guard_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/lock_guard/make_lock_guard_adopt_lock_pass.cpp : make_lock_guard__adopt_lock_p ]
    ;

    #explicit ts_unique_lock ;
    test-suite ts_unique_lock
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/unique_lock/cons/copy_assign_fail.cpp : : unique_lock__cons__copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/unique_lock/cons/copy_ctor_fail.cpp : : unique_lock__cons__copy_ctor_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/adopt_lock_pass.cpp : unique_lock__cons__adopt_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/default_pass.cpp : unique_lock__cons__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/defer_lock_pass.cpp : unique_lock__cons__defer_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/duration_pass.cpp : unique_lock__cons__duration_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_assign_pass.cpp : unique_lock__cons__move_assign_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_pass.cpp : unique_lock__cons__move_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_upgrade_lock_pass.cpp : uq_lk_cons_mv_c_upg_lk_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_upgrade_lock_try_pass.cpp : uq_lk_cons_mv_c_upg_lk_t_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_upgrade_lock_for_pass.cpp : uq_lk_cons_mv_c_upg_lk_f_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_upgrade_lock_until_pass.cpp : uq_lk_cons_mv_c_upg_lk_u_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/mutex_pass.cpp : unique_lock__cons__mutex_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/time_point_pass.cpp : unique_lock__cons__time_point_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/try_to_lock_pass.cpp : unique_lock__cons__try_to_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/locking/lock_pass.cpp : unique_lock__lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/locking/try_lock_for_pass.cpp : unique_lock__try_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/locking/try_lock_pass.cpp : unique_lock__try_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/locking/try_lock_until_pass.cpp : unique_lock__try_lock_until_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/locking/unlock_pass.cpp : unique_lock__unlock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/mod/member_swap_pass.cpp : unique_lock__member_swap_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/mod/non_member_swap_pass.cpp : unique_lock__non_member_swap_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/mod/release_pass.cpp : unique_lock__release_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/obs/mutex_pass.cpp : unique_lock__mutex_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/obs/op_bool_pass.cpp : unique_lock__op_bool_p ]
          #[ thread-compile-fail ./sync/mutual_exclusion/locks/unique_lock/obs/op_int_fail.cpp : : unique_lock__op_int_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/obs/owns_lock_pass.cpp : unique_lock__owns_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/types_pass.cpp : unique_lock__types_p ]


    ;

    #explicit ts_make_unique_lock ;
    test-suite ts_make_unique_lock
    :
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/make_unique_lock_mutex_pass.cpp : make_unique_lock__mutex_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/make_unique_lock_adopt_lock_pass.cpp : make_unique_lock__adopt_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/make_unique_lock_defer_lock_pass.cpp : make_unique_lock__defer_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/make_unique_lock_try_to_lock_pass.cpp : make_unique_lock__try_to_lock_p ]

          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/make_unique_locks_mutex_pass.cpp : make_unique_locks__mutex_p ]

    ;

    #explicit ts_shared_lock ;
    test-suite ts_shared_lock
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/shared_lock/cons/copy_assign_fail.cpp : : shared_lock__cons__copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/shared_lock/cons/copy_ctor_fail.cpp : : shared_lock__cons__copy_ctor_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/adopt_lock_pass.cpp : shared_lock__cons__adopt_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/default_pass.cpp : shared_lock__cons__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/defer_lock_pass.cpp : shared_lock__cons__defer_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/duration_pass.cpp : shared_lock__cons__duration_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/move_assign_pass.cpp : shared_lock__cons__move_assign_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/move_ctor_pass.cpp : shared_lock__cons__move_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/move_ctor_unique_lock_pass.cpp : sh_lock_cons_move_ctor_unq_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/move_ctor_upgrade_lock_pass.cpp : sh_lock_cons_move_ctor_upg_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/mutex_pass.cpp : shared_lock__cons__mutex_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/time_point_pass.cpp : shared_lock__cons__time_point_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/cons/try_to_lock_pass.cpp : shared_lock__cons__try_to_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/locking/lock_pass.cpp : shared_lock__lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/locking/try_lock_for_pass.cpp : shared_lock__try_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/locking/try_lock_pass.cpp : shared_lock__try_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/locking/try_lock_until_pass.cpp : shared_lock__try_lock_until_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/locking/unlock_pass.cpp : shared_lock__unlock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/mod/member_swap_pass.cpp : shared_lock__member_swap_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/mod/non_member_swap_pass.cpp : shared_lock__non_member_swap_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/mod/release_pass.cpp : shared_lock__release_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/obs/mutex_pass.cpp : shared_lock__mutex_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/obs/op_bool_pass.cpp : shared_lock__op_bool_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/obs/owns_lock_pass.cpp : shared_lock__owns_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock/types_pass.cpp : shared_lock__types_p ]

          #[ thread-run2-h ./sync/mutual_exclusion/locks/shared_lock/cons/default_pass.cpp : shared_lock__cons__default_p ]
          #[ thread-run2-h ./sync/mutual_exclusion/locks/shared_lock/cons/defer_lock_pass.cpp : shared_lock__cons__defer_lock_p ]

    ;

    #explicit ts_upgrade_lock ;
    test-suite ts_upgrade_lock
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/upgrade_lock/cons/copy_assign_fail.cpp : : upgrade_lock__cons__copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/upgrade_lock/cons/copy_ctor_fail.cpp : : upgrade_lock__cons__copy_ctor_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/adopt_lock_pass.cpp : upgrade_lock__cons__adopt_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/default_pass.cpp : upgrade_lock__cons__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/defer_lock_pass.cpp : upgrade_lock__cons__defer_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/duration_pass.cpp : upgrade_lock__cons__duration_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/move_assign_pass.cpp : upgrade_lock__cons__move_assign_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/move_ctor_pass.cpp : upgrade_lock__cons__move_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/move_ctor_unique_lock_pass.cpp : upg_lock_cons_mv_ctor_uq_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/mutex_pass.cpp : upgrade_lock__cons__mutex_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/time_point_pass.cpp : upgrade_lock__cons__time_point_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/try_to_lock_pass.cpp : upgrade_lock__cons__try_to_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/locking/lock_pass.cpp : upgrade_lock__lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/locking/try_lock_for_pass.cpp : upgrade_lock__try_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/locking/try_lock_pass.cpp : upgrade_lock__try_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/locking/try_lock_until_pass.cpp : upgrade_lock__try_lock_until_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/locking/unlock_pass.cpp : upgrade_lock__unlock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/mod/member_swap_pass.cpp : upgrade_lock__member_swap_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/mod/non_member_swap_pass.cpp : upgrade_lock__non_member_swap_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/mod/release_pass.cpp : upgrade_lock__release_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/obs/mutex_pass.cpp : upgrade_lock__mutex_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/obs/op_bool_pass.cpp : upgrade_lock__op_bool_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/obs/owns_lock_pass.cpp : upgrade_lock__owns_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/types_pass.cpp : upgrade_lock__types_p ]
    ;

    #explicit ts_strict_lock ;
    test-suite ts_strict_lock
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/strict_lock/copy_assign_fail.cpp : : strict_lock__cons__copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/strict_lock/copy_ctor_fail.cpp : : strict_lock__cons__copy_ctor_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/strict_lock/default_pass.cpp : strict_lock__cons__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/strict_lock/owns_lock_pass.cpp : strict_lock__owns_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/strict_lock/types_pass.cpp : strict_lock__types_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/strict_lock/make_strict_lock_pass.cpp : make_strict_lock_p ]
    ;

    #explicit ts_nested_strict_lock ;
    test-suite ts_nested_strict_lock
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/nested_strict_lock/copy_assign_fail.cpp : : nested_strict_lock_cons_copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/nested_strict_lock/copy_ctor_fail.cpp : : nested_strict_lock_cons_copy_ctor_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/nested_strict_lock/default_pass.cpp : nested_strict_lock__cons__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/nested_strict_lock/owns_lock_pass.cpp : nested_strict_lock__owns_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/nested_strict_lock/types_pass.cpp : nested_strict_lock__types_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/nested_strict_lock/make_nested_strict_lock_pass.cpp : make_nested_strict_lock_p ]
    ;


    #explicit ts_once ;
    test-suite ts_once
    :
          #[ thread-compile-fail ./sync/mutual_exclusion/once/once_flag/assign_fail.cpp : : once_flag__assign_f ]
          #[ thread-compile-fail ./sync/mutual_exclusion/once/once_flag/copy_fail.cpp : : once_flag__copy_f ]
          #[ thread-run2-noit ./sync/mutual_exclusion/once/once_flag/default_pass.cpp : once_flag__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/once/call_once/call_once_pass.cpp : call_once_p ]
    ;

    #explicit ts_mutex ;
    test-suite ts_mutex
    :
          [ thread-compile-fail ./sync/mutual_exclusion/mutex/assign_fail.cpp : : mutex__assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/mutex/copy_fail.cpp : : mutex__copy_f ]
          [ thread-safety-compile ./sync/mutual_exclusion/mutex/lock_compile_pass.cpp : : mutex__lock_compile_p ]
          [ thread-safety-compile-fail ./sync/mutual_exclusion/mutex/lock_compile_fail.cpp : : mutex__lock_compile_f ]
          # https://bugs.llvm.org/show_bug.cgi?id=32954
          # http://clang-developers.42468.n3.nabble.com/thread-safety-warnings-specifically-try-acquire-capability-td4059337.html
          #[ thread-safety-compile ./sync/mutual_exclusion/mutex/try_lock_compile_pass.cpp : : mutex__try_lock_compile_p ]
          [ thread-safety-compile-fail ./sync/mutual_exclusion/mutex/try_lock_compile_fail.cpp : : mutex__try_lock_compile_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/mutex/default_pass.cpp : mutex__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/mutex/lock_pass.cpp : mutex__lock_p ]
          [ thread-run2-noit-pthread ./sync/mutual_exclusion/mutex/native_handle_pass.cpp : mutex__native_handle_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/mutex/try_lock_pass.cpp : mutex__try_lock_p ]
    ;

    #explicit ts_recursive_mutex ;
    test-suite ts_recursive_mutex
    :
          [ thread-compile-fail ./sync/mutual_exclusion/recursive_mutex/assign_fail.cpp : : recursive_mutex__assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/recursive_mutex/copy_fail.cpp : : recursive_mutex__copy_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_mutex/default_pass.cpp : recursive_mutex__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_mutex/lock_pass.cpp : recursive_mutex__lock_p ]
          [ thread-run2-noit-pthread ./sync/mutual_exclusion/recursive_mutex/native_handle_pass.cpp : recursive_mutex__native_handle_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_mutex/try_lock_pass.cpp : recursive_mutex__try_lock_p ]
    ;

    #explicit ts_recursive_timed_mutex ;
    test-suite ts_recursive_timed_mutex
    :
          [ thread-compile-fail ./sync/mutual_exclusion/recursive_timed_mutex/assign_fail.cpp : : recursive_timed_mutex__assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/recursive_timed_mutex/copy_fail.cpp : : recursive_timed_mutex__copy_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_timed_mutex/default_pass.cpp : recursive_timed_mutex__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_timed_mutex/lock_pass.cpp : recursive_timed_mutex__lock_p ]
          [ thread-run2-noit-pthread ./sync/mutual_exclusion/recursive_timed_mutex/native_handle_pass.cpp : rec_timed_mutex_native_handle_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_timed_mutex/try_lock_for_pass.cpp : rec_timed_mutex_try_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_timed_mutex/try_lock_pass.cpp : recursive_timed_mutex__try_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/recursive_timed_mutex/try_lock_until_pass.cpp : rec_timed_mutex_try_lock_until_p ]
    ;

    #explicit ts_timed_mutex ;
    test-suite ts_timed_mutex
    :
          [ thread-compile-fail ./sync/mutual_exclusion/timed_mutex/assign_fail.cpp : : timed_mutex__assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/timed_mutex/copy_fail.cpp : : timed_mutex__copy_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/timed_mutex/default_pass.cpp : timed_mutex__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/timed_mutex/lock_pass.cpp : timed_mutex__lock_p ]
          [ thread-run2-noit-pthread ./sync/mutual_exclusion/timed_mutex/native_handle_pass.cpp : timed_mutex__native_handle_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/timed_mutex/try_lock_for_pass.cpp : timed_mutex__try_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/timed_mutex/try_lock_pass.cpp : timed_mutex__try_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/timed_mutex/try_lock_until_pass.cpp : timed_mutex__try_lock_until_p ]
    ;

    #explicit ts_shared_mutex ;
    test-suite ts_shared_mutex
    :
          [ thread-compile-fail ./sync/mutual_exclusion/shared_mutex/assign_fail.cpp : : shared_mutex__assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/shared_mutex/copy_fail.cpp : : shared_mutex__copy_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/shared_mutex/default_pass.cpp : shared_mutex__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/shared_mutex/lock_pass.cpp : shared_mutex__lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/shared_mutex/try_lock_for_pass.cpp : shared_mutex__try_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/shared_mutex/try_lock_pass.cpp : shared_mutex__try_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/shared_mutex/try_lock_until_pass.cpp : shared_mutex__try_lock_until_p ]

          #[ thread-run2-h ./sync/mutual_exclusion/shared_mutex/default_pass.cpp : shared_mutex__default_p ]
    ;

    #explicit ts_null_mutex ;
    test-suite ts_null_mutex
    :
          [ thread-compile-fail ./sync/mutual_exclusion/null_mutex/assign_fail.cpp : : null_mutex__assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/null_mutex/copy_fail.cpp : : null_mutex__copy_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/null_mutex/default_pass.cpp : null_mutex__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/null_mutex/lock_pass.cpp : null_mutex__lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/null_mutex/try_lock_for_pass.cpp : null_mutex__try_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/null_mutex/try_lock_pass.cpp : null_mutex__try_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/null_mutex/try_lock_until_pass.cpp : null_mutex__try_lock_until_p ]
    ;

    test-suite ts_sync_queue
    :
          [ thread-run2-noit ./sync/mutual_exclusion/sync_queue/single_thread_pass.cpp : sync_queue__single_thread_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/sync_queue/multi_thread_pass.cpp : sync_queue__multi_thread_p ]
    ;

    test-suite ts_sync_deque
    :
          [ thread-run2-noit ./sync/mutual_exclusion/sync_deque/single_thread_pass.cpp : sync_deque__single_thread_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/sync_deque/multi_thread_pass.cpp : sync_deque__multi_thread_p ]
    ;

    test-suite ts_sync_bounded_queue
    :
          [ thread-run2-noit ./sync/mutual_exclusion/sync_bounded_queue/single_thread_pass.cpp : sync_bounded_q_single_thread_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/sync_bounded_queue/multi_thread_pass.cpp : sync_bounded_q_multi_thread_p ]
    ;

    test-suite ts_sync_pq
    :
          [ thread-run2-noit ./sync/mutual_exclusion/sync_pq/pq_single_thread_pass.cpp : sync_pq_single_thread_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/sync_pq/pq_multi_thread_pass.cpp : sync_pq_multi_thread_p ]
    ;

    test-suite ts_sync_tq
    :
          [ thread-run2-noit ./sync/mutual_exclusion/sync_pq/tq_single_thread_pass.cpp : sync_tq_single_thread_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/sync_pq/tq_multi_thread_pass.cpp : sync_tq_multi_thread_p ]
    ;

    test-suite ts_scheduler
    :
          [ thread-run2-noit ./test_scheduled_tp.cpp : test_scheduled_tp_p ]
          [ thread-run2-noit ./test_scheduling_adaptor.cpp : test_scheduling_adaptor_p ]
          [ thread-run2-noit ./test_scheduler.cpp : test_scheduler_p ]
    ;

    test-suite ts_queue_views
    :
          [ thread-run2-noit ./sync/mutual_exclusion/queue_views/single_thread_pass.cpp : queue_views__single_thread_p ]
          #[ thread-run2-noit ./sync/mutual_exclusion/queue_views/multi_thread_pass.cpp : queue_views__multi_thread_p ]
    ;

    test-suite ts_deque_views
    :
          [ thread-run2-noit ./sync/mutual_exclusion/deque_views/single_thread_pass.cpp : deque_views__single_thread_p ]
          #[ thread-run2-noit ./sync/mutual_exclusion/deque_views/multi_thread_pass.cpp : deque_views__multi_thread_p ]
    ;

    #explicit ts_this_thread ;
    test-suite ts_this_thread
    :
          [ thread-run2-noit ./threads/this_thread/get_id/get_id_pass.cpp : this_thread__get_id_p ]
          [ thread-run2-noit ./threads/this_thread/sleep_for/sleep_for_pass.cpp : this_thread__sleep_for_p ]
          [ thread-run2-noit ./threads/this_thread/sleep_until/sleep_until_pass.cpp : this_thread__sleep_until_p ]
    ;

    #explicit ts_thread ;
    test-suite ts_thread
    :
          [ thread-compile-fail ./threads/thread/assign/copy_fail.cpp : : thread__assign__copy_f ]
          [ thread-run2-noit ./threads/thread/assign/move_pass.cpp : thread__assign__move_p ]
          [ thread-compile-fail ./threads/thread/constr/copy_fail.cpp : : thread__constr__copy_f ]
          [ thread-run2-noit ./threads/thread/constr/default_pass.cpp : thread__constr__default_p ]
          [ thread-run-lib2 ./threads/thread/constr/lambda_pass.cpp : thread__constr__lambda_p ]
          [ thread-run-lib2 ./threads/thread/constr/F_pass.cpp : thread__constr__F_p ]
          [ thread-run-lib2 ./threads/thread/constr/FArgs_pass.cpp : thread__constr__FArgs_p ]
          [ thread-run2-noit ./threads/thread/constr/Frvalue_pass.cpp : thread__constr__Frvalue_p ]
          [ thread-run2-noit ./threads/thread/constr/FrvalueArgs_pass.cpp : thread__constr__FrvalueArgs_p ]
          [ thread-run2-noit ./threads/thread/constr/move_pass.cpp : thread__constr__move_p ]
          [ thread-run2-noit ./threads/thread/destr/dtor_pass.cpp : thread__destr__dtor_p ]
          [ thread-run2-noit ./threads/thread/id/hash_pass.cpp : thread__id__hash_p ]
          [ thread-run2-noit ./threads/thread/members/detach_pass.cpp : thread__detach_p ]
          [ thread-run2-noit ./threads/thread/members/get_id_pass.cpp : thread__get_id_p ]
          [ thread-run2-noit ./threads/thread/members/join_pass.cpp : thread__join_p ]
          [ thread-run2-noit ./threads/thread/members/try_join_until_pass.cpp : thread__join_until_p ]
          [ thread-run2-noit ./threads/thread/members/try_join_for_pass.cpp : thread__join_for_p ]
          [ thread-run2-noit ./threads/thread/members/joinable_pass.cpp : thread__joinable_p ]
          [ thread-run2-noit ./threads/thread/members/native_handle_pass.cpp : thread__native_handle_p ]
          [ thread-run2-noit ./threads/thread/members/swap_pass.cpp : thread__swap_p ]
          [ thread-run2-noit ./threads/thread/non_members/swap_pass.cpp : swap_threads_p ]
          [ thread-run2-noit ./threads/thread/static/hardware_concurrency_pass.cpp : thread__hardware_concurrency_p ]
    ;

    #explicit ts_container ;
    test-suite ts_container
    :
          [ thread-run2-noit ./threads/container/thread_vector_pass.cpp : container__thread_vector_p ]
          [ thread-run2-noit ./threads/container/thread_ptr_list_pass.cpp : container__thread_ptr_list_p ]
    ;

    explicit ts_examples_too_long ;
    test-suite ts_examples_too_long
    :
          [ thread-run2 ../example/shared_mutex.cpp : ex_shared_mutex ]
    ;

    #explicit ts_examples ;
    test-suite ts_examples
    :
          [ thread-run2-noit ../example/monitor.cpp : ex_monitor ]
          [ thread-compile ../example/starvephil.cpp : : ex_starvephil ]
          [ thread-run2 ../example/tennis.cpp : ex_tennis ]
          [ thread-compile ../example/condition.cpp : : ex_condition ]
          [ thread-run2-noit ../example/mutex.cpp : ex_mutex ]
          [ thread-run2-noit ../example/once.cpp : ex_once ]
          [ thread-run2-noit ../example/recursive_mutex.cpp : ex_recursive_mutex ]
          [ thread-run2-noit ../example/thread.cpp : ex_thread ]
          [ thread-run2-noit ../example/thread_group.cpp : ex_thread_group ]
          [ thread-run2-noit ../example/tss.cpp : ex_tss ]
          [ thread-run2 ../example/xtime.cpp : ex_xtime ]
          [ thread-run2 ../example/shared_monitor.cpp : ex_shared_monitor ]
          #[ thread-run ../example/vhh_shared_monitor.cpp ]
          #[ thread-run ../example/vhh_shared_mutex.cpp ]
          [ thread-run2 ../example/make_future.cpp : ex_make_future ]
          [ thread-run2 ../example/future_then.cpp : ex_future_then ]
          [ thread-run2 ../example/future_fallback_to.cpp : ex_future_fallback_to ]
          [ thread-run2 ../example/future_unwrap.cpp : ex_future_unwrap ]
          [ thread-run2-noit ../example/synchronized_value.cpp : ex_synchronized_value ]
          [ thread-run2-noit ../example/synchronized_person.cpp : ex_synchronized_person ]
          [ thread-run2-noit ../example/thread_guard.cpp : ex_thread_guard ]
          [ thread-run2-noit ../example/std_thread_guard.cpp : ex_std_thread_guard : <toolset>gcc-4.8:<build>no ]
          [ thread-run2-noit ../example/scoped_thread.cpp : ex_scoped_thread ]
          [ thread-run2-noit ../example/std_scoped_thread.cpp : ex_std_scoped_thread : <toolset>gcc-4.8:<build>no ]
          [ thread-run2-noit ../example/strict_lock.cpp : ex_strict_lock ]
          [ thread-run2-noit ../example/ba_externallly_locked.cpp : ex_ba_externallly_locked ]
          [ thread-run2 ../example/producer_consumer_bounded.cpp : ex_producer_consumer_bounded ]
          [ thread-run2 ../example/producer_consumer.cpp : ex_producer_consumer ]
          [ thread-run2 ../example/producer_consumer2.cpp : ex_producer_consumer2 ]
          [ thread-run2 ../example/not_interleaved.cpp : ex_not_interleaved ]
          [ thread-run2 ../example/lambda_future.cpp : ex_lambda_future ]
          [ thread-run2 ../example/not_interleaved2.cpp : ex_not_interleaved2 ]
          [ thread-run2 ../example/thread_pool.cpp : ex_thread_pool ]
          [ thread-run2 ../example/user_scheduler.cpp : ex_user_scheduler ]
          [ thread-run2 ../example/executor.cpp : ex_executor ]
          [ thread-run2 ../example/generic_executor_ref.cpp : ex_generic_executor_ref ]
          [ thread-run2 ../example/serial_executor.cpp : ex_serial_executor ]
          #[ thread-run2 ../example/serial_executor_cont.cpp : ex_serial_executor_cont ]
          [ thread-run2 ../example/future_when_all.cpp : ex_future_when_all ]
          [ thread-run2 ../example/parallel_accumulate.cpp : ex_parallel_accumulate ]
          [ thread-run2 ../example/parallel_quick_sort.cpp : ex_parallel_quick_sort ]
          [ thread-run2 ../example/with_lock_guard.cpp : ex_with_lock_guard ]
          [ thread-run2 ../example/fib_task_region.cpp : ex_fib_task_region ]
    ;

    #explicit ts_shared_upwards ;
    test-suite ts_shared_upwards
    :
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_shared_lock_try_pass.cpp : uq_lock_cons_mv_ctor_sh_lock_try_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_shared_lock_for_pass.cpp : uq_lock_cons_mv_ctor_sh_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/unique_lock/cons/move_ctor_shared_lock_until_pass.cpp : uq_lock_cons_mv_ctor_sh_lock_until_p ]

          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/move_ctor_shared_lock_try_pass.cpp : upg_lock_cons_move_ctor_sh_lock_try_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/move_ctor_shared_lock_for_pass.cpp : upg_lock_cons_move_ctor_sh_lock_for_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/upgrade_lock/cons/move_ctor_shared_lock_until_pass.cpp : upg_lock_cons_move_ctor_sh_lock_untl_p ]
    ;


    #explicit ts_shared_lock_guard ;
    test-suite ts_shared_lock_guard
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/shared_lock_guard/copy_assign_fail.cpp : : shared_lock_guard__cons__copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/shared_lock_guard/copy_ctor_fail.cpp : : shared_lock_guard__cons__copy_ctor_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock_guard/adopt_lock_pass.cpp : shared_lock_guard__cons__adopt_lock_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock_guard/default_pass.cpp : shared_lock_guard__cons__default_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/shared_lock_guard/types_pass.cpp : shared_lock_guard__types_p ]
    ;

    #explicit ts_reverse_lock ;
    test-suite ts_reverse_lock
    :
          [ thread-compile-fail ./sync/mutual_exclusion/locks/reverse_lock/copy_assign_fail.cpp : : reverse_lock__copy_assign_f ]
          [ thread-compile-fail ./sync/mutual_exclusion/locks/reverse_lock/copy_ctor_fail.cpp : : reverse_lock__copy_ctor_f ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/reverse_lock/unique_lock_ctor_pass.cpp : reverse_lock__unique_lock_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/locks/reverse_lock/types_pass.cpp : reverse_lock__types_p ]
    ;


    #explicit ts_synchronized_value ;
    test-suite ts_synchronized_value
    :
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/copy_assign_pass.cpp : synchronized_value__copy_assign_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/copy_ctor_pass.cpp : synchronized_value__copy_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/copy_T_assign_pass.cpp : synchronized_value__copy_T_assign_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/copy_T_ctor_pass.cpp : synchronized_value__copy_T_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/default_ctor_pass.cpp : synchronized_value__default_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/indirect_pass.cpp : synchronized_value__indirect_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/move_assign_pass.cpp : synchronized_value__move_assign_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/move_ctor_pass.cpp : synchronized_value__move_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/move_T_assign_pass.cpp : synchronized_value__move_T_assign_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/move_T_ctor_pass.cpp : synchronized_value__move_T_ctor_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/swap_pass.cpp : synchronized_value__swap_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/swap_T_pass.cpp : synchronized_value__swap_T_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/synchronize_pass.cpp : synchronized_value__synchronize_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/synchronized_value/call_pass.cpp : synchronized_value__call_p ]

    ;


    test-suite ts_with_lock_guard
    :
          [ thread-run2-noit ./sync/mutual_exclusion/with_lock_guard/with_lock_guard_simple.cpp : with_lock_guard_simple_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/with_lock_guard/with_lock_guard_bind.cpp : with_lock_guard_bind_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/with_lock_guard/with_lock_guard_move.cpp : with_lock_guard_move_p ]
          [ thread-run2-noit ./sync/mutual_exclusion/with_lock_guard/with_lock_guard_lambda.cpp : with_lock_guard_lambda_p ]
    ;

    explicit ts_invoke ;
    test-suite ts_invoke
    :
          [ thread-run2-noit ./functional/invoke/invoke_int_0_pass.cpp : invoke_int_0_p ]
          [ thread-run2-noit ./functional/invoke/invoke_lvalue_pass.cpp : invoke_lvalue_p ]
          [ thread-run2-noit ./functional/invoke/invoke_rvalue_pass.cpp : invoke_rvalue_p ]
    ;

    explicit ts_invoker ;
    test-suite ts_invoker
    :
          [ thread-run2-noit ./functional/invoker/invoker_int_0_pass.cpp : invoker_int_0_p ]
          [ thread-run2-noit ./functional/invoker/invoker_lvalue_pass.cpp : invoker_lvalue_p ]
          [ thread-run2-noit ./functional/invoker/invoker_rvalue_pass.cpp : invoker_rvalue_p ]
    ;



    explicit ts_more ;
    test-suite ts_more
    :
          [ thread-run test_7666.cpp ]
          [ thread-run test_7720.cpp ]
          [ thread-run test_7755.cpp ]
          [ thread-run test_8455.cpp ]
          [ thread-run test_8508.cpp ]
          #[ thread-run test_8557.cpp ]
          [ thread-run test_8586.cpp ]
          [ thread-run test_8943.cpp ]
          [ thread-run test_8960.cpp ]
          [ thread-run test_9079_a.cpp ]
          [ thread-run test_9079_b.cpp ]
          [ thread-run test_9192.cpp ]
          #[ thread-run test_9303.cpp ]
          #[ thread-run test_9720.cpp ]
          #[ thread-run test_10125.cpp ]
          #[ thread-run test_10128.cpp ]
          #[ thread-run test_10340.cpp ]
    ;
    
    explicit ts_more_cpp11 ;
    test-suite ts_more_cpp11
    :
          [ thread-run test_8596.cpp ]
          [ thread-run test_8600.cpp ]
    ;

    explicit perf ;
    test-suite perf
    :
          #[ thread-run ../example/perf_condition_variable.cpp ]
          #[ thread-run ../example/perf_shared_mutex.cpp ]
    ;


    #explicit ts_exception_list ;
    test-suite ts_exception_list
    :
          [ thread-run2-noit ./experimental/parallel/v1/exception_list_pass.cpp : exception_list_p ]
    ;
    
    #explicit ts_task_region ;
    test-suite ts_task_region
    :
          [ thread-run2-noit ./experimental/parallel/v2/task_region_pass.cpp : task_region_p ]
    ;
    
    explicit ts_other ;
    test-suite ts_other
    :
          [ thread-run2 ../example/this_executor.cpp : ex_this_executor ]
          [ thread-run2 ../example/default_executor.cpp : ex_default_executor ]
    ;

    explicit ts_ ;
    test-suite ts_
    :
          #[ thread-run test_11256.cpp ] 
          #[ thread-run test_11256.cpp ]
          #[ thread-run test_11499.cpp ]
          #[ thread-run test_11611.cpp ]
          #[ thread-run test_11818.cpp ]
          #[ thread-run test_11796.cpp ]
          #[ thread-run test_12293.cpp ]
          #[ thread-run test_12949.cpp ]
          #[ thread-run test_13480b.cpp ]
          [ thread-run test_13561.cpp ]
          
    ;

    explicit test_time_jumps_1_obj ;
    obj test_time_jumps_1_obj : test_time_jumps.cpp :
        # BOOST_THREAD_USES_MOVE is required to prevent ambiguity between the two definitions
        # of boost::move when using sync_priority_queue/sync_timed_queue with POD data types.
        <define>BOOST_THREAD_USES_MOVE
        <define>BOOST_THREAD_PROVIDES_FUTURE
    ;

    explicit test_time_jumps_2_obj ;
    obj test_time_jumps_2_obj : test_time_jumps.cpp :
        # BOOST_THREAD_USES_MOVE is required to prevent ambiguity between the two definitions
        # of boost::move when using sync_priority_queue/sync_timed_queue with POD data types.
        <define>BOOST_THREAD_USES_MOVE
        <define>BOOST_THREAD_PROVIDES_FUTURE
        <define>BOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS
    ;

    explicit test_time_jumps_3_obj ;
    obj test_time_jumps_3_obj : test_time_jumps.cpp :
        # BOOST_THREAD_USES_MOVE is required to prevent ambiguity between the two definitions
        # of boost::move when using sync_priority_queue/sync_timed_queue with POD data types.
        <define>BOOST_THREAD_USES_MOVE
        <define>BOOST_THREAD_PROVIDES_FUTURE
        <define>BOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS
        <define>BOOST_THREAD_V2_SHARED_MUTEX
    ;

    explicit test_time_jumps ;
    test-suite test_time_jumps
    :
          [ exe test_time_jumps_1 : test_time_jumps_1_obj ../build//boost_thread ]
          [ exe test_time_jumps_2 : test_time_jumps_2_obj ../build//boost_thread ]
          [ exe test_time_jumps_3 : test_time_jumps_3_obj ../build//boost_thread ]
    ;

    test-suite test_self_contained_headers : [ generate_self_contained_header_tests ] ;
}
