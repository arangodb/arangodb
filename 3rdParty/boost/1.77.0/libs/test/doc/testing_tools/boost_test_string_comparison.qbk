[/
 / Copyright (c) 2015 Boost development team
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]


[section:strings Strings and C-strings comparison]
In the general case, pointers are compared using their value. However when type of the the pointers are `char*` or `wchar_t*`,
__BOOST_TEST__ promotes them as null terminated `char` arrays and string comparison is used instead.
`std::string` (or any `std::basic_string`) and `std::string_view` (or any `std::basic_string_view`) are eligible for string comparison.

String comparison can be used only if the operands to compare in __BOOST_TEST__ can both be considered as strings type.

[tip In this form, the comparison method and reporting can be overridden by providing an additional argument to __BOOST_TEST__.
 See the [link boost_test.testing_tools.extended_comparison.collections collection comparison] section for more details, in particular
 `boost::test_tools::per_element()` and `boost::test_tools::lexicographic()` modifiers.]

[bt_example boost_test_string..BOOST_TEST string comparison..run-fail]

[note `std::string_view` support added in Boost.Test [link ref_CHANGE_LOG_3_12 Boost 1.72].
 ]

[endsect]
