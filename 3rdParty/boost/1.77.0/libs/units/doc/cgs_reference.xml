<?xml version="1.0" standalone="yes"?>
<library-reference id="cgs_system_reference"><title>CGS System Reference</title><header name="boost/units/systems/cgs.hpp">
<para>Includes all the cgs unit headers </para></header>
<header name="boost/units/systems/cgs/acceleration.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="acceleration"><type>unit&lt; acceleration_dimension, cgs::system &gt;</type></typedef>
<data-member name="gal" specifiers="static"><type>const acceleration</type></data-member>
<data-member name="gals" specifiers="static"><type>const acceleration</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/area.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="area"><type>unit&lt; area_dimension, cgs::system &gt;</type></typedef>
<data-member name="square_centimeter" specifiers="static"><type>const area</type></data-member>
<data-member name="square_centimeters" specifiers="static"><type>const area</type></data-member>
<data-member name="square_centimetre" specifiers="static"><type>const area</type></data-member>
<data-member name="square_centimetres" specifiers="static"><type>const area</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/base.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="system"><purpose>placeholder class defining cgs unit system </purpose><type>make_system&lt; centimeter_base_unit, gram_base_unit, boost::units::si::second_base_unit, biot_base_unit &gt;::type</type></typedef>
<typedef name="dimensionless"><purpose>various unit typedefs for convenience </purpose><type>unit&lt; dimensionless_type, system &gt;</type></typedef>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/current.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="current"><type>unit&lt; current_dimension, cgs::system &gt;</type></typedef>
<data-member name="biot" specifiers="static"><type>const current</type></data-member>
<data-member name="biots" specifiers="static"><type>const current</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/dimensionless.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<data-member name="cgs_dimensionless" specifiers="static"><type>const dimensionless</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/dynamic_viscosity.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="dynamic_viscosity"><type>unit&lt; dynamic_viscosity_dimension, cgs::system &gt;</type></typedef>
<data-member name="poise" specifiers="static"><type>const dynamic_viscosity</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/energy.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="energy"><type>unit&lt; energy_dimension, cgs::system &gt;</type></typedef>
<data-member name="erg" specifiers="static"><type>const energy</type></data-member>
<data-member name="ergs" specifiers="static"><type>const energy</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/force.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="force"><type>unit&lt; force_dimension, cgs::system &gt;</type></typedef>
<data-member name="dyne" specifiers="static"><type>const force</type></data-member>
<data-member name="dynes" specifiers="static"><type>const force</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/frequency.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="frequency"><type>unit&lt; frequency_dimension, cgs::system &gt;</type></typedef>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/io.hpp">
<namespace name="boost">
<namespace name="units">
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::acceleration &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::acceleration &gt;::type &amp;</paramtype></parameter></function>
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::current &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::current &gt;::type &amp;</paramtype></parameter></function>
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::dynamic_viscosity &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::dynamic_viscosity &gt;::type &amp;</paramtype></parameter></function>
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::energy &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::energy &gt;::type &amp;</paramtype></parameter></function>
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::force &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::force &gt;::type &amp;</paramtype></parameter></function>
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::kinematic_viscosity &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::kinematic_viscosity &gt;::type &amp;</paramtype></parameter></function>
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::pressure &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::pressure &gt;::type &amp;</paramtype></parameter></function>
<function name="name_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::wavenumber &gt;::type &amp;</paramtype></parameter></function>
<function name="symbol_string"><type>std::string</type><parameter name=""><paramtype>const reduce_unit&lt; cgs::wavenumber &gt;::type &amp;</paramtype></parameter></function>
</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/kinematic_viscosity.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="kinematic_viscosity"><type>unit&lt; kinematic_viscosity_dimension, cgs::system &gt;</type></typedef>
<data-member name="stoke" specifiers="static"><type>const kinematic_viscosity</type></data-member>
<data-member name="stokes" specifiers="static"><type>const kinematic_viscosity</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/length.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="length"><type>unit&lt; length_dimension, cgs::system &gt;</type></typedef>
<data-member name="centimeter" specifiers="static"><type>const length</type></data-member>
<data-member name="centimeters" specifiers="static"><type>const length</type></data-member>
<data-member name="centimetre" specifiers="static"><type>const length</type></data-member>
<data-member name="centimetres" specifiers="static"><type>const length</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/mass.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="mass"><type>unit&lt; mass_dimension, cgs::system &gt;</type></typedef>
<data-member name="gram" specifiers="static"><type>const mass</type></data-member>
<data-member name="grams" specifiers="static"><type>const mass</type></data-member>
<data-member name="gramme" specifiers="static"><type>const mass</type></data-member>
<data-member name="grammes" specifiers="static"><type>const mass</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/mass_density.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="mass_density"><type>unit&lt; mass_density_dimension, cgs::system &gt;</type></typedef>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/momentum.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="momentum"><type>unit&lt; momentum_dimension, cgs::system &gt;</type></typedef>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/power.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="power"><type>unit&lt; power_dimension, cgs::system &gt;</type></typedef>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/pressure.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="pressure"><type>unit&lt; pressure_dimension, cgs::system &gt;</type></typedef>
<data-member name="barye" specifiers="static"><type>const pressure</type></data-member>
<data-member name="baryes" specifiers="static"><type>const pressure</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/time.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="time"><type>unit&lt; time_dimension, cgs::system &gt;</type></typedef>
<data-member name="second" specifiers="static"><type>const time</type></data-member>
<data-member name="seconds" specifiers="static"><type>const time</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/velocity.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="velocity"><type>unit&lt; velocity_dimension, cgs::system &gt;</type></typedef>
<data-member name="centimeter_per_second" specifiers="static"><type>const velocity</type></data-member>
<data-member name="centimeters_per_second" specifiers="static"><type>const velocity</type></data-member>
<data-member name="centimetre_per_second" specifiers="static"><type>const velocity</type></data-member>
<data-member name="centimetres_per_second" specifiers="static"><type>const velocity</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/volume.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="volume"><type>unit&lt; volume_dimension, cgs::system &gt;</type></typedef>
<data-member name="cubic_centimeter" specifiers="static"><type>const volume</type></data-member>
<data-member name="cubic_centimeters" specifiers="static"><type>const volume</type></data-member>
<data-member name="cubic_centimetre" specifiers="static"><type>const volume</type></data-member>
<data-member name="cubic_centimetres" specifiers="static"><type>const volume</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
<header name="boost/units/systems/cgs/wavenumber.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="cgs">
<typedef name="wavenumber"><type>unit&lt; wavenumber_dimension, cgs::system &gt;</type></typedef>
<data-member name="kayser" specifiers="static"><type>const wavenumber</type></data-member>
<data-member name="kaysers" specifiers="static"><type>const wavenumber</type></data-member>
<data-member name="reciprocal_centimeter" specifiers="static"><type>const wavenumber</type></data-member>
<data-member name="reciprocal_centimeters" specifiers="static"><type>const wavenumber</type></data-member>
<data-member name="reciprocal_centimetre" specifiers="static"><type>const wavenumber</type></data-member>
<data-member name="reciprocal_centimetres" specifiers="static"><type>const wavenumber</type></data-member>
</namespace>
















</namespace>
</namespace>
</header>
</library-reference>