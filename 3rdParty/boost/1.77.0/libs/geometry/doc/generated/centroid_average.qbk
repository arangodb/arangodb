[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1centroid_1_1average.xml]
[section:strategy_centroid_average strategy::centroid::average]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>centroid</primary></indexterm><indexterm><primary>average</primary></indexterm>'''
Centroid calculation taking average of points. 

[heading Synopsis]
``template<typename Ignored1, typename Ignored2>
class strategy::centroid::average
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Default] [Description]]
[[typename Ignored1] [void] []]
[[typename Ignored2] [void] []]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``template<typename GeometryPoint, typename ResultPoint>
void apply(GeometryPoint const & p, sum< GeometryPoint, ResultPoint > & state)``

] [] [[* GeometryPoint const &]: ['p]:  

[* sum< GeometryPoint, ResultPoint > &]: ['state]:  



][

]
]
[[``template<typename GeometryPoint, typename ResultPoint>
bool result(sum< GeometryPoint, ResultPoint > const & state, ResultPoint & centroid)``

] [] [[* sum< GeometryPoint, ResultPoint > const &]: ['state]:  

[* ResultPoint &]: ['centroid]:  



][

]
]
]

[heading Header]
`#include <boost/geometry/strategies/cartesian/centroid_average.hpp>`

[endsect]

