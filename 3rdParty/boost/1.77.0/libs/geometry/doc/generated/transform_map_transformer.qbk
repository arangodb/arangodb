[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1transform_1_1map__transformer.xml]
[section:strategy_transform_map_transformer strategy::transform::map_transformer]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>transform</primary></indexterm><indexterm><primary>map_transformer</primary></indexterm>'''
Transformation strategy to map from one to another Cartesian coordinate system. 

[heading Synopsis]
``template<typename CalculationType, std::size_t Dimension1, std::size_t Dimension2, bool Mirror,
         bool SameScale>
class strategy::transform::map_transformer
      : public strategy::transform::matrix_transformer< CalculationType, Dimension1, Dimension2 >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Default] [Description]]
[[typename CalculationType] [] []]
[[std::size_t Dimension1] [] []]
[[std::size_t Dimension2] [] []]
[[bool Mirror] [false] [if true map is mirrored upside-down (in most cases pixels are from top to bottom, while map is from bottom to top) ]]
[[bool SameScale] [true] []]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``template<typename B, typename D>
map_transformer(B const & box, D const & width, D const & height)``

] [] [[* B const &]: ['box]:  

[* D const &]: ['width]:  

[* D const &]: ['height]:  



]]
[[``template<typename W, typename D>
map_transformer(W const & wx1, W const & wy1, W const & wx2,
                 W const & wy2, D const & width, D const & height)``

] [] [[* W const &]: ['wx1]:  

[* W const &]: ['wy1]:  

[* W const &]: ['wx2]:  

[* W const &]: ['wy2]:  

[* D const &]: ['width]:  

[* D const &]: ['height]:  



]]
]

[heading Header]
`#include <boost/geometry/strategies/transform/map_transformer.hpp>`

[endsect]

