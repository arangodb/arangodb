[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__line__interpolate.xml]
[section:line_interpolate_4_with_strategy line_interpolate (with strategy)]

'''<indexterm><primary>line_interpolate</primary></indexterm>'''
Returns one or more points interpolated along a LineString using the specified strategy. 

[heading Synopsis]
``template<typename Geometry, typename Distance, typename Pointlike, typename Strategy>
void line_interpolate(Geometry const & geometry, Distance const & max_distance, Pointlike & pointlike,
                      Strategy const & strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a LineString concept ] [geometry] [Input geometry ]]
[[Distance const &] [A numerical distance measure ] [max_distance] [Distance threshold (in units depending on coordinate system) representing the spacing between the points ]]
[[Pointlike &] [Any type fulfilling Point or Multipoint concept ] [pointlike] [Output: either a Point (exactly one point will be constructed) or a MultiPoint (depending on the max_distance one or more points will be constructed) ]]
[[Strategy const &] [A type fulfilling a LineInterpolatePointStrategy concept ] [strategy] [line_interpolate strategy to be used for interpolation of points]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/line_interpolate.hpp>`

[include reference/algorithms/line_interpolate.qbk]
[heading Available Strategies]
* [link geometry.reference.strategies.strategy_line_interpolate_cartesian Cartesian]
* [link geometry.reference.strategies.strategy_line_interpolate_spherical Spherical]
* [link geometry.reference.strategies.strategy_line_interpolate_geographic Geographic]

[heading Example]
[line_interpolate_strategy]
[line_interpolate_strategy_output]

[heading See also]
* [link geometry.reference.algorithms.densify densify]


[endsect]

[section:line_interpolate_3 line_interpolate]

'''<indexterm><primary>line_interpolate</primary></indexterm>'''
Returns one or more points interpolated along a LineString. 

[heading Synopsis]
``template<typename Geometry, typename Distance, typename Pointlike>
void line_interpolate(Geometry const & geometry, Distance const & max_distance, Pointlike & pointlike)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a LineString concept ] [geometry] [Input geometry ]]
[[Distance const &] [A numerical distance measure ] [max_distance] [Distance threshold (in units depending on coordinate system) representing the spacing between the points ]]
[[Pointlike &] [Any type fulfilling Point or Multipoint concept ] [pointlike] [Output: either a Point (exactly one point will be constructed) or a MultiPoint (depending on the max_distance one or more points will be constructed)]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/line_interpolate.hpp>`

[include reference/algorithms/line_interpolate.qbk]

[heading Example]
[line_interpolate]
[line_interpolate_output]

[heading See also]
* [link geometry.reference.algorithms.densify densify]


[endsect]

