[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1buffer_1_1join__round.xml]
[section:strategy_buffer_join_round strategy::buffer::join_round]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>buffer</primary></indexterm><indexterm><primary>join_round</primary></indexterm>'''
Let the buffer create rounded corners. 

[heading Description]
This strategy can be used as JoinStrategy for the buffer algorithm. It creates a rounded corners around each convex vertex. It can be applied for (multi)linestrings and (multi)polygons. This strategy is only applicable for Cartesian coordinate systems.

[heading Synopsis]
``class strategy::buffer::join_round
{
  // ...
};
``

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``join_round(std::size_t points_per_circle = 90)``

] [Constructs the strategy. ] [[* std::size_t]: ['points_per_circle]:  points which would be used for a full circle 



]]
]

[heading Header]
`#include <boost/geometry/strategies/cartesian/buffer_join_round.hpp>`

[heading Example]
[buffer_join_round]
[heading Output]
[$img/strategies/buffer_join_round.png]
[heading See also]
* [link geometry.reference.algorithms.buffer.buffer_7_with_strategies buffer (with strategies)]
* [link geometry.reference.strategies.strategy_buffer_join_miter join_miter]

[endsect]

