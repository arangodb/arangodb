<?xml version="1.0" standalone="yes"?>
<library-reference id="si_base_units_reference"><title>SI Base Units Reference</title><header name="boost/units/base_units/si/ampere.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="si">
<struct name="ampere_base_unit"><inherit access="public">base_unit&lt; ampere_base_unit, current_dimension, -6 &gt;</inherit><method-group name="public static functions">
<method name="name" specifiers="static"><type>std::string</type></method>
<method name="symbol" specifiers="static"><type>std::string</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header name="boost/units/base_units/si/candela.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="si">
<struct name="candela_base_unit"><inherit access="public">base_unit&lt; candela_base_unit, luminous_intensity_dimension, -3 &gt;</inherit><method-group name="public static functions">
<method name="name" specifiers="static"><type>std::string</type></method>
<method name="symbol" specifiers="static"><type>std::string</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header name="boost/units/base_units/si/kelvin.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="si">
<struct name="kelvin_base_unit"><inherit access="public">base_unit&lt; kelvin_base_unit, temperature_dimension, -5 &gt;</inherit><method-group name="public static functions">
<method name="name" specifiers="static"><type>std::string</type></method>
<method name="symbol" specifiers="static"><type>std::string</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header name="boost/units/base_units/si/kilogram.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="si">
<typedef name="kilogram_base_unit"><type>scaled_base_unit&lt; boost::units::cgs::gram_base_unit, scale&lt; 10, static_rational&lt; 3 &gt; &gt; &gt;</type></typedef>
</namespace>
</namespace>
</namespace>
</header>
<header name="boost/units/base_units/si/meter.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="si">
<struct name="meter_base_unit"><inherit access="public">base_unit&lt; meter_base_unit, length_dimension, -9 &gt;</inherit><method-group name="public static functions">
<method name="name" specifiers="static"><type>std::string</type></method>
<method name="symbol" specifiers="static"><type>std::string</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header name="boost/units/base_units/si/mole.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="si">
<struct name="mole_base_unit"><inherit access="public">base_unit&lt; mole_base_unit, amount_dimension, -4 &gt;</inherit><method-group name="public static functions">
<method name="name" specifiers="static"><type>std::string</type></method>
<method name="symbol" specifiers="static"><type>std::string</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
<header name="boost/units/base_units/si/second.hpp">
<namespace name="boost">
<namespace name="units">
<namespace name="si">
<struct name="second_base_unit"><inherit access="public">base_unit&lt; second_base_unit, time_dimension, -7 &gt;</inherit><method-group name="public static functions">
<method name="name" specifiers="static"><type>std::string</type></method>
<method name="symbol" specifiers="static"><type>std::string</type></method>
</method-group>
</struct></namespace>
</namespace>
</namespace>
</header>
</library-reference>