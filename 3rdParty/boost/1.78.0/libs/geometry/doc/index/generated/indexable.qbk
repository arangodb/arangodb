[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from xml/structboost_1_1geometry_1_1index_1_1indexable.xml]
[#structboost_1_1geometry_1_1index_1_1indexable]
[section boost::geometry::index::indexable]

'''<indexterm><primary>boost</primary></indexterm><indexterm><primary>geometry</primary></indexterm><indexterm><primary>index</primary></indexterm><indexterm><primary>indexable</primary></indexterm>'''
The function object extracting Indexable from Value. 

[heading Description]
It translates Value object to Indexable object. By default, it can handle Values which are Indexables, std::pair<Indexable, T2>, boost::tuple<Indexable, ...> and std::tuple<Indexable, ...> if STD tuples and variadic templates are supported.

[heading Header]
`#include <boost/geometry/index/indexable.hpp>`

[heading Synopsis]
[pre
`template<``typename Value``>`
`struct indexable`
`{`
`  // ...`
`};`
]

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[`Value`][The Value type which may be translated directly to the Indexable. ]]
]

[heading Typedef(s)]
[table
[[Type] [Description]]
[[[#structboost_1_1geometry_1_1index_1_1indexable_1af6f21324f6484330b9deb0ee0629f4b4] `result_type`][The type of result returned by function object. It should be const Indexable reference. ]]
]

[heading Member(s)]
[table
[[Modifier][Function][Description]]
[[ `const`][[link structboost_1_1geometry_1_1index_1_1indexable_1a0bbe640be9ae0475e1b56f5b2e08877e `operator()(Value const &)`]][Return indexable extracted from the value. ]]
[[ `const`][[link structboost_1_1geometry_1_1index_1_1indexable_1a4aa66ffe2975f655bada9e6b5a65317b `operator()(V const &)`]][Return indexable extracted from the value. Overload for types compatible with Value but different yet holding referencable Indexable, e.g. tuple containing a reference. ]]
]

[#structboost_1_1geometry_1_1index_1_1indexable_1a0bbe640be9ae0475e1b56f5b2e08877e]
[section operator()(Value const &)]
'''<indexterm><primary>operator()</primary></indexterm>'''
Return indexable extracted from the value. 

[heading Synopsis]
[pre

[^[link structboost_1_1geometry_1_1index_1_1indexable_1af6f21324f6484330b9deb0ee0629f4b4 result_type]] `operator()``(``Value const &` `v``)`
]

[heading Modifier(s)]
``const ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`Value const &`][ `v` ][The value. ]]
]
[heading Returns]
The indexable. 
[endsect]

[#structboost_1_1geometry_1_1index_1_1indexable_1a4aa66ffe2975f655bada9e6b5a65317b]
[section operator()(V const &)]
'''<indexterm><primary>operator()</primary></indexterm>'''
Return indexable extracted from the value. Overload for types compatible with Value but different yet holding referencable Indexable, e.g. tuple containing a reference. 

[heading Synopsis]
[pre
`template<``typename V``>`
[^[link structboost_1_1geometry_1_1index_1_1indexable_1af6f21324f6484330b9deb0ee0629f4b4 result_type]] `operator()``(``V const &` `v``)`
]

[heading Modifier(s)]
``const ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`V const &`][ `v` ][The value. ]]
]
[heading Returns]
The indexable. 
[endsect]

[endsect]

