[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__envelope.xml]
[section:envelope_3_with_strategy envelope (with strategy)]

'''<indexterm><primary>envelope</primary></indexterm>'''
Calculates the envelope (with strategy) of a geometry. 

[heading Description]
The free function envelope calculates the envelope (also known as axis aligned bounding box, aabb, or minimum bounding rectangle, mbr) of a geometry. 

[heading Synopsis]
``template<typename Geometry, typename Box, typename Strategy>
void envelope(Geometry const & geometry, Box & mbr, Strategy const & strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [A model of the specified concept ]]
[[Box &] [Any type fulfilling a Box Concept ] [mbr] [A model of the specified Box Concept which is set to the envelope ]]
[[Strategy const &] [Any type fulfilling a Envelope Strategy Concept ] [strategy] [The strategy which will be used for envelope calculations]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/envelope.hpp>`

[include reference/algorithms/envelope.qbk]
[heading Example]
[envelope] [envelope_output]


[endsect]

[section:envelope_2 envelope]

'''<indexterm><primary>envelope</primary></indexterm>'''
Calculates the envelope of a geometry. 

[heading Description]
The free function envelope calculates the envelope (also known as axis aligned bounding box, aabb, or minimum bounding rectangle, mbr) of a geometry. 

[heading Synopsis]
``template<typename Geometry, typename Box>
void envelope(Geometry const & geometry, Box & mbr)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [A model of the specified concept ]]
[[Box &] [Any type fulfilling a Box Concept ] [mbr] [A model of the specified Box Concept which is set to the envelope]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/envelope.hpp>`

[include reference/algorithms/envelope.qbk]
[heading Example]
[envelope] [envelope_output]


[endsect]

[section:return_envelope_2_with_strategy return_envelope (with strategy)]

'''<indexterm><primary>return_envelope</primary></indexterm>'''
Calculates the envelope of a geometry. 

[heading Description]
The free function return\u005fenvelope calculates the envelope (also known as axis aligned bounding box, aabb, or minimum bounding rectangle, mbr) of a geometry. This version with the return\u005f prefix returns the envelope, and a template parameter must therefore be specified in the call. 

[heading Synopsis]
``template<typename Box, typename Geometry, typename Strategy>
Box return_envelope(Geometry const & geometry, Strategy const & strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Box] [Any type fulfilling a Box Concept ] [ - ] [Must be specified]]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [A model of the specified concept ]]
[[Strategy const &] [Any type fulfilling a Envelope Strategy Concept ] [strategy] [The strategy which will be used for envelope calculations ]]
]


[heading Returns]
The calculated envelope

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/envelope.hpp>`

[include reference/algorithms/envelope.qbk]
[heading Example]
[return_envelope] [return_envelope_output]


[endsect]

[section:return_envelope_1 return_envelope]

'''<indexterm><primary>return_envelope</primary></indexterm>'''
Calculates the envelope of a geometry. 

[heading Description]
The free function return\u005fenvelope calculates the envelope (also known as axis aligned bounding box, aabb, or minimum bounding rectangle, mbr) of a geometry. This version with the return\u005f prefix returns the envelope, and a template parameter must therefore be specified in the call. 

[heading Synopsis]
``template<typename Box, typename Geometry>
Box return_envelope(Geometry const & geometry)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Box] [Any type fulfilling a Box Concept ] [ - ] [Must be specified]]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [A model of the specified concept ]]
]


[heading Returns]
The calculated envelope

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/envelope.hpp>`

[include reference/algorithms/envelope.qbk]
[heading Example]
[return_envelope] [return_envelope_output]


[endsect]

