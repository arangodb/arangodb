[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__densify.xml]
[section:densify_4_with_strategy densify (with strategy)]

'''<indexterm><primary>densify</primary></indexterm>'''
Densify a geometry using a specified strategy. 

[heading Synopsis]
``template<typename Geometry, typename Distance, typename Strategy>
void densify(Geometry const & geometry, Geometry & out, Distance const & max_distance,
             Strategy const & strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [Input geometry, to be densified ]]
[[Geometry &] [Any type fulfilling a Geometry Concept ] [out] [Output geometry, densified version of the input geometry ]]
[[Distance const &] [A numerical distance measure ] [max_distance] [Distance threshold (in units depending on strategy) ]]
[[Strategy const &] [A type fulfilling a DensifyStrategy concept ] [strategy] [Densify strategy to be used for densification]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/densify.hpp>`

[include reference/algorithms/densify.qbk]
[heading Available Strategies]
* [link geometry.reference.strategies.strategy_densify_cartesian Cartesian]
* [link geometry.reference.strategies.strategy_densify_spherical Spherical]
* [link geometry.reference.strategies.strategy_densify_geographic Geographic]

[heading Example]
[densify_strategy]
[densify_strategy_output]

[heading See also]
* [link geometry.reference.algorithms.line_interpolate line_interpolate]


[endsect]

[section:densify_3 densify]

'''<indexterm><primary>densify</primary></indexterm>'''
Densify a geometry. 

[heading Synopsis]
``template<typename Geometry, typename Distance>
void densify(Geometry const & geometry, Geometry & out, Distance const & max_distance)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [Input geometry, to be densified ]]
[[Geometry &] [Any type fulfilling a Geometry Concept ] [out] [Output geometry, densified version of the input geometry ]]
[[Distance const &] [A numerical distance measure ] [max_distance] [Distance threshold (in units depending on coordinate system)]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/densify.hpp>`

[include reference/algorithms/densify.qbk]
[heading Example]
[densify]
[densify_output]

[heading See also]
* [link geometry.reference.algorithms.line_interpolate line_interpolate]


[endsect]

