[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1within_1_1crossings__multiply.xml]
[section:strategy_within_crossings_multiply strategy::within::crossings_multiply]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>within</primary></indexterm><indexterm><primary>crossings_multiply</primary></indexterm>'''
Within detection using cross counting,. 

[heading Synopsis]
``template<typename Point_, typename PointOfSegment_, typename CalculationType, ,
         >
class strategy::within::crossings_multiply
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Default] [Description]]
[[typename Point_] [] []]
[[typename PointOfSegment_] [Point_] []]
[[typename CalculationType] [void] [numeric type for calculation (e.g. high precision); if [*void] then it is extracted automatically from the coordinate type and (if necessary) promoted to floating point ]]
[[] [] [Any type fulfilling a Point Concept ]]
[[] [] [segment point type ]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``template<typename Point, typename PointOfSegment>
bool apply(Point const & point, PointOfSegment const & seg1, PointOfSegment const & seg2,
           flags & state)``

] [] [[* Point const &]: ['point]:  

[* PointOfSegment const &]: ['seg1]:  

[* PointOfSegment const &]: ['seg2]:  

[* flags &]: ['state]:  



][

]
]
[[``int result(flags const & state)``

] [] [[* flags const &]: ['state]:  



][

]
]
]

[heading Header]
`#include <boost/geometry/strategies/cartesian/point_in_poly_crossings_multiply.hpp>`

[endsect]

