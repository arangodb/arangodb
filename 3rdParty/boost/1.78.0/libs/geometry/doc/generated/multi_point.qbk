[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1model_1_1multi__point.xml]
[section:model_multi_point model::multi_point]

'''<indexterm><primary>model</primary></indexterm><indexterm><primary>multi_point</primary></indexterm>'''
multi_point, a collection of points 

[heading Model of]
[link geometry.reference.concepts.concept_multi_point MultiPoint Concept]

[heading Synopsis]
``template<typename Point, template< typename, typename > class Container, template< typename > class Allocator>
class model::multi_point
      : public Container< Point, Allocator< Point > >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Default] [Description]]
[[typename Point] [] [Any type fulfilling a Point Concept ]]
[[template< typename, typename > class Container] [std::vector] [container type, for example std::vector, std::deque ]]
[[template< typename > class Allocator] [std::allocator] [container-allocator-type]]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``multi_point()``

] [Default constructor, creating an empty multi_point. ] [

]]
[[``template<typename Iterator>
multi_point(Iterator begin, Iterator end)``

] [Constructor with begin and end, filling the multi_point. ] [[* Iterator]: ['begin]:  

[* Iterator]: ['end]:  



]]
[[``multi_point(std::initializer_list< Point > l)``

] [Constructor taking std::initializer_list, filling the multi_point. ] [[* std::initializer_list< Point >]: ['l]:  



]]
]

[heading Header]
Either

`#include <boost/geometry/geometries/geometries.hpp>`


Or

`#include <boost/geometry/geometries/multi_point.hpp>`

[include reference/geometries/multi_point.qbk]

[endsect]

