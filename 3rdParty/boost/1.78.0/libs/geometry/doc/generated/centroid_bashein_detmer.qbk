[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1centroid_1_1bashein__detmer.xml]
[section:strategy_centroid_bashein_detmer strategy::centroid::bashein_detmer]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>centroid</primary></indexterm><indexterm><primary>bashein_detmer</primary></indexterm>'''
Centroid calculation using algorithm Bashein / Detmer. 

[heading Description]
Calculates centroid using triangulation method published by Bashein / Detmer 

[heading Synopsis]
``template<typename Ignored1, typename Ignored2, typename CalculationType, ,
         >
class strategy::centroid::bashein_detmer
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Default] [Description]]
[[typename Ignored1] [void] []]
[[typename Ignored2] [void] []]
[[typename CalculationType] [void] [numeric type for calculation (e.g. high precision); if [*void] then it is extracted automatically from the coordinate type and (if necessary) promoted to floating point]]
[[] [] [point type of centroid to calculate ]]
[[] [] [point type of segments, defaults to Point ]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``template<typename GeometryPoint, typename ResultPoint>
void apply(GeometryPoint const & p1, GeometryPoint const & p2, sums< GeometryPoint, ResultPoint > & state)``

] [] [[* GeometryPoint const &]: ['p1]:  

[* GeometryPoint const &]: ['p2]:  

[* sums< GeometryPoint, ResultPoint > &]: ['state]:  



][

]
]
[[``template<typename GeometryPoint, typename ResultPoint>
bool result(sums< GeometryPoint, ResultPoint > const & state, ResultPoint & centroid)``

] [] [[* sums< GeometryPoint, ResultPoint > const &]: ['state]:  

[* ResultPoint &]: ['centroid]:  



][

]
]
]

[heading Header]
`#include <boost/geometry/strategies/cartesian/centroid_bashein_detmer.hpp>`

[heading See also]
[link geometry.reference.algorithms.centroid.centroid_3_with_strategy centroid (with strategy)]

[endsect]

