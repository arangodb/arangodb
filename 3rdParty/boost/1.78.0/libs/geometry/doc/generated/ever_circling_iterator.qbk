[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/structboost_1_1geometry_1_1ever__circling__iterator.xml]
[section:ever_circling_iterator ever_circling_iterator]

'''<indexterm><primary>ever_circling_iterator</primary></indexterm>'''
Iterator which ever circles through a range. 

[heading Synopsis]
``template<typename Iterator>
struct ever_circling_iterator
      : public detail::iterators::iterator_base< ever_circling_iterator< Iterator >, Iterator >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[typename Iterator] [iterator on which this class is based on]]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``ever_circling_iterator()``

] [] [

]]
[[``ever_circling_iterator(Iterator begin, Iterator end, bool skip_first = false)``

] [] [[* Iterator]: ['begin]:  

[* Iterator]: ['end]:  

[* bool]: ['skip_first]:  



]]
[[``ever_circling_iterator(Iterator begin, Iterator end, Iterator start,
                        bool skip_first = false)``

] [] [[* Iterator]: ['begin]:  

[* Iterator]: ['end]:  

[* Iterator]: ['start]:  

[* bool]: ['skip_first]:  



]]
[[``template<typename OtherIterator, std::enable_if_t< std::is_convertible< OtherIterator, Iterator >::value, int >>
ever_circling_iterator(ever_circling_iterator< OtherIterator > const & other)``

] [] [[* ever_circling_iterator< OtherIterator > const &]: ['other]:  



]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``void moveto(Iterator it)``

] [] [[* Iterator]: ['it]:  



][

]
]
]

[heading Header]
`#include <boost/geometry/iterators/ever_circling_iterator.hpp>`

[endsect]

