[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__touches.xml]
[section:touches_1_one_geometry touches (one geometry)]

'''<indexterm><primary>touches</primary></indexterm>'''
Checks if a geometry has at least one touching point (self-tangency) 

[heading Synopsis]
``template<typename Geometry>
bool touches(Geometry const & geometry)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [A model of the specified concept ]]
]


[heading Returns]
Returns true if the geometry is self-touching

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/touches.hpp>`

[def __one_parameter__]
[include reference/algorithms/touches.qbk]
[heading Examples]
[touches_one_geometry]
[touches_one_geometry_output]


[endsect]

[section:touches_2_two_geometries touches (two geometries)]

'''<indexterm><primary>touches</primary></indexterm>'''
Checks if two geometries have at least one touching point (tangent - non overlapping) 

[heading Synopsis]
``template<typename Geometry1, typename Geometry2>
bool touches(Geometry1 const & geometry1, Geometry2 const & geometry2)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry1 const &] [Any type fulfilling a Geometry Concept ] [geometry1] [A model of the specified concept ]]
[[Geometry2 const &] [Any type fulfilling a Geometry Concept ] [geometry2] [A model of the specified concept ]]
]


[heading Returns]
Returns true if two geometries touch each other

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/touches.hpp>`

[include reference/algorithms/touches.qbk]
[heading Examples]
[touches_two_geometries]
[touches_two_geometries_output]


[endsect]

[section:touches_3_with_strategy touches (with strategy)]

'''<indexterm><primary>touches</primary></indexterm>'''
Checks if two geometries have at least one touching point (tangent - non overlapping) 

[heading Synopsis]
``template<typename Geometry1, typename Geometry2, typename Strategy>
bool touches(Geometry1 const & geometry1, Geometry2 const & geometry2, Strategy const & strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry1 const &] [Any type fulfilling a Geometry Concept ] [geometry1] [A model of the specified concept ]]
[[Geometry2 const &] [Any type fulfilling a Geometry Concept ] [geometry2] [A model of the specified concept ]]
[[Strategy const &] [Any type fulfilling a Touches Strategy Concept ] [strategy] [The strategy which will be used for touches calculations ]]
]


[heading Returns]
Returns true if two geometries touch each other

[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/touches.hpp>`

[include reference/algorithms/touches.qbk]


[endsect]

