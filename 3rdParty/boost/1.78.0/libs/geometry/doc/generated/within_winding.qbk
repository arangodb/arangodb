[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1within_1_1winding.xml]
[section:strategy_within_winding strategy::within::winding]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>within</primary></indexterm><indexterm><primary>winding</primary></indexterm>'''
Within detection using winding rule. Side strategy used internally is choosen based on Point's coordinate system. 

[heading Synopsis]
``template<typename Point, typename PointOfSegment, typename CalculationType>
class strategy::within::winding
      : public within::detail::winding_base_type::type< Point, PointOfSegment, CalculationType >
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Default] [Description]]
[[typename Point] [] [Any type fulfilling a Point Concept ]]
[[typename PointOfSegment] [Point] [segment point type ]]
[[typename CalculationType] [void] [numeric type for calculation (e.g. high precision); if [*void] then it is extracted automatically from the coordinate type and (if necessary) promoted to floating point]]
]

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``winding()``

] [] [

]]
[[``template<typename Model>
winding(Model const & model)``

] [] [[* Model const &]: ['model]:  



]]
]

[heading Header]
`#include <boost/geometry/strategies/agnostic/point_in_poly_winding.hpp>`

[heading See also]
[link geometry.reference.algorithms.within.within_3_with_strategy within (with strategy)]

[endsect]

