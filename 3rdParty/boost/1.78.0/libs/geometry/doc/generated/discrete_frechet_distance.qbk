[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__discrete__frechet__distance.xml]
[section:discrete_frechet_distance_3_with_strategy discrete_frechet_distance (with strategy)]

'''<indexterm><primary>discrete_frechet_distance</primary></indexterm>'''
Calculate discrete Frechet distance between two geometries (currently works for LineString-LineString) using specified strategy. 

[heading Synopsis]
``template<typename Geometry1, typename Geometry2, typename Strategy>
auto discrete_frechet_distance(Geometry1 const & geometry1, Geometry2 const & geometry2, Strategy const & strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry1 const &] [Any type fulfilling a Geometry Concept ] [geometry1] [Input geometry ]]
[[Geometry2 const &] [Any type fulfilling a Geometry Concept ] [geometry2] [Input geometry ]]
[[Strategy const &] [A type fulfilling a DistanceStrategy concept ] [strategy] [Distance strategy to be used to calculate Pt-Pt distance]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/discrete_frechet_distance.hpp>`

[include reference/algorithms/discrete_frechet_distance.qbk]
[heading Available Strategies]
* [link geometry.reference.strategies.strategy_distance_pythagoras Pythagoras (cartesian)]
* [link geometry.reference.strategies.strategy_distance_haversine Haversine (spherical)]
[/ * more (currently extensions): Vincenty, Andoyer (geographic) ]

[heading Example]
[discrete_frechet_distance_strategy]
[discrete_frechet_distance_strategy_output]


[endsect]

[section:discrete_frechet_distance_2 discrete_frechet_distance]

'''<indexterm><primary>discrete_frechet_distance</primary></indexterm>'''
Calculate discrete Frechet distance between two geometries (currently work for LineString-LineString). 

[heading Synopsis]
``template<typename Geometry1, typename Geometry2>
auto discrete_frechet_distance(Geometry1 const & geometry1, Geometry2 const & geometry2)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry1 const &] [Any type fulfilling a Geometry Concept ] [geometry1] [Input geometry ]]
[[Geometry2 const &] [Any type fulfilling a Geometry Concept ] [geometry2] [Input geometry]]
]


[heading Header]
Either

`#include <boost/geometry.hpp>`


Or

`#include <boost/geometry/algorithms/discrete_frechet_distance.hpp>`

[include reference/algorithms/discrete_frechet_distance.qbk]
[heading Example]
[discrete_frechet_distance]
[discrete_frechet_distance_output]


[endsect]

