[/
          Copyright Oliver Kowalke 2009.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt
]

[library Coroutine
    [quickbook 1.5]
    [authors [Kowalke, Oliver]]
    [copyright 2009 Oliver Kowalke]
    [purpose C++ Library providing coroutine facility]
    [id coroutine]
    [category text]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]


[def __boost_asio__ [*Boost.Asio]]
[def __boost_build__ [*Boost.Build]]
[def __boost_context__ [*Boost.Context]]
[def __boost_coroutine__ [*Boost.Coroutine]]
[def __boost_exception__ [*Boost.Exception]]
[def __boost_function_types__ [*Boost.FunctionTypes]]
[def __boost_move__ [*Boost.Move]]
[def __boost_mpl__ [*Boost.MPL]]
[def __boost_optional__ [*Boost.Optional]]
[def __boost_preprocessor__ [*Boost.Preprocessor]]
[def __boost_range__ [*Boost.Range]]
[def __boost_result_of__ [*Boost.ResultOf]]
[def __boost_smart_ptr__ [*Boost.SmartPtr]]
[def __boost_static_assert__ [*Boost.StaticAssert]]
[def __boost_tuple__ [*Boost.Tuple]]
[def __boost_type_traits__ [*Boost.TypeTraits]]
[def __boost_utility__ [*Boost.Utility]]
[def __boost_version__ [*Boost-1.52.0]]

[def __coro__ ['coroutine]]
[def __coro_fn__ ['coroutine-function]]
[def __coros__ ['coroutines]]
[def __ctx__ ['context]]
[def __not_a_coro__ ['not-a-coroutine]]
[def __segmented_stack__ ['segmented-stack]]
[def __signature__ ['Signature]]
[def __stack_allocator_concept__ ['stack-allocator concept]]
[def __stack_allocator__ ['stack-allocator]]
[def __stack_traits__ ['stack-traits]]
[def __stack__ ['stack]]
[def __tls__ ['thread-local-storage]]

[def __acoro__ ['asymmetric_coroutine<>]]
[def __attrs__ ['attributes]]
[def __begin__ ['std::begin()]]
[def __bind__ ['boost::bind()]]
[def __call_coro_bool__ ['symmetric_coroutine<>::call_type::operator bool]]
[def __call_coro_op__ ['symmetric_coroutine<>::call_type::operator()]]
[def __call_coro__ ['symmetric_coroutine<>::call_type]]
[def __coro_allocator__ ['stack_allocator]]
[def __coro_ns__ ['boost::coroutines]]
[def __end__ ['std::end()]]
[def __fcontext__ ['boost::contexts::fcontext_t]]
[def __fetch__ ['inbuf::fetch()]]
[def __forced_unwind__ ['detail::forced_unwind]]
[def __getline__ ['std::getline()]]
[def __handle_read__ ['session::handle_read()]]
[def __io_service__ ['boost::asio::io_sevice]]
[def __protected_allocator__ ['protected_stack_allocator]]
[def __pull_coro__ ['asymmetric_coroutine<>::pull_type]]
[def __pull_coro_bool__ ['asymmetric_coroutine<>::pull_type::operator bool]]
[def __pull_coro_get__ ['asymmetric_coroutine<>::pull_type::get()]]
[def __pull_coro_it__ ['asymmetric_coroutine<>::pull_type::iterator]]
[def __pull_coro_op__ ['asymmetric_coroutine<>::pull_type::operator()]]
[def __push_coro__ ['asymmetric_coroutine<>::push_type]]
[def __push_coro_bool__ ['asymmetric_coroutine<>::push_type::operator bool]]
[def __push_coro_it__ ['asymmetric_coroutine<>::push_type::iterator]]
[def __push_coro_op__ ['asymmetric_coroutine<>::push_type::operator()]]
[def __scoro__ ['symmetric_coroutine<>]]
[def __segmented_allocator__ ['segmented_stack_allocator]]
[def __server__ ['server]]
[def __session__ ['session]]
[def __stack_context__ ['stack_context]]
[def __segmented_allocator__ ['segmented_stack_allocator]]
[def __standard_allocator__ ['standard_stack_allocator]]
[def __start__ ['session::start()]]
[def __terminate__ ['std::terminate()]]
[def __thread__ ['boost::thread]]
[def __tie__ ['boost::tie]]
[def __tuple__ ['boost::tuple<>]]
[def __underflow__ ['stream_buf::underflow()]]
[def __yield_context__ ['boost::asio::yield_context]]
[def __yield_coro_bool__ ['symmetric_coroutine<>::yield_type::operator bool]]
[def __yield_coro_get__ ['symmetric_coroutine<>::yield_type::get()]]
[def __yield_coro_op__ ['symmetric_coroutine<>::yield_type::operator()]]
[def __yield_coro__ ['symmetric_coroutine<>::yield_type]]

[include overview.qbk]
[include intro.qbk]
[include motivation.qbk]
[include coroutine.qbk]
[include attributes.qbk]
[include stack.qbk]
[include performance.qbk]
[include architectures.qbk]
[include acknowledgements.qbk]
