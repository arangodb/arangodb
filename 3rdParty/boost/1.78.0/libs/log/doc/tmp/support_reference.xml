<?xml version="1.0" standalone="yes"?>
<library-reference id="other_libraries_support_layer"><title>Other libraries support layer</title><header name="boost/log/support/date_time.hpp">
<para><para>Andrey Semashev </para>

<para>07.11.2012</para>

This header enables Boost.DateTime support for Boost.Log. </para><namespace name="boost">
<namespace name="log">
<namespace name="expressions">
</namespace>

</namespace>
</namespace>
</header>
<header name="boost/log/support/exception.hpp">
<para><para>Andrey Semashev </para>

<para>18.07.2009</para>

This header enables Boost.Exception support for Boost.Log. </para><namespace name="boost">
<namespace name="log">
<namespace name="ipc">
<typedef name="object_name_info"><description><para>System resource name </para></description><type>error_info&lt; struct object_name_tag, object_name &gt;</type></typedef>
</namespace>
<typedef name="attribute_name_info"><description><para>Attribute name exception information </para></description><type>error_info&lt; struct attribute_name_info_tag, attribute_name &gt;</type></typedef>
<typedef name="type_info_info"><description><para>Type info exception information </para></description><type>error_info&lt; struct type_info_info_tag, typeindex::type_index &gt;</type></typedef>
<typedef name="position_info"><description><para>Parse position exception information </para></description><type>error_info&lt; struct position_info_tag, unsigned int &gt;</type></typedef>
<typedef name="current_scope_info"><description><para>Current scope exception information </para></description><type>error_info&lt; struct current_scope_info_tag, attributes::named_scope_list &gt;</type></typedef>
<function name="current_scope"><type>current_scope_info</type><description><para>The function returns an error information object that contains current stack of scopes. This information can then be attached to an exception and extracted at the catch site. The extracted scope list won't be affected by any scope changes that may happen during the exception propagation.</para><para><note><para>See the <computeroutput>named_scope</computeroutput> attribute documentation on how to maintain scope list. </para>
</note>
</para></description></function>
</namespace>
</namespace>
</header>
<header name="boost/log/support/regex.hpp">
<para><para>Andrey Semashev </para>

<para>18.07.2009</para>

This header enables Boost.Regex support for Boost.Log. </para><namespace name="boost">
<namespace name="log">

</namespace>
</namespace>
</header>
<header name="boost/log/support/spirit_classic.hpp">
<para><para>Andrey Semashev </para>

<para>19.07.2009</para>

This header enables Boost.Spirit (classic) support for Boost.Log. </para><namespace name="boost">
<namespace name="log">

</namespace>
</namespace>
</header>
<header name="boost/log/support/spirit_qi.hpp">
<para><para>Andrey Semashev </para>

<para>19.07.2009</para>

This header enables Boost.Spirit.Qi support for Boost.Log. </para><namespace name="boost">
<namespace name="log">

</namespace>
</namespace>
</header>
<header name="boost/log/support/std_regex.hpp">
<para><para>Andrey Semashev </para>

<para>19.03.2014</para>

This header enables <computeroutput>std::regex</computeroutput> support for Boost.Log. </para><namespace name="boost">
<namespace name="log">

</namespace>
</namespace>
</header>
<header name="boost/log/support/xpressive.hpp">
<para><para>Andrey Semashev </para>

<para>18.07.2009</para>

This header enables Boost.Xpressive support for Boost.Log. </para><namespace name="boost">
<namespace name="log">

</namespace>
</namespace>
</header>
</library-reference>