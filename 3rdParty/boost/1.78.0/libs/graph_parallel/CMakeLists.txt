# Generated by `boostdep --cmake graph_parallel`
# Copyright 2020 Peter Dimov
# Distributed under the Boost Software License, Version 1.0.
# https://www.boost.org/LICENSE_1_0.txt

cmake_minimum_required(VERSION 3.5...3.16)

project(boost_graph_parallel VERSION "${BOOST_SUPERPROJECT_VERSION}" LANGUAGES CXX)

add_library(boost_graph_parallel
  src/mpi_process_group.cpp
  src/tag_allocator.cpp
)

add_library(Boost::graph_parallel ALIAS boost_graph_parallel)

target_include_directories(boost_graph_parallel PUBLIC include)

target_link_libraries(boost_graph_parallel
  PUBLIC
    Boost::assert
    Boost::concept_check
    Boost::config
    Boost::container_hash
    Boost::core
    Boost::detail
    Boost::dynamic_bitset
    Boost::filesystem
    Boost::foreach
    Boost::function
    Boost::graph
    Boost::iterator
    Boost::lexical_cast
    Boost::mpi
    Boost::mpl
    Boost::optional
    Boost::property_map
    Boost::property_map_parallel
    Boost::random
    Boost::serialization
    Boost::smart_ptr
    Boost::static_assert
    Boost::tuple
    Boost::type_traits
    Boost::variant
)

target_compile_definitions(boost_graph_parallel
  PUBLIC BOOST_GRAPH_PARALLEL_NO_LIB
  PRIVATE BOOST_GRAPH_PARALLEL_SOURCE
)

if(BUILD_SHARED_LIBS)
  target_compile_definitions(boost_graph_parallel PUBLIC BOOST_GRAPH_PARALLEL_DYN_LINK)
else()
  target_compile_definitions(boost_graph_parallel PUBLIC BOOST_GRAPH_PARALLEL_STATIC_LINK)
endif()

if(BUILD_TESTING AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/test/CMakeLists.txt")

  add_subdirectory(test)

endif()

