[/
Copyright 2020 Glen Joseph Fernandes
(glenjofe@gmail.com)

Distributed under the Boost Software License,
Version 1.0. (See accompanying file LICENSE_1_0.txt
or copy at http://www.boost.org/LICENSE_1_0.txt).
]

[section:negation negation]

    template<class T>
    struct negation
        : public __integral_constant<bool, !bool(T::value)> { };

__inherit Inherits from `__integral_constant<bool, !bool(T::value)>`.

__header `#include <boost/type_traits/negation.hpp>`

[all_compilers]

__examples

[:`negation<__true_type>` inherits from `__false_type`.]

[:`negation<__false_type>` inherits from `__true_type`.]

[:`negation<__integral_constant<int, 4> >::type` is the type `__false_type`.]

[:`negation<__integral_constant<int, 0> >::value` is an integral constant
expression that evaluates to /true/.]

[:`negation<T>::value_type` is the type `bool`.]

[endsect]
