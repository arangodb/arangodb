[/ 
  Copyright 2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:remove_volatile remove_volatile]

   template <class T>
   struct remove_volatile
   {
      typedef __below type;
   };
   
   template <class T> using remove_volatile_t = typename remove_volatile<T>::type; // C++11 and above

__type The same type as `T`, but with any /top level/ volatile-qualifier removed.

__std_ref 3.9.3.

[all_compilers]

__header ` #include <boost/type_traits/remove_volatile.hpp>` or ` #include <boost/type_traits.hpp>`

[table Examples

[ [Expression] [Result Type]]

[[`remove_volatile<int>::type`][`int`]]

[[`remove_volatile<int volatile>::type`] [`int`]]

[[`remove_volatile<int const volatile>::type`] [`int const`]]

[[`remove_volatile<int volatile&>::type`] [`int const&`]]

[[`remove_volatile<int volatile*>::type`] [`int const*`]]

]

[endsect]

