[/ 
  Copyright 2017 Peter Dimov

  Distributed under the Boost Software License, Version 1.0.

  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:is_list_constructible is_list_constructible]

   template <class T, class... Args>
   struct is_list_constructible : public __tof {};
    
__inherit If `T` can be constructed from `Args` using list initialization
(`T{declval<Args>()...}`), then inherits from __true_type, otherwise inherits from
__false_type. `T` must be a complete type.

__compat This trait requires C++11.

__header ` #include <boost/type_traits/is_list_constructible.hpp>` or ` #include <boost/type_traits.hpp>`

[endsect]
