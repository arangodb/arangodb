# Boost Chrono Library test Jamfile

# Copyright Vicente J. Botet Escriba 2014

# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt

# See library home page at http://www.boost.org/libs/chrono/stopwatch

import os ;
import feature ;

project
    : requirements
        <target-os>freebsd:<linkflags>"-lrt"
        <target-os>linux:<linkflags>"-lrt -lpthread"
        <toolset>clang/<target-os>linux:<linkflags>"-lpthread"
        <toolset>pgi:<linkflags>"-lrt"
        #<threading>single:<define>BOOST_CHRONO_THREAD_DISABLED
        <toolset>msvc:<asynch-exceptions>on
        <define>BOOST_CHRONO_USES_MPL_ASSERT
        <define>BOOST_SYSTEM_NO_DEPRECATED
        #<toolset>sun:<define>BOOST_COMMON_TYPE_DONT_USE_TYPEOF
        #<toolset>sun:<define>BOOST_TYPEOF_EMULATION
        <toolset>sun:<define>__typeof__=__typeof__
        <warnings>all
        <toolset>gcc:<cxxflags>-Wextra
        <toolset>gcc:<cxxflags>-pedantic
        <toolset>gcc:<cxxflags>-Wno-long-long
        <toolset>gcc:<cxxflags>-Wno-variadic-macros
        <toolset>darwin:<cxxflags>-Wextra
        <toolset>darwin:<cxxflags>-pedantic
        <toolset>darwin:<cxxflags>-Wno-long-long
        <toolset>darwin:<cxxflags>-Wno-variadic-macros
        #<toolset>pathscale:<cxxflags>-Wextra
        <toolset>pathscale:<cxxflags>-Wno-long-long
        <toolset>pathscale:<cxxflags>-pedantic
        <toolset>clang:<cxxflags>-Wextra
        <toolset>clang:<cxxflags>-pedantic
        <toolset>clang:<cxxflags>-Wno-long-long
        <toolset>clang:<cxxflags>-Wno-variadic-macros
        <toolset>gcc-4.5.0,<target-os>windows:<cxxflags>-Wno-missing-field-initializers 
 	<toolset>gcc-4.5.0,<target-os>windows:<cxxflags>-fdiagnostics-show-option 
        <toolset>msvc:<cxxflags>/wd4127
        <toolset>msvc:<cxxflags>/wd4512
# Note: Some of the remarks from the Intel compiler are disabled
# remark #193: zero used for undefined preprocessing identifier "XXX"
# remark #304: access control not specified ("public" by default)
# remark #383: value copied to temporary, reference to temporary used
# remark #444: destructor for base class "XXX" (declared at line YYY") is not virtual
# remark #593: variable "XXX" was set but never used
# remark #981: operands are evaluated in unspecified order
# remark #1418: external function definition with no prior declaration
# remark #2415: variable "XXX" of static storage duration was declared but never referenced

        <toolset>intel:<cxxflags>-wd193,304,383,444
        <toolset>intel:<cxxflags>-wd593,981
        <toolset>intel:<cxxflags>-wd1418
	  <toolset>intel:<cxxflags>-wd2415
    ;



rule stopwatch-run ( sources + )
{
    return
    [ run $(sources) 
        : :
        :
            <library>/boost/chrono//boost_chrono
            <library>/boost/system//boost_system
            <define>BOOST_CHRONO_VERSION=2
        :   $(sources[1]:B)_d  ]
    [ run $(sources)
        : :
        :   <define>BOOST_CHRONO_HEADER_ONLY
            <define>BOOST_ERROR_CODE_HEADER_ONLY
           #<define>BOOST_CHRONO_DONT_PROVIDE_HYBRID_ERROR_HANDLING
            <define>BOOST_CHRONO_VERSION=2
        : $(name)_h ]
    ;
}

rule stopwatch-run2 ( sources + : name )
{
    return
    [ run $(sources) 
        : :
        :
            <library>/boost/chrono//boost_chrono
            <library>/boost/system//boost_system
            <define>BOOST_CHRONO_VERSION=2
        :   $(name)_d  ]
    [ run $(sources)
        : :
        :   <define>BOOST_CHRONO_HEADER_ONLY
            <define>BOOST_ERROR_CODE_HEADER_ONLY
           #<define>BOOST_CHRONO_DONT_PROVIDE_HYBRID_ERROR_HANDLING
            <define>BOOST_CHRONO_VERSION=2
        : $(name)_h ]
    ;
}



    test-suite "stopwatch"
        :
        [ stopwatch-run2 stopwatch/simple_stopwatch_pass.cpp  : simple_stopwatch_p ]
        [ stopwatch-run2 stopwatch/basic_stopwatch_pass.cpp  : basic_stopwatch_p ]
        [ stopwatch-run2 stopwatch/basic_stopwatch_last_lap_pass.cpp  : basic_stopwatch_last_lap_p ]
        [ stopwatch-run2 stopwatch/basic_stopwatch_laps_accumulator_set_pass.cpp  : basic_stopwatch_laps_accumulator_set_p ]
        [ stopwatch-run2 stopwatch/basic_stopwatch_laps_container_pass.cpp  : basic_stopwatch_laps_container_p ]

        [ stopwatch-run2 stopwatch/suspendable_stopwatch_pass.cpp  : suspendable_stopwatch_p ]
        ;

    test-suite "stopwatch_ex"
        :
        [ stopwatch-run2 ../example/stopwatch_example.cpp  : stopwatch_example ]
        ;

    test-suite "stopclock"
        :
        [ stopwatch-run2 stopwatch/basic_stopwatch_reporter_laps_accumulator_set_pass.cpp  : basic_stopwatch_reporter_laps_accumulator_set_p ]
        #[ stopwatch-run2 stopwatch/basic_stopwatch_reporter_laps_container_pass.cpp  : basic_stopwatch_reporter_laps_container_p ]
        #[ stopwatch-run2 stopwatch/basic_stopwatch_reporter_last_lap_pass.cpp  : basic_stopwatch_reporter_last_lap_p ]
        #[ stopwatch-run2 stopwatch/basic_stopwatch_reporter_last_lap_pass.cpp  : basic_stopwatch_reporter_last_lap_p ]
        [ stopwatch-run2 stopwatch/basic_stopwatch_reporter_pass.cpp  : basic_stopwatch_reporter_p ]
        [ stopwatch-run2 stopwatch/laps_stopclock_pass.cpp  : laps_stopclock_p ]
        [ stopwatch-run2 stopwatch/laps_stopclock_laps_accumulator_set_pass.cpp  : laps_stopclock_laps_accumulator_set_p ]
        [ stopwatch-run2 stopwatch/simple_stopclock_pass.cpp  : simple_stopclock_p ]
        [ stopwatch-run2 stopwatch/simple_stopwatch_reporter_pass.cpp  : simple_stopwatch_reporter_p ]

        ;
    test-suite "stopclock_ex"
        :
        [ stopwatch-run2 ../example/stopwatch_reporter_example.cpp  : stopwatch_reporter_example ]
        ;


    explicit ts_ ;
    test-suite ts_
        :
        ;

