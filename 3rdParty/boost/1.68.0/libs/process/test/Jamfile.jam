# Copyright (c) 2006, 2007 Julio M. Merino Vidal
# Copyright (c) 2008 Ilya Sokolov, Boris Schaeling
# Copyright (c) 2009 Boris Schaeling
# Copyright (c) 2010 Felipe Tanus, Boris Schaeling
# Copyright (c) 2011, 2012 Jeff Flinn, Boris Schaeling
# Copyright (c) 2016 Klemens D. Morgenstern
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)


import os ;

if [ os.name ] = NT
{
  lib ws2_32 ;
  lib shell32 ;
  lib Advapi32 ;
}

project : requirements
  <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
  <toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
  <toolset>msvc:<cxxflags>/bigobj
  <target-os>windows:<define>WIN32_LEAN_AND_MEAN
  <target-os>linux:<linkflags>-lpthread
  <os>NT,<toolset>cw:<library>ws2_32
  <os>NT,<toolset>gcc:<library>ws2_32
;



import testing ;


alias program_options  : /boost//program_options : <link>static ;
alias filesystem       : /boost//filesystem      ;
alias iostreams        : /boost//iostreams       ;
alias system           : /boost//system          ;
alias thread           : /boost//thread          ;
alias coroutine        : /boost//coroutine       : <link>static ;

lib multi_ref : multi_ref1.cpp multi_ref2.cpp system : <target-os>windows:<source>shell32 ;

exe sparring_partner : sparring_partner.cpp program_options system filesystem iostreams :
    <warnings>off <target-os>windows:<source>shell32
    ;

exe exit_argc : exit_argc.cpp :
    <warnings>off <target-os>windows:<source>shell32
    ;

exe sub_launch : sub_launcher.cpp program_options iostreams system filesystem : <warnings>off <target-os>windows:<source>shell32 ;

test-suite bare :
    [ run environment.cpp system filesystem ]
    [ run async_pipe.cpp  system filesystem ]
    [ run pipe.cpp        system filesystem ]
    [ compile no_ansi_apps.cpp ]
    [ compile-fail spawn_fail.cpp        ]
    [ compile-fail async_system_fail.cpp ]
    ;

test-suite with-valgrind :
    [ run async.cpp       system thread filesystem            : : sparring_partner ]
    [ run async_fut.cpp   system thread filesystem            : : sparring_partner ]
    [ run args_handling.cpp  system thread filesystem         : : exit_argc        ]
    [ run args_cmd.cpp    system filesystem                   : : sparring_partner ]
    [ run wargs_cmd.cpp    system filesystem                  : : sparring_partner ]
    [ run bind_stderr.cpp     filesystem                      : : sparring_partner ]
    [ run bind_stdin.cpp     system filesystem                : : sparring_partner ]
    [ run bind_stdin_stdout.cpp     system filesystem         : : sparring_partner ]
    [ run bind_stdout.cpp     system filesystem               : : sparring_partner ]
    [ run bind_stdout_stderr.cpp     system filesystem        : : sparring_partner ]
    [ run pipe_fwd.cpp         system filesystem              : : sparring_partner ]
    [ run cmd_test.cpp         system filesystem              : : sparring_partner ]
    [ run close_stderr.cpp     system filesystem              : : sparring_partner ]
    [ run close_stdin.cpp      system filesystem              : : sparring_partner ]
    [ run close_stdout.cpp     system filesystem              : : sparring_partner ]
    [ run error.cpp            system filesystem              : : sparring_partner ]
    [ run exit_code.cpp program_options system filesystem     : : sparring_partner ]
    [ run extensions.cpp system filesystem                    : : sparring_partner ]
    [ run env.cpp     program_options system filesystem       : : sparring_partner ]
    [ run group.cpp     system thread filesystem              : : sub_launch       ]
    [ run run_exe.cpp filesystem                              : : sparring_partner ]
    [ run run_exe_path.cpp filesystem                         : : sparring_partner ]
    [ run search_path.cpp filesystem system                   : : : <target-os>windows:<source>shell32 ]
    [ run shell.cpp filesystem system                         : : sparring_partner ]
    [ run shell_path.cpp  filesystem system                   ]
    [ run system_test1.cpp filesystem system                  : : sparring_partner ]
    [ run system_test2.cpp filesystem system                  : : sparring_partner ]
    [ run spawn.cpp filesystem system                         : : sparring_partner ]
    [ run start_dir.cpp   filesystem system                   : : sparring_partner ]
    [ run terminate.cpp system filesystem                     : : sparring_partner ]
    [ run throw_on_error.cpp system filesystem                : : sparring_partner ]
    [ run wait.cpp system filesystem                          : : sparring_partner ]
    [ run wait_for.cpp system filesystem                      : : sparring_partner ]
    [ run on_exit.cpp  system filesystem                      : : sparring_partner ]
    [ run on_exit2.cpp system filesystem                      : : sparring_partner ]
    [ run on_exit3.cpp system filesystem                      : : sparring_partner ]
    [ run posix_specific.cpp     system filesystem            : : sparring_partner : <build>no <target-os>linux:<build>yes   ]
    [ run windows_specific.cpp filesystem system              : : sparring_partner : <build>no <target-os>windows:<build>yes   ]
   : <dependency>bare ;

test-suite without-valgrind :
    [ run async_system_future.cpp filesystem system coroutine           : : sparring_partner : <link>static <toolset>msvc:<cxxflags>/bigobj ]
    [ run async_system_stackful.cpp filesystem system coroutine         : : sparring_partner : <link>static <toolset>msvc:<cxxflags>/bigobj ]
    [ run async_system_stackful_error.cpp filesystem system coroutine   : : sparring_partner : <link>static <toolset>msvc:<cxxflags>/bigobj ]
    [ run async_system_stackful_except.cpp filesystem system coroutine  : : sparring_partner : <link>static <toolset>msvc:<cxxflags>/bigobj ]
    [ run async_system_stackless.cpp filesystem system coroutine        : : sparring_partner : <link>static <toolset>msvc:<cxxflags>/bigobj ]
    [ run vfork.cpp     system filesystem                               : : sparring_partner : <build>no <target-os>linux:<build>yes ]
    ;


