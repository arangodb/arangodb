[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2007-2013 Barend Gehrels, Amsterdam, the Netherlands.
  Copyright (c) 2008-2013 Bruno Lalande, Paris, France.
  Copyright (c) 2009-2013 Mateusz Loskot, London, UK.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1geometry_1_1strategy_1_1convex__hull_1_1graham__andrew.xml]
[section:strategy_convex_hull_graham_andrew strategy::convex_hull::graham_andrew]

'''<indexterm><primary>strategy</primary></indexterm><indexterm><primary>convex_hull</primary></indexterm><indexterm><primary>graham_andrew</primary></indexterm>'''
Graham scan strategy to calculate convex hull. 

[heading Synopsis]
``template<typename InputGeometry, typename OutputPoint>
class strategy::convex_hull::graham_andrew
{
  // ...
};
``

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[typename InputGeometry] []]
[[typename OutputPoint] []]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``void apply(InputGeometry const & geometry, partitions & state)``

] [] [[* InputGeometry const &]: ['geometry]:  

[* partitions &]: ['state]:  



][

]
]
[[``template<typename OutputIterator>
void result(partitions const & state, OutputIterator out, bool clockwise,
            bool closed)``

] [] [[* partitions const &]: ['state]:  

[* OutputIterator]: ['out]:  

[* bool]: ['clockwise]:  

[* bool]: ['closed]:  



][

]
]
]

[heading Header]
`#include <boost/geometry/strategies/agnostic/hull_graham_andrew.hpp>`

[endsect]

