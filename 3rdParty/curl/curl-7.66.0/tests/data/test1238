<testcase>
<info>
<keywords>
TFTP
TFTP RRQ
</keywords>
</info>

#
# Server-side
<reply>
<servercmd>
writedelay: 2
</servercmd>
# ~1200 bytes (so that they don't fit in two 512 byte chunks)
<data nocheck="yes">

</data>
</reply>

#
# Client-side
<client>
<server>
tftp
</server>
 <name>
slow TFTP retrieve cancel due to -Y and -y
 </name>
# if less than 1000 bytes/sec within 2 seconds, abort!
 <command>
tftp://%HOSTIP:%TFTPPORT//1238 -Y1000 -y2
</command>
</client>

#
# Verify pseudo protocol after the test has been "shot"
<verify>
<protocol>
opcode: 1
mode: octet
tsize: 0
blksize: 512
timeout: 6
filename: /1238
</protocol>
# 28 = CURLE_OPERATION_TIMEDOUT
<errorcode>
28
</errorcode>
</verify>
</testcase>
