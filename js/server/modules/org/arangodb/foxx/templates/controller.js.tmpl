'use strict';
var Foxx = require('org/arangodb/foxx'),
  ArangoError = require('org/arangodb').ArangoError,
  <%= repository %> = require('<%= repositoryPath %>').Repository,
  <%= model %> = require('<%= modelPath %>').Model,
  joi = require('joi'),
  _ = require('underscore'),
  controller,
  <%= model %>Description = {
    type: joi.string().required().description(
      'The id of the <%= model %>-Item'
    ),
    allowMultiple: false
  },
  <%= repositoryInstance %>;

controller = new Foxx.Controller(applicationContext);

<%= repositoryInstance %> = new <%= repository %>(applicationContext.collection('<%= collectionName %>'), {
  model: <%= model %>
});

/** Lists of all <%= model %>
 *
 * This function simply returns the list of all <%= model %>.
 */
controller.get('/<%= basePath %>', function (req, res) {
  res.json(_.map(<%= repositoryInstance %>.all(), function (model) {
    return model.forClient();
  }));
});

/** Creates a new <%= model %>
 *
 * Creates a new <%= model %>-Item. The information has to be in the
 * requestBody.
 */
controller.post('/<%= basePath %>', function (req, res) {
  var <%= modelInstance %> = req.params('<%= modelInstance %>');
  res.json(<%= repositoryInstance %>.save(<%= modelInstance %>).forClient());
}).bodyParam('<%= modelInstance %>', {
  description: 'The <%= model %> you want to create',
  type: <%= model %>
});

/** Reads a <%= model %>
 *
 * Reads a <%= model %>-Item.
 */
controller.get('/<%= basePath %>/:id', function (req, res) {
  var id = req.params('id');
  res.json(<%= repositoryInstance %>.byId(id).forClient());
}).pathParam('id', <%=model %>Description);

/** Updates a <%= model %>
 *
 * Changes a <%= model %>-Item. The information has to be in the
 * requestBody.
 */
controller.put('/<%= basePath %>/:id', function (req, res) {
  var id = req.params('id'),
  <%= modelInstance %> = req.params('<%= modelInstance %>');
  res.json(<%= repositoryInstance %>.replaceById(id, <%= modelInstance %>));
}).pathParam('id', <%=model %>Description)
.bodyParam('<%= modelInstance %>', {
  description: 'The <%= model %> you want your old one to be replaced with',
  type: <%= model %>
});

/** Removes a <%= model %>
 *
 * Removes a <%= model %>-Item.
 */
controller.del('/<%= basePath %>/:id', function (req, res) {
  var id = req.params('id');
  <%= repositoryInstance %>.removeById(id);
  res.json({ success: true });
}).pathParam('id', <%=model %>Description
).errorResponse(ArangoError, 404, 'The document could not be found');