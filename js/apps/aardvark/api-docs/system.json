{
    "basePath": "/",
    "swaggerVersion": "1.1",
    "apiVersion": "0.1",
    "apis": [
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "Routing information was reloaded successfully. ",
                            "code": "200"
                        }
                    ],
                    "parameters": [],
                    "notes": "<br><br>Reloads the routing information from the collection <em>routing</em>. <br><br>",
                    "summary": "reloads the routing collection",
                    "httpMethod": "POST",
                    "examples": "",
                    "nickname": "reloadsTheRoutingCollection"
                }
            ],
            "path": "/_admin/routing/reload"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "Module cache was flushed successfully. ",
                            "code": "200"
                        }
                    ],
                    "parameters": [],
                    "notes": "<br><br>The call flushes the modules cache on the server. See <em>JSModulesCache</em> for details about this cache. <br><br>",
                    "summary": "flushs the module cache",
                    "httpMethod": "POST",
                    "examples": "",
                    "nickname": "flushsTheModuleCache"
                }
            ],
            "path": "/_admin/modules/flush"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "Time was returned successfully. ",
                            "code": "200"
                        }
                    ],
                    "parameters": [],
                    "notes": "<br><br>The call returns an object with the attribute <em>time</em>. This contains the current system time as a Unix timestamp with microsecond precision. <br><br>",
                    "summary": "returns the system time",
                    "httpMethod": "GET",
                    "examples": "",
                    "nickname": "returnsTheSystemTime"
                }
            ],
            "path": "/_admin/time"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "Echo was returned successfully. ",
                            "code": "200"
                        }
                    ],
                    "parameters": [],
                    "notes": "<br><br>The call returns an object with the following attributes: <br><br>- <em>headers</em>: a list of HTTP headers received<br><br>- <em>requestType</em>: the HTTP request method (e.g. GET)<br><br>- <em>parameters</em>: list of URL parameters received<br><br>",
                    "summary": "returns the current request",
                    "httpMethod": "GET",
                    "examples": "",
                    "nickname": "returnsTheCurrentRequest"
                }
            ],
            "path": "/_admin/echo"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "Statistics were returned successfully. ",
                            "code": "200"
                        }
                    ],
                    "parameters": [],
                    "notes": "<br><br>Returns the statistics information. The returned object contains the statistics figures grouped together according to the description returned by <em>_admin/statistics-description</em>. For instance, to access a figure <em>userTime</em> from the group <em>system</em>, you first select the sub-object describing the group stored in <em>system</em> and in that sub-object the value for <em>userTime</em> is stored in the attribute of the same name. <br><br>In case of a distribution, the returned object contains the total count in <em>count</em> and the distribution list in <em>counts</em>. The sum (or total) of the individual values is returned in <em>sum</em>. <br><br>",
                    "summary": "reads the statistics",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\" >unix> curl --dump - http://localhost:8529/_admin/statistics\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"system\" : { \n    \"minorPageFaults\" : 347455, \n    \"majorPageFaults\" : 217, \n    \"userTime\" : 7.65, \n    \"systemTime\" : 0.72, \n    \"numberOfThreads\" : 15, \n    \"residentSize\" : 34770944, \n    \"virtualSize\" : 3446005760 \n  }, \n  \"client\" : { \n    \"httpConnections\" : 1, \n    \"connectionTime\" : { \n      \"sum\" : 0.0005011558532714844, \n      \"count\" : 1, \n      \"counts\" : [ \n        1, \n        0, \n        0, \n        0 \n      ] \n    }, \n    \"totalTime\" : { \n      \"sum\" : 21.27770185470581, \n      \"count\" : 753, \n      \"counts\" : [ \n        307, \n        325, \n        88, \n        31, \n        2, \n        0, \n        0 \n      ] \n    }, \n    \"requestTime\" : { \n      \"sum\" : 21.14803981781006, \n      \"count\" : 753, \n      \"counts\" : [ \n        308, \n        324, \n        88, \n        31, \n        2, \n        0, \n        0 \n      ] \n    }, \n    \"queueTime\" : { \n      \"sum\" : 0.0317385196685791, \n      \"count\" : 751, \n      \"counts\" : [ \n        751, \n        0, \n        0, \n        0, \n        0, \n        0, \n        0 \n      ] \n    }, \n    \"bytesSent\" : { \n      \"sum\" : 356205, \n      \"count\" : 753, \n      \"counts\" : [ \n        214, \n        443, \n        79, \n        17, \n        0, \n        0 \n      ] \n    }, \n    \"bytesReceived\" : { \n      \"sum\" : 134857, \n      \"count\" : 753, \n      \"counts\" : [ \n        741, \n        12, \n        0, \n        0, \n        0, \n        0 \n      ] \n    } \n  }, \n  \"server\" : { \n    \"uptime\" : 27.67108678817749 \n  }, \n  \"error\" : false, \n  \"code\" : 200 \n}\n\n</code></pre><br>",
                    "nickname": "readsTheStatistics"
                }
            ],
            "path": "/_admin/statistics"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "Description was returned successfully. ",
                            "code": "200"
                        }
                    ],
                    "parameters": [],
                    "notes": "<br><br>Returns a description of the statistics returned by <em>/_admin/statistics</em>. The returned objects contains a list of statistics groups in the attribute <em>groups</em> and a list of statistics figures in the attribute <em>figures</em>. <br><br>A statistics group is described by <br><br>- <em>group</em>: The identifier of the group.- <em>name</em>: The name of the group.- <em>description</em>: A description of the group.<br><br>A statistics figure is described by <br><br>- <em>group</em>: The identifier of the group to which this figure belongs.- <em>identifier</em>: The identifier of the figure. It is unique within the group.- <em>name</em>: The name of the figure.- <em>description</em>: A description of the group.- <em>type</em>: Either <em>current</em>, <em>accumulated</em>, or <em>distribution</em>.- <em>cuts</em>: The distribution vector.- <em>units</em>: Units in which the figure is measured.<br><br>",
                    "summary": "statistics description",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\" >unix> curl --dump - http://localhost:8529/_admin/statistics-description\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"groups\" : [ \n    { \n      \"group\" : \"system\", \n      \"name\" : \"Process Statistics\", \n      \"description\" : \"Statistics about the ArangoDB process\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"name\" : \"Client Statistics\", \n      \"description\" : \"Statistics about the clients connecting to the server.\" \n    }, \n    { \n      \"group\" : \"server\", \n      \"name\" : \"Server Statistics\", \n      \"description\" : \"Statistics about the ArangoDB server\" \n    } \n  ], \n  \"figures\" : [ \n    { \n      \"group\" : \"system\", \n      \"identifier\" : \"userTime\", \n      \"name\" : \"User Time\", \n      \"description\" : \"Amount of time that this process has been scheduled in user mode, measured in cl...\", \n      \"type\" : \"accumulated\", \n      \"units\" : \"seconds\" \n    }, \n    { \n      \"group\" : \"system\", \n      \"identifier\" : \"systemTime\", \n      \"name\" : \"System Time\", \n      \"description\" : \"Amount of time that this process has been scheduled in kernel mode, measured in ...\", \n      \"type\" : \"accumulated\", \n      \"units\" : \"seconds\" \n    }, \n    { \n      \"group\" : \"system\", \n      \"identifier\" : \"numberOfThreads\", \n      \"name\" : \"Number of Threads\", \n      \"description\" : \"Number of threads in this process.\", \n      \"type\" : \"current\", \n      \"units\" : \"number\" \n    }, \n    { \n      \"group\" : \"system\", \n      \"identifier\" : \"residentSize\", \n      \"name\" : \"Resident Set Size\", \n      \"description\" : \"The total size of the number of pages the process has in real memory. This is ju...\", \n      \"type\" : \"current\", \n      \"units\" : \"bytes\" \n    }, \n    { \n      \"group\" : \"system\", \n      \"identifier\" : \"virtualSize\", \n      \"name\" : \"Virtual Memory Size\", \n      \"description\" : \"The size of the virtual memory the process is using.\", \n      \"type\" : \"current\", \n      \"units\" : \"bytes\" \n    }, \n    { \n      \"group\" : \"system\", \n      \"identifier\" : \"minorPageFaults\", \n      \"name\" : \"Minor Page Faults\", \n      \"description\" : \"The number of minor faults the process has made which have not required loading ...\", \n      \"type\" : \"accumulated\", \n      \"units\" : \"number\" \n    }, \n    { \n      \"group\" : \"system\", \n      \"identifier\" : \"majorPageFaults\", \n      \"name\" : \"Major Page Faults\", \n      \"description\" : \"The number of major faults the process has made which have required loading a me...\", \n      \"type\" : \"accumulated\", \n      \"units\" : \"number\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"identifier\" : \"httpConnections\", \n      \"name\" : \"HTTP Client Connections\", \n      \"description\" : \"The number of http connections that are currently open.\", \n      \"type\" : \"current\", \n      \"units\" : \"number\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"identifier\" : \"totalTime\", \n      \"name\" : \"Total Time\", \n      \"description\" : \"Total time needed to answer a request.\", \n      \"type\" : \"distribution\", \n      \"cuts\" : [ \n        0.01, \n        0.05, \n        0.1, \n        0.2, \n        0.5, \n        1 \n      ], \n      \"units\" : \"seconds\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"identifier\" : \"requestTime\", \n      \"name\" : \"Request Time\", \n      \"description\" : \"Request time needed to answer a request.\", \n      \"type\" : \"distribution\", \n      \"cuts\" : [ \n        0.01, \n        0.05, \n        0.1, \n        0.2, \n        0.5, \n        1 \n      ], \n      \"units\" : \"seconds\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"identifier\" : \"queueTime\", \n      \"name\" : \"Queue Time\", \n      \"description\" : \"Queue time needed to answer a request.\", \n      \"type\" : \"distribution\", \n      \"cuts\" : [ \n        0.01, \n        0.05, \n        0.1, \n        0.2, \n        0.5, \n        1 \n      ], \n      \"units\" : \"seconds\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"identifier\" : \"bytesSent\", \n      \"name\" : \"Bytes Sent\", \n      \"description\" : \"Bytes sents for a request.\", \n      \"type\" : \"distribution\", \n      \"cuts\" : [ \n        250, \n        1000, \n        2000, \n        5000, \n        10000 \n      ], \n      \"units\" : \"bytes\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"identifier\" : \"bytesReceived\", \n      \"name\" : \"Bytes Received\", \n      \"description\" : \"Bytes receiveds for a request.\", \n      \"type\" : \"distribution\", \n      \"cuts\" : [ \n        250, \n        1000, \n        2000, \n        5000, \n        10000 \n      ], \n      \"units\" : \"bytes\" \n    }, \n    { \n      \"group\" : \"client\", \n      \"identifier\" : \"connectionTime\", \n      \"name\" : \"Connection Time\", \n      \"description\" : \"Total connection time of a client.\", \n      \"type\" : \"distribution\", \n      \"cuts\" : [ \n        0.1, \n        1, \n        60 \n      ], \n      \"units\" : \"seconds\" \n    }, \n    { \n      \"group\" : \"server\", \n      \"identifier\" : \"uptime\", \n      \"name\" : \"Server Uptime\", \n      \"description\" : \"Number of seconds elapsed since server start.\", \n      \"type\" : \"current\", \n      \"units\" : \"seconds\" \n    } \n  ], \n  \"error\" : false, \n  \"code\" : 200 \n}\n\n</code></pre><br>",
                    "nickname": "statisticsDescription"
                }
            ],
            "path": "/_admin/statistics-description"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "Javascript",
                            "paramType": "body",
                            "required": "true",
                            "name": "body",
                            "description": "The body to be executed. "
                        }
                    ],
                    "notes": "<br><br>Executes the javascript code in the body on the server. ",
                    "summary": "executes a program",
                    "httpMethod": "POST",
                    "examples": "",
                    "nickname": "executesAProgram"
                }
            ],
            "path": "/_admin/execute"
        }
    ]
}
