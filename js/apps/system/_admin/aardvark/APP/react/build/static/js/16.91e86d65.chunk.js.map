{"version":3,"sources":["../../frontend/js/lib/sigma.plugins.fullScreen.js"],"names":["undefined","sigma","utils","pkg","_container","_eventListenerElement","toggleFullScreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","plugins","fullScreen","options","o","container","getElementById","this","btnId","removeEventListener","addEventListener","call","window"],"mappings":"6EACA,YAGA,SAAAA,GACA,aAEA,wBAAAC,MAAA,6BAEAA,MAAAC,MAAAC,IAAA,4BAUA,IAAAC,EAAA,KACAC,EAAA,KAEA,SAAAC,IACAC,SAAAC,mBACAD,SAAAE,sBAAAF,SAAAG,yBAAAH,SAAAI,oBAYAJ,SAAAK,eACAL,SAAAK,iBACOL,SAAAM,iBACPN,SAAAM,mBACON,SAAAO,oBACPP,SAAAO,sBACOP,SAAAQ,sBACPR,SAAAQ,uBAjBAX,EAAAY,kBACAZ,EAAAY,oBACOZ,EAAAa,oBACPb,EAAAa,sBACOb,EAAAc,qBACPd,EAAAc,uBACOd,EAAAe,yBACPf,EAAAe,wBAAAC,QAAAC,sBA+DApB,MAAAqB,QAAAC,WAtCA,SAAAC,GACA,IAAAC,EAAAD,GAAA,GAIApB,EAFAqB,EAAAC,UACA,kBAAAD,EAAAC,UACAD,EAAAC,UAEAnB,SAAAoB,eAAAF,EAAAC,WAGAE,KAAAF,UAGArB,EAAA,KAEAoB,EAAAI,QACAxB,EAAAE,SAAAoB,eAAAF,EAAAI,QAEAC,oBAAA,QAAAxB,GAEAD,EAAA0B,iBAAA,QAAAzB,IAEAA,OAiBC0B,KAAAJ,QACAI,KAAAC","file":"static/js/16.91e86d65.chunk.js","sourcesContent":["/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n;\n(function (undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined') throw 'sigma is not declared'; // Initialize package:\n\n  sigma.utils.pkg('sigma.plugins.fullScreen');\n  /**\n   * Sigma Fullscreen\n   * =============================\n   *\n   * @author Martin de la Taille <https://github.com/Martindelataille>\n   * @author SÃ©bastien Heymann <https://github.com/sheymann>\n   * @version 0.2\n   */\n\n  var _container = null,\n      _eventListenerElement = null;\n\n  function toggleFullScreen() {\n    if (!document.fullscreenElement && // alternative standard method\n    !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n      // current working methods\n      if (_container.requestFullscreen) {\n        _container.requestFullscreen();\n      } else if (_container.msRequestFullscreen) {\n        _container.msRequestFullscreen();\n      } else if (_container.mozRequestFullScreen) {\n        _container.mozRequestFullScreen();\n      } else if (_container.webkitRequestFullscreen) {\n        _container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      }\n    }\n  }\n  /**\n   * This plugin enables the activation of full screen mode by clicking on btn.\n   * If btn does not exist, this plugin will leave the full screen mode.\n   *\n   * @param  {?object} options The configuration. Can contain:\n   *         {?string|DOMElement} options.container A container object or id,\n   *                              otherwise sigma container is used.\n   *         {?string} options.btnId A btn id.\n   */\n\n\n  function fullScreen(options) {\n    var o = options || {};\n\n    if (o.container) {\n      if (typeof o.container === 'object') {\n        _container = o.container;\n      } else {\n        _container = document.getElementById(o.container);\n      }\n    } else {\n      _container = this.container;\n    }\n\n    _eventListenerElement = null; // Get the btn element reference from the DOM\n\n    if (o.btnId) {\n      _eventListenerElement = document.getElementById(o.btnId);\n\n      _eventListenerElement.removeEventListener(\"click\", toggleFullScreen);\n\n      _eventListenerElement.addEventListener(\"click\", toggleFullScreen);\n    } else {\n      toggleFullScreen();\n    }\n  }\n\n  ;\n  /**\n   *  This function kills the fullScreen instance.\n   */\n\n  function killFullScreen() {\n    toggleFullScreen();\n    _container = null;\n    if (_eventListenerElement) _eventListenerElement.removeEventListener(\"click\", toggleFullScreen);\n  }\n\n  ;\n  sigma.plugins.fullScreen = fullScreen;\n}).call(this);\n}.call(window));"],"sourceRoot":""}