commands:
  checkout-arangodb:
    parameters:
      destination:
        type: string
      with-submodules:
        type: boolean
    steps:
    - run:
        command: 'mkdir -p << parameters.destination >>

          cd << parameters.destination >>

          echo << pipeline.git.revision >>

          git init

          git remote add origin https://github.com/arangodb/arangodb.git

          echo "Fetching stuff"

          git fetch --depth 1 origin << pipeline.git.revision >>

          git checkout << pipeline.git.revision >>

          '
        name: Checkout ArangoDB
    - when:
        condition: << parameters.with-submodules >>
        steps:
        - run:
            command: 'cd << parameters.destination >>

              git submodule init

              git submodule update --recursive --depth 1 --jobs 8

              '
            name: Checkout submodules
  checkout-enterprise:
    description: Checkout enterprise code
    parameters:
      destination:
        type: string
    steps:
    - add_ssh_keys:
        fingerprints:
        - f9:49:75:1a:ad:44:89:10:4b:3c:70:70:ba:d3:c3:ce
    - run:
        command: 'mkdir -p << parameters.destination >>

          cd << parameters.destination >>

          git clone git@github.com:arangodb/enterprise.git .

          git reset --hard << pipeline.parameters.enterprise-commit >>

          '
        environment:
          GIT_SSH_COMMAND: ssh -o StrictHostKeyChecking=no
        name: Checkout Enterprise
jobs:
  check-log-ids:
    docker:
    - image: cimg/python:3.11.1
    resource_class: small
    steps:
    - attach_workspace:
        at: .
    - run:
        command: 'python -m pip install --upgrade pip

          pip install pyyaml

          '
        name: Install pyyaml
    - run:
        command: 'python3 utils/checkLogIds.py

          '
        name: Check LogIDs
  clang-format:
    docker:
    - image: alpine:3.15
    resource_class: small
    steps:
    - attach_workspace:
        at: .
    - run:
        command: 'apk add --no-cache git bash coreutils grep clang-extra-tools=12.0.1-r1

          '
        name: Install clang-format
    - run:
        command: clang-format --version
        name: Print clang-format version
    - run:
        command: 'scripts/clang-format-circleci.sh

          '
        name: Run clang-format
    - run:
        command: "OUTCOME_BASE=\"/tmp/clang_format_outcome\"\nOUTCOME_COMMUNITY=$OUTCOME_BASE/community.diff\n\
          OUTCOME_ENTERPRISE=$OUTCOME_BASE/enterprise.diff\nmkdir -p $OUTCOME_BASE\n\
          if [ -n \"$(git status --porcelain)\" ] ; then\n    git diff | tee $OUTCOME_COMMUNITY\n\
          fi\nif [ -n \"$(git -C enterprise status --porcelain)\" ] ; then\n    git\
          \ -C enterprise diff | tee $OUTCOME_ENTERPRISE\nfi\nif [ -f \"$OUTCOME_COMMUNITY\"\
          \ ] || [ -f \"$OUTCOME_ENTERPRISE\" ]; then\n  exit 1\nfi\n"
        name: Store diff
    - store_artifacts:
        path: /tmp/clang_format_outcome
  compile-linux:
    docker:
    - image: << pipeline.parameters.build-docker-tag >>
    environment:
      GIT_SSH_COMMAND: ssh
      SCCACHE_ERROR_LOG: /tmp/sccache.log
      SCCACHE_LOG: info,sccache::cache=debug,sccache::compiler::compiler=debug
      SCCACHE_S3_KEY_PREFIX: << parameters.s3-prefix >>
    parameters:
      build-tests:
        default: true
        type: boolean
      build-v8:
        default: true
        type: boolean
      enterprise:
        type: boolean
      preset:
        type: string
      publish-artifacts:
        default: true
        type: boolean
      resource-class:
        type: string
      s3-prefix:
        default: ''
        type: string
    resource_class: << parameters.resource-class >>
    steps:
    - checkout-arangodb:
        destination: /root/project
        with-submodules: true
    - when:
        condition: << parameters.enterprise >>
        steps:
        - checkout-enterprise:
            destination: /root/project/enterprise
    - run:
        command: sccache -s
        name: Print SCCache Settings
    - run:
        command: 'cmake --preset << parameters.preset >> -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld" -DCMAKE_LIBRARY_PATH=$OPENSSL_ROOT_DIR/lib

          '
        name: Configure
    - run:
        command: "TARGETS=\"<< pipeline.parameters.build-targets >>\"\nif [ << parameters.build-v8\
          \ >> = true ]; then\n  TARGETS=\"$TARGETS << pipeline.parameters.v8-build-targets\
          \ >>\"\nfi\nif [ << parameters.enterprise >> = true ]; then\n  TARGETS=\"\
          $TARGETS << pipeline.parameters.enterprise-build-targets >>\"\nfi\nif [\
          \ << parameters.build-tests >> = true ]; then\n  TARGETS=\"$TARGETS << pipeline.parameters.test-build-targets\
          \ >>\"\nfi\necho \"Building targets: $TARGETS\"\ncmake --build --preset\
          \ << parameters.preset >> --parallel 8 --target $TARGETS\n"
        name: Build
    - run:
        command: 'ls -Ssha build/bin/*.a

          '
        name: Size leaderboard
    - run:
        command: 'find build/ -iname *.a -delete || true

          find build/ -iname *.o -delete || true

          '
        name: Cleanup build directory
    - run:
        command: sccache -s
        name: SCCache Statistics
    - store_artifacts:
        path: /tmp/sccache.log
    - when:
        condition: << parameters.publish-artifacts >>
        steps:
        - store_artifacts:
            path: build/bin/arango*
        - persist_to_workspace:
            paths:
            - build/compile_commands.json
            - CMakePresets.json
            - build/
            - scripts/
            - js/
            - enterprise/js
            - etc/
            - tests/js
            - enterprise/tests/js
            - utils
            - UnitTests
            - 3rdParty/iresearch/tests/resources
            - 3rdParty/rta-makedata
            root: .
  compile-mac:
    macos:
      xcode: 14.2.0
    parameters:
      build-tests:
        default: true
        type: boolean
      enterprise:
        default: false
        type: boolean
      preset:
        type: string
      publish-artifacts:
        default: true
        type: boolean
      resource:
        type: string
    resource_class: << parameters.resource >>
    steps:
    - checkout-arangodb:
        destination: ~/project
        with-submodules: true
    - when:
        condition: << parameters.enterprise >>
        steps:
        - checkout-enterprise:
            destination: ~/project/enterprise
    - run:
        command: 'brew install cmake llvm@14

          '
        name: Install llvm
    - run:
        command: 'export MAC_OPENSSL=`grep OPENSSL_MACOS ~/project/VERSIONS|cut -d
          ''"'' -f 2-2`

          wget https://www.openssl.org/source/openssl-$MAC_OPENSSL.tar.gz --directory-prefix=/tmp

          mkdir ~/openssl

          tar zvxf /tmp/openssl-$MAC_OPENSSL.tar.gz -C ~/openssl --strip-components
          1

          cd ~/openssl/

          ./config

          make -j8

          '
        name: Install OpenSSL
    - run:
        command: 'export PATH="/opt/homebrew/opt/llvm@14/bin:/usr/local/opt/llvm@14/bin:$PATH"

          export MACOSX_DEPLOYMENT_TARGET=11.0

          export OPENSSL_ROOT_DIR=~/openssl

          mkdir ~/build

          cmake --preset << parameters.preset >> -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          -DCMAKE_LIBRARY_PATH=~/openssl/ -DSTATIC_EXECUTABLES=Off -DCMAKE_EXE_LINKER_FLAGS="-Wl"
          -S ~/project -B ~/build

          '
        name: Configure
    - run:
        command: 'echo "Building targets: client-tools"

          cmake --build ~/build --parallel 8 --target client-tools

          '
        name: Build
  compile-windows:
    environment:
      GIT_SSH_COMMAND: ssh
      SCCACHE_ERROR_LOG: /tmp/sccache.log
      SCCACHE_LOG: info,sccache::cache=debug,sccache::compiler::compiler=debug
    machine: true
    parameters:
      build-tests:
        default: true
        type: boolean
      preset:
        type: string
      publish-artifacts:
        default: true
        type: boolean
    resource_class: arangodb/win
    shell: powershell.exe
    steps:
    - checkout-arangodb:
        destination: D:/CircleCI/project
        with-submodules: true
    - checkout-enterprise:
        destination: D:/CircleCI/project/enterprise
    - run:
        command: 'mkdir build

          # make sure we have the latest image!

          docker pull arangodb/build-windows-x64:10.0.17763.4737-VS-17.3.3-OpenSSL-3.1.3

          # TODO - use preset

          docker run --rm --isolation process -v D:/CircleCI/project:C:/project -w
          C:/project/build arangodb/build-windows-x64:10.0.17763.4737-VS-17.3.3-OpenSSL-3.1.3
          cmake -G ''Visual Studio 17 2022'' -T ''v143,host=x64'' -DUSE_MAINTAINER_MODE=On
          -DUSE_GOOGLE_TESTS=On -DUSE_ENTERPRISE=On -DCMAKE_BUILD_TYPE=RelWithDebInfo
          -DPACKAGING=NSIS -DCMAKE_INSTALL_PREFIX=/ -DSKIP_PACKAGING=On -DUSE_FAILURE_TESTS=On
          -DSTATIC_EXECUTABLES=On -DOPENSSL_USE_STATIC_LIBS=On -DUSE_STRICT_OPENSSL_VERSION=On
          ..

          '
        name: Configure
        shell: powershell.exe
    - run:
        command: 'docker run --rm --isolation process -v D:/CircleCI/project:C:/project
          -w C:/project/build arangodb/build-windows-x64:10.0.17763.4737-VS-17.3.3-OpenSSL-3.1.3
          cmake --build . --config `"RelWithDebInfo`" --parallel -- /p:CL_MPcount=24

          '
        name: Build
        shell: powershell.exe
    - run:
        command: 'cd D:/CircleCI/project/build

          Get-ChildItem *.pdb -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.lib -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.exp -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.obj -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.vcxproj -Recurse | foreach { Remove-Item -Path $_.FullName
          }

          Get-ChildItem *.filters -Recurse | foreach { Remove-Item -Path $_.FullName
          }

          Get-ChildItem *.sln -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.pch -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.ifc -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.ilk -Recurse | foreach { Remove-Item -Path $_.FullName }

          Get-ChildItem *.tlog -Recurse | where { ! $_.PSIsContainer } | foreach {
          Remove-Item -Path $_.FullName }

          Get-ChildItem *.dat -Recurse | foreach { Remove-Item -Path $_.FullName }

          '
        name: Cleanup build directory
        shell: powershell.exe
    - run:
        command: "cd D:/CircleCI/project/\n7z a -r ./workspace CMakePresets.json build/\
          \ scripts/ js/ enterprise/js etc/ tests/js enterprise/tests/js utils UnitTests\
          \ 3rdParty/iresearch/tests/resources 3rdParty/rta-makedata            \n"
        name: Save workspace for development
        shell: powershell.exe
    - when:
        condition: << parameters.publish-artifacts >>
        steps:
        - store_artifacts:
            path: D:/CircleCI/project/workspace.7z
        - store_artifacts:
            destination: windows
            path: D:/CircleCI/project/build/bin/RelWithDebInfo/
        - persist_to_workspace:
            paths:
            - CMakePresets.json
            - build/
            - scripts/
            - js/
            - enterprise/js
            - etc/
            - tests/js
            - enterprise/tests/js
            - utils
            - UnitTests
            - 3rdParty/iresearch/tests/resources
            - 3rdParty/rta-makedata
            root: D:/CircleCI/project/
  eslint:
    docker:
    - image: alpine:3.17
    resource_class: small
    steps:
    - attach_workspace:
        at: .
    - run:
        command: 'apk add --no-cache npm

          npm -g install eslint@8.46.0

          '
        name: Install eslint
    - run:
        command: 'utils/eslint.sh

          '
        name: Run eslint
  minimal-checkout:
    docker:
    - image: cimg/base:current
    environment:
      GIT_SSH_COMMAND: ssh -v
    resource_class: small
    steps:
    - checkout-arangodb:
        destination: /home/circleci/project
        with-submodules: false
    - checkout-enterprise:
        destination: /home/circleci/project/enterprise
    - persist_to_workspace:
        paths:
        - .
        root: .
  run-cppcheck:
    docker:
    - image: << pipeline.parameters.build-docker-tag >>
    resource_class: medium+
    steps:
    - run:
        command: "mkdir -p /root/workspace/ \nmkdir -p /root/project/ \n"
        name: Prepare container
    - attach_workspace:
        at: /root/workspace/
    - checkout-arangodb:
        destination: /root/project
        with-submodules: true
    - checkout-enterprise:
        destination: /root/project/enterprise
    - run:
        command: "ln -s /root/workspace/build/ /root/project/\ncd /root/project/ \n\
          utils/cppcheck-circleci.sh /root/workspace/build/compile_commands.json \
          \ \n"
        name: Run cppcheck
    - run:
        command: "cd /root/project/ \nsed -i 's/\\/root\\/project\\/\\/root\\/project\\\
          ///g' cppcheck.xml\nsed -i 's/\\/root\\/project\\///g' cppcheck.xml\ncppcheck_junit\
          \ cppcheck.xml cppcheck-junit.xml\n"
        name: Format result
        when: always
    - store_artifacts:
        path: /root/project/cppcheck.xml
    - store_test_results:
        path: /root/project/cppcheck-junit.xml
  run-hotbackup-tests:
    docker:
    - image: arangodb/test-ubuntu:22.04-6c4e824d8d2
    parameters:
      size:
        type: string
    resource_class: << parameters.size >>
    steps:
    - attach_workspace:
        at: .
    - run:
        command: ulimit -c unlimited
        name: Enabled coredumps
    - run:
        command: 'pip install -r scripts/toolbox/requirements.txt

          '
        name: Install dependencies
    - run:
        command: "python3 scripts/toolbox/HotBackupConsistencyTest.py \\\n  --arangod\
          \ $PWD/build/bin/arangod \\\n  --topdir $PWD \\\n  --workdir /tmp/test-workdir\n"
        name: Run HotBackup tests
    - run:
        command: 'rm -rf /tmp/test-workdir

          '
        name: Cleanup
    - store_artifacts:
        destination: hotbackup-test
        path: /tmp/test-workdir
  run-linux-tests:
    docker:
    - image: arangodb/test-ubuntu:22.04-6c4e824d8d2
    parallelism: << parameters.buckets >>
    parameters:
      buckets:
        default: 1
        type: integer
      cluster:
        type: boolean
      extraArgs:
        default: ''
        type: string
      size:
        type: string
      suiteName:
        type: string
      suites:
        type: string
    resource_class: << parameters.size >>
    steps:
    - attach_workspace:
        at: .
    - run:
        command: ulimit -c unlimited
        name: Enabled coredumps
    - run:
        command: "mkdir work\n# Note: we need the leading space for extraArgs to avoid\
          \ a parsing issue in argparse\npython3 scripts/test/test_launch_controller.py\
          \ << parameters.suites >> \\\n  --testBuckets $CIRCLE_NODE_TOTAL/$CIRCLE_NODE_INDEX\
          \ \\\n  --cluster << parameters.cluster >> \\\n  --extraArgs \" << parameters.extraArgs\
          \ >>\" \\\n  --definition tests/test-definitions.txt\n"
        name: Run << parameters.suiteName >> tests
        no_output_timeout: 20m
    - run:
        command: 'mkdir test-results

          find testrunXml -iname *xml -exec cp "{}" --target-directory=./test-results
          \;

          '
        name: Copy test results
        when: always
    - store_artifacts:
        destination: << parameters.suiteName >>
        path: ./work/
    - store_test_results:
        path: ./test-results/
  run-windows-tests:
    executor:
      name: win/default
      size: << parameters.size >>
    parallelism: << parameters.buckets >>
    parameters:
      buckets:
        default: 1
        type: integer
      cluster:
        type: boolean
      extraArgs:
        default: ''
        type: string
      size:
        type: string
      suiteName:
        type: string
      suites:
        type: string
    steps:
    - attach_workspace:
        at: .
    - run: Write-Host 'Hello, Windows'
    - run:
        command: "mkdir work\n# Note: we need the leading space for extraArgs to avoid\
          \ a parsing issue in argparse\npython3 scripts/test/test_launch_controller.py\
          \ << parameters.suites >> `\n  --testBuckets $CIRCLE_NODE_TOTAL/$CIRCLE_NODE_INDEX\
          \ `\n  --cluster << parameters.cluster >> `\n  --extraArgs \" << parameters.extraArgs\
          \ >>\" `\n  --definition tests/test-definitions.txt\n"
        name: Run << parameters.suiteName >> tests
        no_output_timeout: 20m
    - run:
        command: 'mkdir test-results

          find testrunXml -iname *xml -exec cp "{}" --target-directory=./test-results
          \;

          '
        name: Copy test results
        when: always
    - store_artifacts:
        destination: << parameters.suiteName >>
        path: ./work/
    - store_test_results:
        path: ./test-results/
orbs:
  win: circleci/windows@5.0
parameters:
  build-docker-tag:
    default: arangodb/build-alpine:3.16-gcc11.2-openssl3.1.3-4999848556c
    type: string
  build-targets:
    default: arangod arangoimport arangoexport arangodump arangorestore arangobench
    type: string
  enterprise-build-targets:
    default: arangobackup
    type: string
  enterprise-commit:
    default: ''
    type: string
  test-build-targets:
    default: arangodbtests fuertetest
    type: string
  v8-build-targets:
    default: arangosh
    type: string
version: 2.1
workflows:
  lint:
    jobs:
    - minimal-checkout:
        name: minimal-checkout
    - check-log-ids:
        name: check-log-ids
        requires:
        - minimal-checkout
    - clang-format:
        name: clang-format
        requires:
        - minimal-checkout
    - eslint:
        name: eslint
        requires:
        - minimal-checkout
  x64-enterprise-windows-pr:
    jobs:
    - compile-windows:
        build-tests: true
        context:
        - sccache-aws-bucket
        name: build-windows-ee-x64
        preset: enterprise-pr
    - run-windows-tests:
        cluster: false
        name: test-ee-single-single_server_only-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: single_server_only
        suites: BackupAuthNoSysTests,BackupAuthSysTests,BackupNoAuthSysTests,arangosh,arangobench,permissions,paths_server,version,active_failover
    - run-windows-tests:
        cluster: false
        extraArgs: --extraArgs:log.level replication=trace
        name: test-ee-single-replication_fuzz-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication_fuzz
        suites: replication_fuzz
    - run-windows-tests:
        cluster: false
        extraArgs: --extraArgs:log.level replication=trace
        name: test-ee-single-replication_ongoing-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication_ongoing
        suites: replication_ongoing
    - run-windows-tests:
        cluster: false
        extraArgs: --extraArgs:log.level replication=trace
        name: test-ee-single-replication_ongoing_frompresent-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication_ongoing_frompresent
        suites: replication_ongoing_frompresent
    - run-windows-tests:
        cluster: false
        extraArgs: --extraArgs:log.level replication=trace
        name: test-ee-single-replication_ongoing_global-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication_ongoing_global
        suites: replication_ongoing_global
    - run-windows-tests:
        cluster: false
        extraArgs: --extraArgs:log.level replication=trace
        name: test-ee-single-replication_ongoing_global_spec-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication_ongoing_global_spec
        suites: replication_ongoing_global_spec
    - run-windows-tests:
        cluster: false
        extraArgs: --extraArgs:log.level replication=trace
        name: test-ee-single-replication_static-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication_static
        suites: replication_static
    - run-windows-tests:
        buckets: 2
        cluster: false
        extraArgs: --extraArgs:log.level replication=trace
        name: test-ee-single-replication_sync-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication_sync
        suites: replication_sync
    - run-windows-tests:
        cluster: false
        name: test-ee-single-shell_replication-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_replication
        suites: shell_replication
    - run-windows-tests:
        cluster: false
        name: test-ee-single-http_replication-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: http_replication
        suites: http_replication
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-agency,agency-restart-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: agency,agency-restart
        suites: agency,agency-restart
    - run-windows-tests:
        cluster: false
        name: test-ee-single-authentication-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: authentication
        suites: authentication
    - run-windows-tests:
        cluster: false
        extraArgs: --skipEndpointsIpv6 true
        name: test-ee-single-endpoints-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: endpoints
        suites: endpoints
    - run-windows-tests:
        buckets: 6
        cluster: false
        name: test-ee-single-recovery-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: recovery
        suites: recovery
    - run-windows-tests:
        cluster: false
        extraArgs: $EncryptionAtRest
        name: test-ee-single-v8-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: v8
        suites: shell_server_v8,shell_v8
    - run-windows-tests:
        cluster: false
        extraArgs: $EncryptionAtRest
        name: test-ee-single-shell_api-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_api
        suites: shell_api
    - run-windows-tests:
        cluster: false
        extraArgs: $EncryptionAtRest
        name: test-ee-single-shell_api_multi-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_api_multi-http
        suites: shell_api_multi
    - run-windows-tests:
        cluster: false
        extraArgs: $EncryptionAtRest --protocol ssl
        name: test-ee-single-shell_api_multi-https-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_api_multi-https
        suites: shell_api_multi
    - run-windows-tests:
        buckets: 2
        cluster: false
        extraArgs: $EncryptionAtRest
        name: test-ee-single-shell_client-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client
        suites: shell_client
    - run-windows-tests:
        cluster: false
        extraArgs: --http2 true
        name: test-ee-single-shell_client_multi-http2-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_multi-http2
        suites: shell_client_multi
    - run-windows-tests:
        cluster: false
        extraArgs: --http true
        name: test-ee-single-shell_client_multi-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_multi-http
        suites: shell_client_multi
    - run-windows-tests:
        cluster: false
        extraArgs: --vst true
        name: test-ee-single-shell_client_multi-vst-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_multi-vst
        suites: shell_client_multi
    - run-windows-tests:
        cluster: false
        extraArgs: --http true $EncryptionAtRest
        name: test-ee-single-shell_client_transaction-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_transaction-http
        suites: shell_client_transaction
    - run-windows-tests:
        cluster: false
        extraArgs: --http2 true
        name: test-ee-single-shell_client_transaction-http2-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_transaction-http2
        suites: shell_client_transaction
    - run-windows-tests:
        cluster: false
        extraArgs: --vst true
        name: test-ee-single-shell_client_transaction-vst-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_transaction-vst
        suites: shell_client_transaction
    - run-windows-tests:
        cluster: false
        extraArgs: --http true
        name: test-ee-single-shell_client_traffic-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_traffic-http
        suites: shell_client_traffic
    - run-windows-tests:
        cluster: false
        extraArgs: --http2 true
        name: test-ee-single-shell_client_traffic-http2-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_traffic-http2
        suites: shell_client_traffic
    - run-windows-tests:
        cluster: false
        extraArgs: --vst true
        name: test-ee-single-shell_client_traffic-vst-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_traffic-vst
        suites: shell_client_traffic
    - run-windows-tests:
        cluster: false
        extraArgs: http true --protocol ssl
        name: test-ee-single-shell_client_traffic-ssl-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_traffic-ssl-http
        suites: shell_client_traffic
    - run-windows-tests:
        cluster: false
        extraArgs: --http2 true --protocol ssl
        name: test-ee-single-shell_client_traffic-ssl-http2-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_traffic-ssl-http2
        suites: shell_client_traffic
    - run-windows-tests:
        cluster: false
        extraArgs: --vst true --protocol ssl
        name: test-ee-single-shell_client_traffic-ssl-vst-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_traffic-ssl-vst
        suites: shell_client_traffic
    - run-windows-tests:
        buckets: 17
        cluster: false
        extraArgs: --http true
        name: test-ee-single-shell_client_aql-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_aql-http
        suites: shell_client_aql
    - run-windows-tests:
        buckets: 17
        cluster: false
        extraArgs: --http2 true
        name: test-ee-single-shell_client_aql-http2-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_aql-http2
        suites: shell_client_aql
    - run-windows-tests:
        buckets: 17
        cluster: false
        extraArgs: --vst true
        name: test-ee-single-shell_client_aql-vst-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_aql-vst
        suites: shell_client_aql
    - run-windows-tests:
        buckets: 17
        cluster: false
        extraArgs: --encryptionAtRest true
        name: test-ee-single-shell_client_aql-encrypt-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_aql-encrypt
        suites: shell_client_aql
    - run-windows-tests:
        buckets: 3
        cluster: false
        name: test-ee-single-shell_server-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_server
        suites: shell_server
    - run-windows-tests:
        cluster: false
        name: test-ee-single-gtest_iresearch-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: gtest_iresearch
        suites: gtest_iresearch
    - run-windows-tests:
        cluster: false
        name: test-ee-single-gtest_arangodb-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: gtest_arangodb
        suites: gtest_arangodb
    - run-windows-tests:
        cluster: false
        name: test-ee-single-fuerte-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: fuerte
        suites: fuerte
    - run-windows-tests:
        cluster: false
        name: test-ee-single-rta_makedata-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: rta_makedata
        suites: rta_makedata
    - run-windows-tests:
        cluster: false
        extraArgs: --activeFailover true
        name: test-ee-single-rta_makedata-afo-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: rta_makedata-afo
        suites: rta_makedata
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-arangobench-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: arangobench
        suites: arangobench
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true parallelity=8
        name: test-ee-cluster-chaos-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: chaos
        suites: chaos
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true --forceJson true
        name: test-ee-cluster-restart-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: restart
        suites: restart
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-load_balancing-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: load_balancing
        suites: load_balancing
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-load_balancing_auth-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: load_balancing_auth
        suites: load_balancing_auth
    - run-windows-tests:
        cluster: true
        name: test-ee-cluster-replication2_client-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication2_client
        suites: replication2_client
    - run-windows-tests:
        buckets: 3
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-replication2_server-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: replication2_server
        suites: replication2_server
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-resilience_analyzers-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: resilience_analyzers
        suites: resilience_analyzers
    - run-windows-tests:
        buckets: 2
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-resilience_failover-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: resilience_failover
        suites: resilience_failover
    - run-windows-tests:
        buckets: 3
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-resilience_move-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: resilience_move
        suites: resilience_move
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-resilience_sharddist-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: resilience_sharddist
        suites: resilience_sharddist
    - run-windows-tests:
        buckets: 8
        cluster: true
        name: test-ee-cluster-recovery_cluster-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: recovery_cluster
        suites: recovery_cluster
    - run-windows-tests:
        cluster: true
        extraArgs: $EncryptionAtRest
        name: test-ee-cluster-shell_api-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_api
        suites: shell_api
    - run-windows-tests:
        cluster: true
        extraArgs: $EncryptionAtRest
        name: test-ee-cluster-shell_api_multi-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_api_multi-http
        suites: shell_api_multi
    - run-windows-tests:
        cluster: true
        extraArgs: $EncryptionAtRest --protocol ssl
        name: test-ee-cluster-shell_api_multi-https-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_api_multi-https
        suites: shell_api_multi
    - run-windows-tests:
        cluster: true
        extraArgs: --http true
        name: test-ee-cluster-shell_client_multi-http-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_multi-http
        suites: shell_client_multi
    - run-windows-tests:
        cluster: true
        extraArgs: --http2 true
        name: test-ee-cluster-shell_client_multi-http2-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_multi-http2
        suites: shell_client_multi
    - run-windows-tests:
        cluster: true
        extraArgs: --vst true
        name: test-ee-cluster-shell_client_multi-vst-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_multi-vst
        suites: shell_client_multi
    - run-windows-tests:
        buckets: 17
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-shell_client_aql-x64
        requires:
        - build-windows-ee-x64
        size: large
        suiteName: shell_client_aql
        suites: shell_client_aql
    - run-windows-tests:
        buckets: 5
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-shell_client-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client
        suites: shell_client
    - run-windows-tests:
        buckets: 5
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-shell_client_transaction-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_transaction
        suites: shell_client_transaction
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-shell_client_replication2_recovery-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: shell_client_replication2_recovery
        suites: shell_client_replication2_recovery
    - run-windows-tests:
        buckets: 6
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-shell_server-x64
        requires:
        - build-windows-ee-x64
        size: large
        suiteName: shell_server
        suites: shell_server
    - run-windows-tests:
        cluster: true
        name: test-ee-cluster-rta_makedata-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: rta_makedata
        suites: rta_makedata
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-import_export-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: import_export
        suites: importing,export
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-import_export-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: import_export
        suites: importing,export
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-hot_backup-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: hot_backup
        suites: hot_backup
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-hot_backup-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: hot_backup
        suites: hot_backup
    - run-windows-tests:
        buckets: 3
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-server_parameters-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: server_parameters
        suites: server_parameters
    - run-windows-tests:
        buckets: 6
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-server_parameters-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: server_parameters
        suites: server_parameters
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-server_permissions,server_secrets-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: server_permissions,server_secrets
        suites: server_permissions,server_secrets
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-server_permissions,server_secrets-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: server_permissions,server_secrets
        suites: server_permissions,server_secrets
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump
        suites: dump
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump
        suites: dump
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_authentication-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_authentication
        suites: dump_authentication
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_authentication-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_authentication
        suites: dump_authentication
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_jwt-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_jwt
        suites: dump_jwt
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_jwt-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_jwt
        suites: dump_jwt
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_multiple-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_multiple
        suites: dump_multiple
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_multiple-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_multiple
        suites: dump_multiple
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_non_parallel-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_non_parallel
        suites: dump_non_parallel
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_non_parallel-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_non_parallel
        suites: dump_non_parallel
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_maskings-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_maskings
        suites: dump_maskings
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_maskings-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_maskings
        suites: dump_maskings
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_encrypted-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_encrypted
        suites: dump_encrypted
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_encrypted-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_encrypted
        suites: dump_encrypted
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_mixed_cluster_single-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_mixed_cluster_single
        suites: dump_mixed_cluster_single
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_mixed_cluster_single-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_mixed_cluster_single
        suites: dump_mixed_cluster_single
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_mixed_single_cluster-x64
        requires:
        - build-windows-ee-x64
        size: large
        suiteName: dump_mixed_single_cluster
        suites: dump_mixed_single_cluster
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_mixed_single_cluster-x64
        requires:
        - build-windows-ee-x64
        size: large
        suiteName: dump_mixed_single_cluster
        suites: dump_mixed_single_cluster
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_with_crashes-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_with_crashes
        suites: dump_with_crashes
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_with_crashes-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_with_crashes
        suites: dump_with_crashes
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-dump_with_crashes_non_parallel-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_with_crashes_non_parallel
        suites: dump_with_crashes_non_parallel
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-dump_with_crashes_non_parallel-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: dump_with_crashes_non_parallel
        suites: dump_with_crashes_non_parallel
    - run-windows-tests:
        cluster: true
        extraArgs: --dumpAgencyOnError true
        name: test-ee-cluster-audit-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: audit
        suites: audit_client,audit_server
    - run-windows-tests:
        cluster: false
        extraArgs: --dumpAgencyOnError true
        name: test-ee-single-audit-x64
        requires:
        - build-windows-ee-x64
        size: medium
        suiteName: audit
        suites: audit_client,audit_server
