version: 2.1

setup: true

orbs:
  continuation: circleci/continuation@0.3.1

parameters:
  enterprise-branch:
    type: string
    # we use an empty string as default. In this case we check if the enterprise repo
    # contains a branch with the same name as the arangodb repo. If this is the case
    # we use it, otherwise we fall back to "devel".
    default: ""

# our defined job, and its steps
jobs:
  setup:
    docker:
      - image: cimg/python:3.11.1
    executor: continuation/default
    parameters:
      definitions:
        type: string
      default-enterprise-branch:
        type: string
        default: "devel"
    steps:
      - run:
          name: Checkout
          command: |
            # We do not want to clone the whole repository since we only need a few files.
            # Unfortunately GitHub does not support the git-archive protocol, so we need to fetch the required files by hand.
            (mkdir .circleci && cd .circleci && curl https://api.github.com/repos/arangodb/arangodb/contents/.circleci?ref=$CIRCLE_SHA1 | jq ".[].download_url" | xargs wget)
            (mkdir tests && cd tests && wget https://raw.githubusercontent.com/arangodb/arangodb/$CIRCLE_SHA1/<< parameters.definitions >>)
      - run:
          name: Generate config
          command: |
            pip install pyyaml
            python3 ".circleci/generate_config.py" -o generated_config.yml ./.circleci/base_config.yml << parameters.definitions >>

      - continuation/continue:
          configuration_path: generated_config.yml # use newly generated config to continue
          parameters: '{"default-enterprise-branch": "<< parameters.default-enterprise-branch >>"}'

# our single workflow, that triggers the setup job defined above
workflows:
  setup:
    when:
      or:
        - equal: [ staging/replication-2.0, << pipeline.git.branch >> ]
        - equal: [ api, << pipeline.trigger_source >> ]
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - setup:
          definitions: "tests/test-definitions.txt"
  setup-rlog:
    when:
      and:
        - matches:
            pattern: /^(bug-fix|feature|chore)\/cinfra-.*$/
            value: << pipeline.git.branch >>
        - not:
            equal: [ api, << pipeline.trigger_source >> ]
    jobs:
      - setup:
          name: Prepare CINFRA test set
          definitions: "tests/test-definitions-rlog.txt"
          default-enterprise-branch: "staging/replication-2.0"
