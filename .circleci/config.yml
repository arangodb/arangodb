version: 2.1

jobs:
  compile-linux-community:
    parameters:
      preset:
        type: string
    docker:
      - image: arangodb/build-alpine-x86_64:gcc11.2-openssl1.1.1s
    resource_class: xlarge
    environment:
      GIT_SSH_COMMAND: ssh -v
    steps:
      - run: git clone --depth 1 https://github.com/arangodb/arangodb.git -b "$CIRCLE_BRANCH" --recurse-submodules --shallow-submodules -j 8 /root/project
      - run:
          name: Print CCache Settings
          command: ccache -p
      - restore_cache:
          keys:
            - ccache-v1-docker-r2-{{ .Branch }}-{{ .Revision }}
            - ccache-v1-docker-r2-{{ .Branch }}-
            - ccache-v1-docker-r2
      - run:
          name: Zero CCache Statistics
          command: ccache -z
      - run:
          name: Configure
          command: |
            cmake --preset << parameters.preset >> -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld" -DSTATIC_EXECUTABLES=On
      - run:
          name: Build
          command: |
            cmake --build --preset << parameters.preset >> --parallel 8 --target arangodbtests_replication2_pure
      - run:
          name: CCache Statistics
          command: ccache -s
      - store_artifacts:
          path: build-presets/<< parameters.preset >>/bin/arangodbtests_replication2_pure
      - save_cache:
          when: always
          key: ccache-v1-docker-r2-{{ .Branch }}-{{ .Revision }}
          paths:
            - /root/.cache/ccache
      - persist_to_workspace:
          root: .
          paths:
            - build-presets/<< parameters.preset >>/bin
            - scripts/
            - js/
            - etc/
            - tests/js
            - utils
            - UnitTests
            - 3rdParty/iresearch/tests/resources

  run-gtest-executable-linux:
    parameters:
      executable:
        type: string
      filter:
        type: string
      size:
        type: string
        default: small
      shuffle:
        type: string
        default: ""
    docker:
      - image: cimg/base:2022.12
    resource_class: << parameters.size >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Enabled coredumps
          command: ulimit -c unlimited
      - run:
          name: Run GTest
          command: |
            << parameters.executable >> --gtest_filter=<< parameters.filter >> --gtest_output=xml << parameters.shuffle >>
      - run:
          command: |
            mkdir -p /tmp/core_dumps
            cp core.* /tmp/core_dumps
          when: on_fail
      - store_artifacts:
          path: /tmp/core_dumps
      - store_test_results:
          path: test_detail.xml

workflows:
  replication2-pr:
    when:
      matches:
        pattern: /^(bug-fix|feature|chore)\/cinfra-.*$/
        value: << pipeline.git.branch >>
    jobs:
      - compile-linux-community:
          name: build replication2 test pure
          preset: pr-replication-2-pure
      - run-gtest-executable-linux:
          name: replication 2 pure tests
          executable: 'build-presets/pr-replication-2-pure/bin/arangodbtests_replication2_pure'
          filter: '*'
          size: medium
          requires:
            - build replication2 test pure
