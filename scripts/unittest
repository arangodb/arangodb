#!/usr/bin/env bash
export PID=$$

SED=sed
isMac=0
if test "$(uname)" == "Darwin"; then
    isMac=1
    SED=gsed
fi

if test -n "$ORIGINAL_PATH"; then
    # running in cygwin...
    PS='\'
    export EXT=".exe"
else
    export EXT=""
    PS='/'
fi;

export PORT=`expr 1024 + $RANDOM`

NUMA=""

if $(which numactl > /dev/null 2>&1); then
    NUMA="numactl --interleave=all"
fi

if [ `uname -s` == "Darwin" ]; then
  EXEC_PATH="$(dirname "$(dirname "$0")")"
else
  EXEC_PATH="$(dirname "$(dirname "$(readlink -m "$0")")")"
fi

get_single_long_opt () {
    opt="$1"; shift
    args=("$@")
    i=0
    for arg in "${args[@]}"; do
        if [ "$arg" = "$opt" ]; then
            param="${args[$(($i+1))]}"
        fi
        i="$(($i+1))"
    done
    echo "$param"
}

BUILD_DIR_PARAM="$(get_single_long_opt --build "$@")"

declare -a EXTRA_ARGS

guessed_arangosh_location=""

if [ -z "${ARANGOSH}" ];  then
    if ! [ -z "${BUILD_DIR_PARAM}" ] && [ -x "${BUILD_DIR_PARAM}"/bin/arangosh -a ! -d "${BUILD_DIR_PARAM}"/bin/arangosh ]; then
        ARANGOSH="${BUILD_DIR_PARAM}/bin/arangosh${EXT}"
    elif [ -x build/bin/arangosh -a ! -d build/bin/arangosh ];  then
        ARANGOSH="build/bin/arangosh${EXT}"
    elif [ -x bin/arangosh -a ! -d bin/arangosh ];  then
        ARANGOSH="bin/arangosh${EXT}"
    elif [ -x arangosh -a ! -d arangosh ]; then
        ARANGOSH="arangosh${EXT}"
    elif [ -x usr/bin/arangosh -a ! -d usr/bin/arangosh ];  then
        ARANGOSH="usr/bin/arangosh${EXT}"
    else
        ARANGOSH="$(find "${EXEC_PATH}" -name "arangosh${EXT}" -perm -001 -type f | head -n 1)"
        [ -x "${ARANGOSH}" ] || {
          echo "$0: cannot locate arangosh"
          exit 1
        }
        guessed_arangosh_location=1
        echo "WARNING: Using guessed arangosh location $ARANGOSH"
    fi
fi

[ "$(uname -s)" != "Darwin" -a -x "${ARANGOSH}" ] && ARANGOSH="$(readlink -m "${ARANGOSH}")"
[ "$(uname -s)" = "Darwin" -a -x "${ARANGOSH}" ] && ARANGOSH="$(cd -P -- "$(dirname -- "${ARANGOSH}")" && pwd -P)/$(basename -- "${ARANGOSH}")"

if [ -z "${BUILD_DIR_PARAM}" ]; then
  BUILD_PATH="$(dirname "$(dirname "${ARANGOSH}")")"
  BUILD_PATH="${BUILD_PATH#${EXEC_PATH}/}"

  if test -n "$ORIGINAL_PATH"; then
    # running in cygwin...
      BUILD_PATH=$(cygpath --windows "$BUILD_PATH")
  fi
  EXTRA_ARGS=("--build" "${BUILD_PATH}")
  if ! [ -z "$guessed_arangosh_location" ]; then
      echo "WARNING: Using guessed build dir location $BUILD_PATH"
  fi
fi

# fiddle in suppressions for sanitizers if not already set from an
# outside script. this can populate the environment variables
# - ASAN_OPTIONS
# - UBSAN_OPTIONS
# - LSAN_OPTIONS
# - TSAN_OPTIONS
if [ "$(uname -s)" != "Darwin" ]; then
  for v in ASAN UBSAN LSAN TSAN; 
    do
      # check if environment variable ${v}_OPTIONS is set or not
      NAME="${v}_OPTIONS";
      if [[ ! -v "${NAME}" ]]; then
        # variable is not yet set
        SUPPRESSIONS_PATH="$(realpath $(dirname ..))"
        SUPPRESSIONS_FILE="${SUPPRESSIONS_PATH}${PS}$(echo "${v}" | tr "[:upper:]" "[:lower:]")_arangodb_suppressions.txt"
        # echo ${NAME}="suppressions=${SUPPRESSIONS_FILE}"
        export ${NAME}="suppressions=${SUPPRESSIONS_FILE}"
      fi
    done
fi

(
  cd "${EXEC_PATH}"
  exec $NUMA $ARANGOSH \
       -c etc${PS}testing${PS}arangosh.conf \
       --log.level warning \
       --server.endpoint none \
       --javascript.allow-external-process-control true \
       --javascript.execute js${PS}client${PS}modules${PS}\@arangodb${PS}testutils${PS}unittest.js \
       -- \
       "$@" "${EXTRA_ARGS[@]}"
)
