@Q:
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      LET oneCity = (
        FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> OUTBOUND startCity
          GRAPH <span class="hljs-string">'routeplanner'</span> RETURN v._key
      )
        RETURN {<span class="hljs-attr">startCity</span>: startCity._key, <span class="hljs-attr">connectedCities</span>: oneCity}
@B
{
  <span class="hljs-string">"bonn"</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">"radius"</span>: <span class="hljs-number">400000</span>
}
@R
[
  {
    <span class="hljs-string">"startCity"</span>: <span class="hljs-string">"Cologne"</span>,
    <span class="hljs-string">"connectedCities"</span>: [
      <span class="hljs-string">"Lyon"</span>,
      <span class="hljs-string">"Paris"</span>
    ]
  },
  {
    <span class="hljs-string">"startCity"</span>: <span class="hljs-string">"Hamburg"</span>,
    <span class="hljs-string">"connectedCities"</span>: [
      <span class="hljs-string">"Cologne"</span>,
      <span class="hljs-string">"Paris"</span>,
      <span class="hljs-string">"Lyon"</span>
    ]
  }
]