#- * - mode : CMAKE; - * -

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin/")

################################################################################
## BISON/FLEX
################################################################################

#note that we check - in the generated FLEX / BISON files, therefore they are
#generate inside the source tree

if (USE_MAINTAINER_MODE AND NOT MSVC)
  set_directory_properties(PROPERTIES CLEAN_NO_CUSTOM "On")

  add_custom_command(
    OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/Aql/tokens.cpp
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    COMMAND ${FLEX_EXECUTABLE} -L -oAql/tokens.cpp Aql/tokens.ll
    MAIN_DEPENDENCY ${CMAKE_CURRENT_SOURCE_DIR}/Aql/tokens.ll
    VERBATIM
  )

  add_custom_command(
    OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/Aql/grammar.cpp
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    COMMAND ${CMAKE_SOURCE_DIR}/utils/bison-c.sh
      ${BISON_EXECUTABLE} Aql/grammar.cpp Aql/grammar.y
    MAIN_DEPENDENCY ${CMAKE_CURRENT_SOURCE_DIR}/Aql/grammar.y
    VERBATIM
  )

  add_custom_target(clean_aql_autogenerated
    COMMAND rm -f Aql/tokens.cpp Aql/grammar.cpp Aql/grammar.hpp
  )

  list(APPEND CLEAN_AUTOGENERATED_FILES clean_aql_autogenerated)
  set(CLEAN_AUTOGENERATED_FILES ${CLEAN_AUTOGENERATED_FILES} PARENT_SCOPE)
endif ()

if (CMAKE_COMPILER_IS_GNUCC)
  set_source_files_properties(Aql/tokens.cpp PROPERTIES COMPILE_FLAGS -Wno-sign-compare)
endif ()

################################################################################
## IResearch
################################################################################

list(APPEND ARANGO_IRESEARCH_HEADERS
  IResearch/ApplicationServerHelper.h
  IResearch/AqlHelper.h
  IResearch/ExpressionFilter.h
  IResearch/Geo.h
  IResearch/GeoAnalyzer.h
  IResearch/GeoFilter.h
  IResearch/IResearchAnalyzerFeature.h
  IResearch/IResearchAqlAnalyzer.h
  IResearch/IResearchCommon.h
  IResearch/IResearchCompression.h
  IResearch/IResearchDataStore.h
  IResearch/IResearchDataStoreMeta.h
  IResearch/IResearchDocument.h
  IResearch/IResearchExpressionContext.h
  IResearch/IResearchFeature.h
  IResearch/IResearchFilterFactory.h
  IResearch/IResearchFilterOptimization.h
  IResearch/IResearchIdentityAnalyzer.h
  IResearch/IResearchInvertedIndex.h
  IResearch/IResearchInvertedIndexMeta.h
  IResearch/IResearchKludge.h
  IResearch/IResearchLink.h
  IResearch/IResearchLinkCoordinator.h
  IResearch/IResearchLinkHelper.h
  IResearch/IResearchLinkMeta.h
  IResearch/IResearchOrderFactory.h
  IResearch/IResearchPDP.h
  IResearch/IResearchPrimaryKeyFilter.h
  IResearch/IResearchRocksDBEncryption.h
  IResearch/IResearchRocksDBInvertedIndex.h
  IResearch/IResearchRocksDBLink.h
  IResearch/IResearchRocksDBRecoveryHelper.h
  IResearch/IResearchVPackComparer.h
  IResearch/IResearchView.h
  IResearch/IResearchViewCoordinator.h
  IResearch/IResearchViewMeta.h
  IResearch/IResearchViewSort.h
  IResearch/IResearchViewStoredValues.h
  IResearch/Search.h
  IResearch/VelocyPackHelper.h
  IResearch/ViewSnapshot.h
  RestHandler/RestAnalyzerHandler.h
  )

list(APPEND ARANGO_IRESEARCH_SOURCES
  IResearch/ApplicationServerHelper.cpp
  IResearch/AqlHelper.cpp
  IResearch/ExpressionFilter.cpp
  IResearch/Geo.cpp
  IResearch/GeoAnalyzer.cpp
  IResearch/GeoFilter.cpp
  IResearch/IResearchAnalyzerFeature.cpp
  IResearch/IResearchAqlAnalyzer.cpp
  IResearch/IResearchCommon.cpp
  IResearch/IResearchCompression.cpp
  IResearch/IResearchDataStore.cpp
  IResearch/IResearchDataStoreMeta.cpp
  IResearch/IResearchDocument.cpp
  IResearch/IResearchExpressionContext.cpp
  IResearch/IResearchFeature.cpp
  IResearch/IResearchFilterFactory.cpp
  IResearch/IResearchFilterOptimization.cpp
  IResearch/IResearchIdentityAnalyzer.cpp
  IResearch/IResearchInvertedIndex.cpp
  IResearch/IResearchInvertedIndexMeta.cpp
  IResearch/IResearchKludge.cpp
  IResearch/IResearchLink.cpp
  IResearch/IResearchLinkCoordinator.cpp
  IResearch/IResearchLinkHelper.cpp
  IResearch/IResearchLinkMeta.cpp
  IResearch/IResearchOrderFactory.cpp
  IResearch/IResearchPDP.cpp
  IResearch/IResearchPrimaryKeyFilter.cpp
  IResearch/IResearchRocksDBEncryption.cpp
  IResearch/IResearchRocksDBInvertedIndex.cpp
  IResearch/IResearchRocksDBLink.cpp
  IResearch/IResearchRocksDBRecoveryHelper.cpp
  IResearch/IResearchVPackComparer.cpp
  IResearch/IResearchView.cpp
  IResearch/IResearchViewCoordinator.cpp
  IResearch/IResearchViewMeta.cpp
  IResearch/IResearchViewSort.cpp
  IResearch/IResearchViewStoredValues.cpp
  IResearch/Search.cpp
  IResearch/VelocyPackHelper.cpp
  IResearch/ViewSnapshot.cpp
  RestHandler/RestAnalyzerHandler.cpp
  )

add_library(arango_iresearch STATIC
  ${ARANGO_IRESEARCH_HEADERS}
  ${ARANGO_IRESEARCH_SOURCES}
  )

target_compile_definitions(arango_iresearch
  PUBLIC "$<$<CONFIG:Debug>:IRESEARCH_DEBUG=1>"
)

set(IRESEARCH_TARGET_DEPENDENCY iresearch-static) # use static to match ArangoDB


get_target_property(IRESEARCH_INCLUDE
  ${IRESEARCH_TARGET_DEPENDENCY} INCLUDE_DIRECTORIES)

target_include_directories(arango_iresearch
  PUBLIC ${IRESEARCH_INCLUDE}
)

if (USE_ENTERPRISE)
  target_include_directories(arango_iresearch
    PUBLIC "${PROJECT_SOURCE_DIR}/${ENTERPRISE_INCLUDE_DIR}"
  )
endif()

target_link_libraries(arango_iresearch
  ${IRESEARCH_TARGET_DEPENDENCY}
  s2 # needed for some includes
  boost_locale # required by iResearch
  boost_thread # required by IResearchView upgrade_mutex
)

add_dependencies(arango_iresearch
  ${IRESEARCH_TARGET_DEPENDENCY}
  v8_build # for ICU required by iResearch
)

################################################################################
## arangod
################################################################################

if (MSVC AND NOT(SKIP_PACKAGING))
  generate_product_version(ProductVersionFiles
    NAME arangod
    FILE_DESCRIPTION ${ARANGODB_FRIENDLY_STRING}
    ICON ${ARANGO_ICON}
    VERSION_MAJOR ${CPACK_PACKAGE_VERSION_MAJOR}
    VERSION_MINOR ${CPACK_PACKAGE_VERSION_MINOR}
    VERSION_PATCH ${CPACK_PACKAGE_VERSION_PATCH}
    VERSION_REVISION ${BUILD_ID}
  )
endif ()

set(LIB_ARANGOSERVER_SOURCES
  Actions/ActionFeature.cpp
  Actions/RestActionHandler.cpp
  Actions/actions.cpp
  Auth/Common.cpp
  Auth/TokenCache.cpp
  Auth/User.cpp
  Auth/UserManager.cpp
  Cluster/Action.cpp
  Cluster/ActionBase.cpp
  Cluster/ActionDescription.cpp
  Cluster/AgencyCache.cpp
  Cluster/AgencyCallback.cpp
  Cluster/AgencyCallbackRegistry.cpp
  Cluster/AutoRebalance.cpp
  Cluster/ClusterCollectionCreationInfo.cpp
  Cluster/ClusterFeature.cpp
  Cluster/ClusterHelpers.cpp
  Cluster/ClusterInfo.cpp
  Cluster/ClusterTrxMethods.cpp
  Cluster/ClusterTypes.cpp
  Cluster/ClusterUpgradeFeature.cpp
  Cluster/CollectionInfoCurrent.cpp
  Cluster/CreateCollection.cpp
  Cluster/CreateDatabase.cpp
  Cluster/DBServerAgencySync.cpp
  Cluster/DropCollection.cpp
  Cluster/DropDatabase.cpp
  Cluster/DropIndex.cpp
  Cluster/EnsureIndex.cpp
  Cluster/FailureOracleFeature.cpp
  Cluster/FollowerInfo.cpp
  Cluster/HeartbeatThread.cpp
  Cluster/Maintenance.cpp
  Cluster/MaintenanceFeature.cpp
  Cluster/MaintenanceRestHandler.cpp
  Cluster/MaintenanceWorker.cpp
  Cluster/RebootTracker.cpp
  Cluster/ReplicationTimeoutFeature.cpp
  Cluster/ResignShardLeadership.cpp
  Cluster/RestAgencyCallbacksHandler.cpp
  Cluster/RestClusterHandler.cpp
  Cluster/ServerDefaults.cpp
  Cluster/ServerState.cpp
  Cluster/SynchronizeShard.cpp
  Cluster/TakeoverShardLeadership.cpp
  Cluster/UpdateCollection.cpp
  Cluster/UpdateReplicatedLogAction.cpp
  Cluster/UpdateReplicatedStateAction.cpp
  FeaturePhases/AgencyFeaturePhase.cpp
  FeaturePhases/AqlFeaturePhase.cpp
  FeaturePhases/BasicFeaturePhaseServer.cpp
  FeaturePhases/ClusterFeaturePhase.cpp
  FeaturePhases/DatabaseFeaturePhase.cpp
  FeaturePhases/FinalFeaturePhase.cpp
  FeaturePhases/FoxxFeaturePhase.cpp
  FeaturePhases/ServerFeaturePhase.cpp
  FeaturePhases/V8FeaturePhase.cpp
  GeneralServer/Acceptor.cpp
  GeneralServer/AcceptorTcp.cpp
  GeneralServer/AsyncJobManager.cpp
  GeneralServer/AuthenticationFeature.cpp
  GeneralServer/CommTask.cpp
  GeneralServer/GeneralCommTask.cpp
  GeneralServer/GeneralServer.cpp
  GeneralServer/GeneralServerFeature.cpp
  GeneralServer/H2CommTask.cpp
  GeneralServer/HttpCommTask.cpp
  GeneralServer/IoContext.cpp
  GeneralServer/RequestLane.cpp
  GeneralServer/RestHandler.cpp
  GeneralServer/RestHandlerFactory.cpp
  GeneralServer/ServerSecurityFeature.cpp
  GeneralServer/SslServerFeature.cpp
  GeneralServer/VstCommTask.cpp
  RestHandler/RestAdminClusterHandler.cpp
  RestHandler/RestAdminDatabaseHandler.cpp
  RestHandler/RestAdminExecuteHandler.cpp
  RestHandler/RestAdminLogHandler.cpp
  RestHandler/RestAdminRoutingHandler.cpp
  RestHandler/RestAdminServerHandler.cpp
  RestHandler/RestAdminStatisticsHandler.cpp
  RestHandler/RestAqlFunctionsHandler.cpp
  RestHandler/RestAqlUserFunctionsHandler.cpp
  RestHandler/RestAuthHandler.cpp
  RestHandler/RestAuthReloadHandler.cpp
  RestHandler/RestBaseHandler.cpp
  RestHandler/RestBatchHandler.cpp
  RestHandler/RestCompactHandler.cpp
  RestHandler/RestCursorHandler.cpp
  RestHandler/RestDatabaseHandler.cpp
  RestHandler/RestDebugHandler.cpp
  RestHandler/RestDocumentHandler.cpp
  RestHandler/RestEdgesHandler.cpp
  RestHandler/RestEndpointHandler.cpp
  RestHandler/RestEngineHandler.cpp
  RestHandler/RestExplainHandler.cpp
  RestHandler/RestImportHandler.cpp
  RestHandler/RestIndexHandler.cpp
  RestHandler/RestJobHandler.cpp
  RestHandler/RestLicenseHandler.cpp
  RestHandler/RestQueryCacheHandler.cpp
  RestHandler/RestQueryHandler.cpp
  RestHandler/RestReplicatedStateHandler.cpp
  RestHandler/RestShutdownHandler.cpp
  RestHandler/RestSimpleHandler.cpp
  RestHandler/RestSimpleQueryHandler.cpp
  RestHandler/RestStatusHandler.cpp
  RestHandler/RestSupervisionStateHandler.cpp
  RestHandler/RestSupportInfoHandler.cpp
  RestHandler/RestSystemReportHandler.cpp
  RestHandler/RestTasksHandler.cpp
  RestHandler/RestTimeHandler.cpp
  RestHandler/RestTransactionHandler.cpp
  RestHandler/RestTtlHandler.cpp
  RestHandler/RestUploadHandler.cpp
  RestHandler/RestUsersHandler.cpp
  RestHandler/RestVersionHandler.cpp
  RestHandler/RestViewHandler.cpp
  RestHandler/RestVocbaseBaseHandler.cpp
  RestHandler/RestWalAccessHandler.cpp
  RestServer/AqlFeature.cpp
  RestServer/BootstrapFeature.cpp
  RestServer/CheckVersionFeature.cpp
  RestServer/ConsoleFeature.cpp
  RestServer/ConsoleThread.cpp
  RestServer/CpuUsageFeature.cpp
  RestServer/DatabaseFeature.cpp
  RestServer/DatabasePathFeature.cpp
  RestServer/EndpointFeature.cpp
  RestServer/EnvironmentFeature.cpp
  RestServer/FileDescriptorsFeature.cpp
  RestServer/FlushFeature.cpp
  RestServer/FortuneFeature.cpp
  RestServer/FrontendFeature.cpp
  RestServer/InitDatabaseFeature.cpp
  RestServer/LanguageCheckFeature.cpp
  RestServer/LockfileFeature.cpp
  RestServer/LogBufferFeature.cpp
  RestServer/MaxMapCountFeature.cpp
  RestServer/NonceFeature.cpp
  RestServer/QueryRegistryFeature.cpp
  RestServer/PrivilegeFeature.cpp
  RestServer/ScriptFeature.cpp
  RestServer/ServerFeature.cpp
  RestServer/ServerIdFeature.cpp
  RestServer/SharedPRNGFeature.cpp
  RestServer/SoftShutdownFeature.cpp
  RestServer/SystemDatabaseFeature.cpp
  RestServer/TemporaryStorageFeature.cpp
  RestServer/TimeZoneFeature.cpp
  RestServer/TtlFeature.cpp
  RestServer/UpgradeFeature.cpp
  RestServer/ViewTypesFeature.cpp
  RestServer/VocbaseContext.cpp
  Scheduler/Scheduler.cpp
  Scheduler/SchedulerFeature.cpp
  Scheduler/SupervisedScheduler.cpp
  Sharding/ShardDistributionReporter.cpp
  Sharding/ShardingFeature.cpp
  Sharding/ShardingInfo.cpp
  Sharding/ShardingStrategy.cpp
  Sharding/ShardingStrategyDefault.cpp
  Statistics/ConnectionStatistics.cpp
  Statistics/Descriptions.cpp
  Statistics/RequestStatistics.cpp
  Statistics/ServerStatistics.cpp
  Statistics/StatisticsFeature.cpp
  Statistics/StatisticsWorker.cpp
  Transaction/BatchOptions.cpp
  Transaction/ClusterUtils.cpp
  Transaction/Context.cpp
  Transaction/CountCache.cpp
  Transaction/Helpers.cpp
  Transaction/Manager.cpp
  Transaction/ManagedContext.cpp
  Transaction/ManagerFeature.cpp
  Transaction/Methods.cpp
  Transaction/Options.cpp
  Transaction/ReplicatedContext.cpp
  Transaction/SmartContext.cpp
  Transaction/StandaloneContext.cpp
  Transaction/Status.cpp
)

if (MSVC)
  list(APPEND LIB_ARANGOSERVER_SOURCES RestServer/WindowsServiceFeature.cpp)
endif()

if (USE_MAINTAINER_MODE)
  set(LIB_ARANGOSERVER_SOURCES ${LIB_ARANGOSERVER_SOURCES} RestHandler/RestTestHandler.cpp)
endif()

if (NOT MSVC)
  set(LIB_ARANGOSERVER_SOURCES ${LIB_ARANGOSERVER_SOURCES}
    GeneralServer/AcceptorUnixDomain.cpp
    RestServer/DaemonFeature.cpp
    RestServer/SupervisorFeature.cpp)
endif()

add_library(arango_zkd STATIC Zkd/ZkdHelper.cpp)

target_link_libraries(arango_zkd arango)

add_library(arango_restart_action STATIC
  RestServer/RestartAction.cpp
)

add_library(arangoserver STATIC
  ${LIB_ARANGOSERVER_SOURCES}
)

# Note that arango_geo publicly exports the /J compile option for MSVC, because
# s2 requires /J to be set on Windows.
# /J makes char unsigned.
# Thus all libraries depending on arango_geo will be compiled with /J (and need
# to, if they include s2 headers).
# I think it would safer to compile everything with /J, so we would not get a
# mixture of signed and unsigned char interpretations in the same binary.
# However, just setting
#   add_compile_options(/J)
# does not work, either, because
# C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\atlmfc\include\atldef.h(94): fatal error C1189: #error:  ATL does not support compilation with /J or _CHAR_UNSIGNED flag enabled [C:\vm04-windows\oskar\work\ArangoDB\build\lib\arango.vcxproj]
# .

target_link_libraries(arango_geo s2)

target_link_libraries(arango_iresearch arango_indexes)
target_link_libraries(arango_iresearch arango_cluster_engine)
target_link_libraries(arango_iresearch arango_vocbase)

target_link_libraries(arangoserver arango_agency)
target_link_libraries(arangoserver arango_aql)
target_link_libraries(arangoserver arango_cluster_engine)
target_link_libraries(arangoserver arango_cluster_methods)
target_link_libraries(arangoserver arango_common_rest_handler)
target_link_libraries(arangoserver arango_geo)
target_link_libraries(arangoserver arango_graph)
target_link_libraries(arangoserver arango_indexes)
target_link_libraries(arangoserver arango_iresearch)
target_link_libraries(arangoserver arango_metrics)
target_link_libraries(arangoserver arango_network)
target_link_libraries(arangoserver arango_pregel)
target_link_libraries(arangoserver arango_replication)
target_link_libraries(arangoserver arango_storage_engine)
target_link_libraries(arangoserver arango_utils)
target_link_libraries(arangoserver arango_v8server)
target_link_libraries(arangoserver arango_vocbase)
target_link_libraries(arangoserver boost_boost)

target_link_libraries(arangoserver
  ${MSVC_LIBS}
)

if (MSVC)
  target_link_libraries(arangoserver Bcrypt.lib)
endif()

add_executable(${BIN_ARANGOD}
  RestServer/arangod.cpp
  ../cmake/activeCodePage.manifest
  ${ProductVersionFiles}
)

target_link_libraries(${BIN_ARANGOD}
  arangoserver
)

target_compile_features(${BIN_ARANGOD} PRIVATE cxx_constexpr)

install(
  TARGETS ${BIN_ARANGOD}
  RUNTIME DESTINATION ${CMAKE_INSTALL_SBINDIR}
)

install_config(arangod)

if (NOT USE_PRECOMPILED_V8)
  add_dependencies(arangod zlibstatic v8_build arango_iresearch)
else ()
  add_dependencies(arangod zlibstatic arango_iresearch)
endif ()

if (USE_JEMALLOC)
  add_dependencies(arangod jemalloc_build)
endif ()

# TODO move CMAKE_DEPRECATE_OPTIONS to presets
if (USE_FAIL_ON_WARNINGS)
  if (MSVC)
    list(APPEND ${CMAKE_DEPRECATE_OPTIONS} /WX /D_WINSOCK_DEPRECATED_NO_WARNINGS)
    if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang") # clang-cl.exe
      # There's a warning about /MP being unused if compiling only a single file
      list(APPEND ${CMAKE_DEPRECATE_OPTIONS} -Wno-unused-command-line-argument)
    endif()
  else ()
    list(APPEND ${CMAKE_DEPRECATE_OPTIONS} -Werror -Wno-error=deprecated-declarations)
  endif ()
endif ()

foreach(TARGET
  arango_iresearch
  arangod
  arangoserver
)
  target_include_directories(${TARGET} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
  target_include_directories(${TARGET} PRIVATE "${PROJECT_SOURCE_DIR}/${ENTERPRISE_INCLUDE_DIR}")

  target_compile_options(${TARGET} PRIVATE
	  ${CMAKE_DEPRECATE_OPTION})
endforeach()

################################################################################
## arango-secure-installation
################################################################################

install_command_alias(${BIN_ARANGOD}
  ${CMAKE_INSTALL_SBINDIR}
  arango-secure-installation
)

install_config(arango-secure-installation)

################################################################################
## arango-init-database
################################################################################

install_command_alias(${BIN_ARANGOD}
  ${CMAKE_INSTALL_SBINDIR}
  arango-init-database
)

install_config(arango-init-database)

add_subdirectory(Agency)
add_subdirectory(Aql)
add_subdirectory(Cache)
add_subdirectory(Cluster)
add_subdirectory(ClusterEngine)
add_subdirectory(Graph)
add_subdirectory(Indexes)
add_subdirectory(Metrics)
add_subdirectory(Network)
add_subdirectory(Pregel)
add_subdirectory(Replication)
add_subdirectory(Replication2)
add_subdirectory(RestHandler)
add_subdirectory(RocksDBEngine)
add_subdirectory(StorageEngine)
add_subdirectory(Utils)
add_subdirectory(V8Server)
add_subdirectory(VocBase)
